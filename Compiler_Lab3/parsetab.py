
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightASSIGNOPleftORleftANDleftRELOPleftPLUSMINUSleftSTARDIVrightNOTleftDOTLBRBLPRPnonassocif_thennonassocELSEnonassocSTRUCTRETURNWHILEINT FLOAT ID SEMI COMMA ASSIGNOP RELOP PLUS MINUS STAR DIV AND OR DOT NOT LP RP LB RB LC RC RETURN IF WHILE ELSE STRUCT TYPEProgram : ExtDefListExtDefList\t: ExtDef ExtDefList\n\t           \t\t| emptyExtDef\t:\tSpecifier SEMIExtDef :\tSpecifier FunDec CompStExtDef : Specifier FunDec SEMIExtDef\t:\tSpecifier ExtDecList SEMIExtDecList : VarDecExtDecList : VarDec COMMA ExtDecList\t Specifier : TYPESpecifier : StructSpecifierStructSpecifier : STRUCT OptTag LC DefList RCStructSpecifier : STRUCT TagOptTag : IDOptTag : emptyTag :\tIDVarDec : IDVarDec : VarDec LB INT RBFunDec : ID LP VarList RPFunDec : ID LP RPVarList : ParamDec COMMA VarListVarList : ParamDecParamDec\t:\tSpecifier VarDecCompSt\t: LC DefList StmtList RCStmtList\t: Stmt StmtList\n\t            | emptyStmt :\tExp SEMIStmt : CompStStmt : IF LP Exp RP Stmt %prec if_thenStmt : WHILE LP Exp RP StmtStmt : IF LP Exp RP Stmt ELSE StmtStmt : RETURN Exp SEMIDefList\t: Def DefList \n\t            | emptyDef : Specifier DecList SEMIDecList\t:\tDecDecList\t: Dec COMMA DecListDec\t:\tVarDecDec\t: VarDec ASSIGNOP Exp Exp : Exp ASSIGNOP ExpExp : Exp AND ExpExp : Exp OR ExpExp : Exp RELOP ExpExp : Exp PLUS ExpExp : Exp MINUS ExpExp : Exp STAR ExpExp : Exp DIV ExpExp : LP Exp RPExp : MINUS ExpExp : NOT ExpExp : ID LP Args RPExp : ID LP RPExp : Exp LB Exp RBExp : Exp DOT IDExp : IDExp : INTExp : FLOATArgs : Exp COMMA ArgsArgs : Expempty :ExtDef : error SEMIFunDec : error RPCompSt : error RCStmt : error SEMIDef : Specifier error SEMI'
    
_lr_action_items = {'RC':([23,25,31,33,34,35,36,44,49,52,54,55,57,59,70,73,75,77,79,93,102,121,122,124,],[-60,36,-60,-60,-34,-60,-63,69,-33,-60,-26,-28,77,36,-35,-65,-25,-24,-64,-27,-32,-29,-30,-31,]),'MINUS':([23,33,34,35,36,49,50,51,52,53,55,56,58,60,62,64,70,71,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,96,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,123,124,],[-60,-60,-34,51,-63,-33,-57,51,51,-56,-28,-55,51,51,51,85,-35,51,-65,-49,51,-24,85,-64,85,51,-50,51,51,51,51,51,51,51,51,51,-27,51,85,85,-52,-48,-32,85,85,85,-45,85,85,85,-44,-46,85,-54,-47,-51,51,51,51,-53,-29,-30,51,-31,]),'OR':([50,53,56,64,74,78,80,82,96,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,119,],[-57,-56,-55,87,-49,87,87,-50,87,87,-52,-48,87,87,87,-45,-43,-42,-41,-44,-46,87,-54,-47,-51,-53,]),'INT':([23,30,33,34,35,36,49,51,52,55,58,60,62,70,71,73,76,77,79,81,83,84,85,86,87,88,89,90,91,93,94,102,116,117,118,121,122,123,124,],[-60,43,-60,-34,53,-63,-33,53,53,-28,53,53,53,-35,53,-65,53,-24,-64,53,53,53,53,53,53,53,53,53,53,-27,53,-32,53,53,53,-29,-30,53,-31,]),'RB':([43,50,53,56,74,82,100,101,105,106,107,108,109,110,111,112,113,114,115,119,],[68,-57,-56,-55,-49,-50,-52,-48,-40,-45,-43,-42,-41,-44,-46,119,-54,-47,-51,-53,]),'error':([0,1,3,7,9,10,11,16,18,21,22,23,24,26,28,32,33,34,35,36,38,49,52,55,66,69,70,73,77,79,93,102,117,118,121,122,123,124,],[2,12,-11,2,-10,-4,25,-61,-16,-13,-5,-60,-6,-62,-7,48,-60,-34,59,-63,-20,-33,59,-28,-19,-12,-35,-65,-24,-64,-27,-32,59,59,-29,-30,59,-31,]),'AND':([50,53,56,64,74,78,80,82,96,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,119,],[-57,-56,-55,88,-49,88,88,-50,88,88,-52,-48,88,88,88,-45,-43,88,-41,-44,-46,88,-54,-47,-51,-53,]),'STAR':([50,53,56,64,74,78,80,82,96,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,119,],[-57,-56,-55,90,90,90,90,-50,90,90,-52,-48,90,90,90,90,90,90,90,90,-46,90,-54,-47,-51,-53,]),'LC':([8,11,18,19,20,23,26,33,34,35,36,38,49,52,55,66,70,73,77,79,93,102,117,118,121,122,123,124,],[-60,23,-14,31,-15,-60,-62,-60,-34,23,-63,-20,-33,23,-28,-19,-35,-65,-24,-64,-27,-32,23,23,-29,-30,23,-31,]),'ID':([1,3,8,9,18,21,23,29,32,33,34,35,36,37,49,51,52,55,58,60,62,69,70,71,72,73,76,77,79,81,83,84,85,86,87,88,89,90,91,92,93,94,102,116,117,118,121,122,123,124,],[13,-11,18,-10,-16,-13,-60,41,41,-60,-34,56,-63,41,-33,56,56,-28,56,56,56,-12,-35,56,41,-65,56,-24,-64,56,56,56,56,56,56,56,56,56,56,113,-27,56,-32,56,56,56,-29,-30,56,-31,]),'DOT':([50,53,56,64,74,78,80,82,96,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,119,],[-57,-56,-55,92,92,92,92,92,92,92,-52,-48,92,92,92,92,92,92,92,92,92,92,-54,92,-51,-53,]),'STRUCT':([0,7,10,16,22,23,24,27,28,31,33,36,67,70,73,77,],[8,8,-4,-61,-5,8,-6,8,-7,8,8,-63,8,-35,-65,-24,]),'LP':([13,23,33,34,35,36,49,51,52,55,56,58,60,61,62,63,70,71,73,76,77,79,81,83,84,85,86,87,88,89,90,91,93,94,102,116,117,118,121,122,123,124,],[27,-60,-60,-34,58,-63,-33,58,58,-28,76,58,58,81,58,83,-35,58,-65,58,-24,-64,58,58,58,58,58,58,58,58,58,58,-27,58,-32,58,58,58,-29,-30,58,-31,]),'COMMA':([13,15,40,41,46,47,50,53,56,65,68,74,82,96,99,100,101,105,106,107,108,109,110,111,113,114,115,119,],[-17,29,67,-17,-38,72,-57,-56,-55,-23,-18,-49,-50,-39,116,-52,-48,-40,-45,-43,-42,-41,-44,-46,-54,-47,-51,-53,]),'FLOAT':([23,33,34,35,36,49,51,52,55,58,60,62,70,71,73,76,77,79,81,83,84,85,86,87,88,89,90,91,93,94,102,116,117,118,121,122,123,124,],[-60,-60,-34,50,-63,-33,50,50,-28,50,50,50,-35,50,-65,50,-24,-64,50,50,50,50,50,50,50,50,50,50,-27,50,-32,50,50,50,-29,-30,50,-31,]),'ASSIGNOP':([41,46,50,53,56,64,68,74,78,80,82,96,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,119,],[-17,71,-57,-56,-55,84,-18,-49,84,84,-50,84,84,-52,-48,84,84,84,-45,-43,-42,-41,-44,-46,84,-54,-47,-51,-53,]),'RETURN':([23,33,34,35,36,49,52,55,70,73,77,79,93,102,117,118,121,122,123,124,],[-60,-60,-34,60,-63,-33,60,-28,-35,-65,-24,-64,-27,-32,60,60,-29,-30,60,-31,]),'IF':([23,33,34,35,36,49,52,55,70,73,77,79,93,102,117,118,121,122,123,124,],[-60,-60,-34,61,-63,-33,61,-28,-35,-65,-24,-64,-27,-32,61,61,-29,-30,61,-31,]),'NOT':([23,33,34,35,36,49,51,52,55,58,60,62,70,71,73,76,77,79,81,83,84,85,86,87,88,89,90,91,93,94,102,116,117,118,121,122,123,124,],[-60,-60,-34,62,-63,-33,62,62,-28,62,62,62,-35,62,-65,62,-24,-64,62,62,62,62,62,62,62,62,62,62,-27,62,-32,62,62,62,-29,-30,62,-31,]),'LB':([13,15,41,46,50,53,56,64,65,68,74,78,80,82,96,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,119,],[-17,30,-17,30,-57,-56,-55,91,30,-18,91,91,91,91,91,91,-52,-48,91,91,91,91,91,91,91,91,91,91,-54,91,-51,-53,]),'WHILE':([23,33,34,35,36,49,52,55,70,73,77,79,93,102,117,118,121,122,123,124,],[-60,-60,-34,63,-63,-33,63,-28,-35,-65,-24,-64,-27,-32,63,63,-29,-30,63,-31,]),'ELSE':([36,55,77,79,93,102,121,122,124,],[-63,-28,-24,-64,-27,-32,123,-30,-31,]),'PLUS':([50,53,56,64,74,78,80,82,96,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,119,],[-57,-56,-55,89,-49,89,89,-50,89,89,-52,-48,89,89,89,-45,89,89,89,-44,-46,89,-54,-47,-51,-53,]),'RELOP':([50,53,56,64,74,78,80,82,96,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,119,],[-57,-56,-55,86,-49,86,86,-50,86,86,-52,-48,86,86,86,-45,-43,86,86,-44,-46,86,-54,-47,-51,-53,]),'$end':([0,4,5,6,7,10,16,17,22,24,28,36,77,],[-60,-1,0,-3,-60,-4,-61,-2,-5,-6,-7,-63,-24,]),'SEMI':([1,2,3,9,11,13,14,15,18,21,26,38,41,42,45,46,47,48,50,53,56,59,64,66,68,69,74,80,82,96,97,100,101,105,106,107,108,109,110,111,113,114,115,119,],[10,16,-11,-10,24,-17,28,-8,-16,-13,-62,-20,-17,-9,70,-38,-36,73,-57,-56,-55,79,93,-19,-18,-12,-49,102,-50,-39,-37,-52,-48,-40,-45,-43,-42,-41,-44,-46,-54,-47,-51,-53,]),'RP':([12,27,39,40,41,50,53,56,65,68,74,76,78,82,95,98,99,100,101,103,104,105,106,107,108,109,110,111,113,114,115,119,120,],[26,38,66,-22,-17,-57,-56,-55,-23,-18,-49,100,101,-50,-21,115,-59,-52,-48,117,118,-40,-45,-43,-42,-41,-44,-46,-54,-47,-51,-53,-58,]),'DIV':([50,53,56,64,74,78,80,82,96,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,119,],[-57,-56,-55,94,94,94,94,-50,94,94,-52,-48,94,94,94,94,94,94,94,94,-46,94,-54,-47,-51,-53,]),'TYPE':([0,7,10,16,22,23,24,27,28,31,33,36,67,70,73,77,],[9,9,-4,-61,-5,9,-6,9,-7,9,9,-63,9,-35,-65,-24,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'VarDec':([1,29,32,37,72,],[15,15,46,65,46,]),'FunDec':([1,],[11,]),'StructSpecifier':([0,7,23,27,31,33,67,],[3,3,3,3,3,3,3,]),'Dec':([32,72,],[47,47,]),'Program':([0,],[5,]),'empty':([0,7,8,23,31,33,35,52,],[6,6,20,34,34,34,54,54,]),'Tag':([8,],[21,]),'Args':([76,116,],[98,120,]),'Def':([23,31,33,],[33,33,33,]),'OptTag':([8,],[19,]),'Stmt':([35,52,117,118,123,],[52,52,121,122,124,]),'StmtList':([35,52,],[57,75,]),'Specifier':([0,7,23,27,31,33,67,],[1,1,32,37,32,32,37,]),'DecList':([32,72,],[45,97,]),'VarList':([27,67,],[39,95,]),'ParamDec':([27,67,],[40,40,]),'ExtDefList':([0,7,],[4,17,]),'CompSt':([11,35,52,117,118,123,],[22,55,55,55,55,55,]),'ExtDef':([0,7,],[7,7,]),'DefList':([23,31,33,],[35,44,49,]),'ExtDecList':([1,29,],[14,42,]),'Exp':([35,51,52,58,60,62,71,76,81,83,84,85,86,87,88,89,90,91,94,116,117,118,123,],[64,74,64,78,80,82,96,99,103,104,105,106,107,108,109,110,111,112,114,99,64,64,64,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Program","S'",1,None,None,None),
  ('Program -> ExtDefList','Program',1,'p_program','lab3.py',267),
  ('ExtDefList -> ExtDef ExtDefList','ExtDefList',2,'p_extdeflist','lab3.py',273),
  ('ExtDefList -> empty','ExtDefList',1,'p_extdeflist','lab3.py',274),
  ('ExtDef -> Specifier SEMI','ExtDef',2,'p_extdef_1','lab3.py',282),
  ('ExtDef -> Specifier FunDec CompSt','ExtDef',3,'p_extdef_2','lab3.py',300),
  ('ExtDef -> Specifier FunDec SEMI','ExtDef',3,'p_extdef_funcDec','lab3.py',321),
  ('ExtDef -> Specifier ExtDecList SEMI','ExtDef',3,'p_extdef_3','lab3.py',332),
  ('ExtDecList -> VarDec','ExtDecList',1,'p_extdeclist_1','lab3.py',373),
  ('ExtDecList -> VarDec COMMA ExtDecList','ExtDecList',3,'p_extdeclist_2','lab3.py',377),
  ('Specifier -> TYPE','Specifier',1,'p_specifier_TYPE','lab3.py',383),
  ('Specifier -> StructSpecifier','Specifier',1,'p_specifier_structspecifier','lab3.py',388),
  ('StructSpecifier -> STRUCT OptTag LC DefList RC','StructSpecifier',5,'p_structspecifier_1','lab3.py',394),
  ('StructSpecifier -> STRUCT Tag','StructSpecifier',2,'p_structspecifier_2','lab3.py',398),
  ('OptTag -> ID','OptTag',1,'p_opttag_ID','lab3.py',404),
  ('OptTag -> empty','OptTag',1,'p_opttag_empty','lab3.py',408),
  ('Tag -> ID','Tag',1,'p_tag','lab3.py',413),
  ('VarDec -> ID','VarDec',1,'p_vardec_ID','lab3.py',419),
  ('VarDec -> VarDec LB INT RB','VarDec',4,'p_vardec_vardeclbintrb','lab3.py',424),
  ('FunDec -> ID LP VarList RP','FunDec',4,'p_fundec_1','lab3.py',430),
  ('FunDec -> ID LP RP','FunDec',3,'p_fundec_2','lab3.py',434),
  ('VarList -> ParamDec COMMA VarList','VarList',3,'p_varlist_1','lab3.py',440),
  ('VarList -> ParamDec','VarList',1,'p_varlist_2','lab3.py',444),
  ('ParamDec -> Specifier VarDec','ParamDec',2,'p_paramdec','lab3.py',450),
  ('CompSt -> LC DefList StmtList RC','CompSt',4,'p_compst','lab3.py',456),
  ('StmtList -> Stmt StmtList','StmtList',2,'p_stmtlist','lab3.py',462),
  ('StmtList -> empty','StmtList',1,'p_stmtlist','lab3.py',463),
  ('Stmt -> Exp SEMI','Stmt',2,'p_stmt_1','lab3.py',472),
  ('Stmt -> CompSt','Stmt',1,'p_stmt_2','lab3.py',476),
  ('Stmt -> IF LP Exp RP Stmt','Stmt',5,'p_stmt_3','lab3.py',480),
  ('Stmt -> WHILE LP Exp RP Stmt','Stmt',5,'p_stmt_4','lab3.py',484),
  ('Stmt -> IF LP Exp RP Stmt ELSE Stmt','Stmt',7,'p_stmt_5','lab3.py',488),
  ('Stmt -> RETURN Exp SEMI','Stmt',3,'p_stmt_6','lab3.py',492),
  ('DefList -> Def DefList','DefList',2,'p_deflist','lab3.py',498),
  ('DefList -> empty','DefList',1,'p_deflist','lab3.py',499),
  ('Def -> Specifier DecList SEMI','Def',3,'p_def','lab3.py',508),
  ('DecList -> Dec','DecList',1,'p_declist_1','lab3.py',518),
  ('DecList -> Dec COMMA DecList','DecList',3,'p_declist_2','lab3.py',522),
  ('Dec -> VarDec','Dec',1,'p_dec_1','lab3.py',527),
  ('Dec -> VarDec ASSIGNOP Exp','Dec',3,'p_dec_2','lab3.py',531),
  ('Exp -> Exp ASSIGNOP Exp','Exp',3,'p_exp_ASSIGNOP','lab3.py',537),
  ('Exp -> Exp AND Exp','Exp',3,'p_exp_AND','lab3.py',541),
  ('Exp -> Exp OR Exp','Exp',3,'p_exp_OR','lab3.py',545),
  ('Exp -> Exp RELOP Exp','Exp',3,'p_exp_RELOP','lab3.py',549),
  ('Exp -> Exp PLUS Exp','Exp',3,'p_exp_PLUS','lab3.py',553),
  ('Exp -> Exp MINUS Exp','Exp',3,'p_exp_MINUS','lab3.py',557),
  ('Exp -> Exp STAR Exp','Exp',3,'p_exp_STAR','lab3.py',561),
  ('Exp -> Exp DIV Exp','Exp',3,'p_exp_DIV','lab3.py',565),
  ('Exp -> LP Exp RP','Exp',3,'p_exp_LPRP','lab3.py',569),
  ('Exp -> MINUS Exp','Exp',2,'p_exp_MINUS_2','lab3.py',573),
  ('Exp -> NOT Exp','Exp',2,'p_exp_NOT','lab3.py',577),
  ('Exp -> ID LP Args RP','Exp',4,'p_exp_IDLPRP','lab3.py',581),
  ('Exp -> ID LP RP','Exp',3,'p_exp_IDLPRP2','lab3.py',585),
  ('Exp -> Exp LB Exp RB','Exp',4,'p_exp_LBRB','lab3.py',589),
  ('Exp -> Exp DOT ID','Exp',3,'p_exp_DOTID','lab3.py',593),
  ('Exp -> ID','Exp',1,'p_exp_ID','lab3.py',597),
  ('Exp -> INT','Exp',1,'p_exp_INT','lab3.py',601),
  ('Exp -> FLOAT','Exp',1,'p_exp_FLOAT','lab3.py',605),
  ('Args -> Exp COMMA Args','Args',3,'p_args_1','lab3.py',611),
  ('Args -> Exp','Args',1,'p_args_2','lab3.py',615),
  ('empty -> <empty>','empty',0,'p_empty','lab3.py',621),
  ('ExtDef -> error SEMI','ExtDef',2,'p_extdef_error','lab3.py',643),
  ('FunDec -> error RP','FunDec',2,'p_fundec_error','lab3.py',647),
  ('CompSt -> error RC','CompSt',2,'p_compst_error','lab3.py',651),
  ('Stmt -> error SEMI','Stmt',2,'p_stmt_error','lab3.py',655),
  ('Def -> Specifier error SEMI','Def',3,'p_def_error','lab3.py',659),
]
