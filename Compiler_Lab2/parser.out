Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> Program
Rule 1     Program -> ExtDefList
Rule 2     ExtDefList -> ExtDef ExtDefList
Rule 3     ExtDefList -> empty
Rule 4     ExtDef -> Specifier SEMI
Rule 5     ExtDef -> Specifier FunDec CompSt
Rule 6     ExtDef -> Specifier FunDec SEMI
Rule 7     ExtDef -> Specifier ExtDecList SEMI
Rule 8     ExtDecList -> VarDec
Rule 9     ExtDecList -> VarDec COMMA ExtDecList
Rule 10    Specifier -> TYPE
Rule 11    Specifier -> StructSpecifier
Rule 12    StructSpecifier -> STRUCT OptTag LC DefList RC
Rule 13    StructSpecifier -> STRUCT Tag
Rule 14    OptTag -> ID
Rule 15    OptTag -> empty
Rule 16    Tag -> ID
Rule 17    VarDec -> ID
Rule 18    VarDec -> VarDec LB INT RB
Rule 19    FunDec -> ID LP VarList RP
Rule 20    FunDec -> ID LP RP
Rule 21    VarList -> ParamDec COMMA VarList
Rule 22    VarList -> ParamDec
Rule 23    ParamDec -> Specifier VarDec
Rule 24    CompSt -> LC DefList StmtList RC
Rule 25    StmtList -> Stmt StmtList
Rule 26    StmtList -> empty
Rule 27    Stmt -> Exp SEMI
Rule 28    Stmt -> CompSt
Rule 29    Stmt -> IF LP Exp RP Stmt
Rule 30    Stmt -> WHILE LP Exp RP Stmt
Rule 31    Stmt -> IF LP Exp RP Stmt ELSE Stmt
Rule 32    Stmt -> RETURN Exp SEMI
Rule 33    DefList -> Def DefList
Rule 34    DefList -> empty
Rule 35    Def -> Specifier DecList SEMI
Rule 36    DecList -> Dec
Rule 37    DecList -> Dec COMMA DecList
Rule 38    Dec -> VarDec
Rule 39    Dec -> VarDec ASSIGNOP Exp
Rule 40    Exp -> Exp ASSIGNOP Exp
Rule 41    Exp -> Exp AND Exp
Rule 42    Exp -> Exp OR Exp
Rule 43    Exp -> Exp RELOP Exp
Rule 44    Exp -> Exp PLUS Exp
Rule 45    Exp -> Exp MINUS Exp
Rule 46    Exp -> Exp STAR Exp
Rule 47    Exp -> Exp DIV Exp
Rule 48    Exp -> LP Exp RP
Rule 49    Exp -> MINUS Exp
Rule 50    Exp -> NOT Exp
Rule 51    Exp -> ID LP Args RP
Rule 52    Exp -> ID LP RP
Rule 53    Exp -> Exp LB Exp RB
Rule 54    Exp -> Exp DOT ID
Rule 55    Exp -> ID
Rule 56    Exp -> INT
Rule 57    Exp -> FLOAT
Rule 58    Args -> Exp COMMA Args
Rule 59    Args -> Exp
Rule 60    empty -> <empty>
Rule 61    ExtDef -> error SEMI
Rule 62    FunDec -> error RP
Rule 63    CompSt -> error RC
Rule 64    Stmt -> error SEMI
Rule 65    Def -> Specifier error SEMI

Terminals, with rules where they appear

AND                  : 41
ASSIGNOP             : 39 40
COMMA                : 9 21 37 58
DIV                  : 47
DOT                  : 54
ELSE                 : 31
FLOAT                : 57
ID                   : 14 16 17 19 20 51 52 54 55
IF                   : 29 31
INT                  : 18 56
LB                   : 18 53
LC                   : 12 24
LP                   : 19 20 29 30 31 48 51 52
MINUS                : 45 49
NOT                  : 50
OR                   : 42
PLUS                 : 44
RB                   : 18 53
RC                   : 12 24 63
RELOP                : 43
RETURN               : 32
RP                   : 19 20 29 30 31 48 51 52 62
SEMI                 : 4 6 7 27 32 35 61 64 65
STAR                 : 46
STRUCT               : 12 13
TYPE                 : 10
WHILE                : 30
error                : 61 62 63 64 65

Nonterminals, with rules where they appear

Args                 : 51 58
CompSt               : 5 28
Dec                  : 36 37
DecList              : 35 37
Def                  : 33
DefList              : 12 24 33
Exp                  : 27 29 30 31 32 39 40 40 41 41 42 42 43 43 44 44 45 45 46 46 47 47 48 49 50 53 53 54 58 59
ExtDecList           : 7 9
ExtDef               : 2
ExtDefList           : 1 2
FunDec               : 5 6
OptTag               : 12
ParamDec             : 21 22
Program              : 0
Specifier            : 4 5 6 7 23 35 65
Stmt                 : 25 29 30 31 31
StmtList             : 24 25
StructSpecifier      : 11
Tag                  : 13
VarDec               : 8 9 18 23 38 39
VarList              : 19 21
empty                : 3 15 26 34

Parsing method: LALR

state 0

    (0) S' -> . Program
    (1) Program -> . ExtDefList
    (2) ExtDefList -> . ExtDef ExtDefList
    (3) ExtDefList -> . empty
    (4) ExtDef -> . Specifier SEMI
    (5) ExtDef -> . Specifier FunDec CompSt
    (6) ExtDef -> . Specifier FunDec SEMI
    (7) ExtDef -> . Specifier ExtDecList SEMI
    (61) ExtDef -> . error SEMI
    (60) empty -> .
    (10) Specifier -> . TYPE
    (11) Specifier -> . StructSpecifier
    (12) StructSpecifier -> . STRUCT OptTag LC DefList RC
    (13) StructSpecifier -> . STRUCT Tag

    error           shift and go to state 4
    $end            reduce using rule 60 (empty -> .)
    TYPE            shift and go to state 9
    STRUCT          shift and go to state 3

    Program                        shift and go to state 1
    empty                          shift and go to state 2
    StructSpecifier                shift and go to state 6
    ExtDefList                     shift and go to state 5
    Specifier                      shift and go to state 7
    ExtDef                         shift and go to state 8

state 1

    (0) S' -> Program .



state 2

    (3) ExtDefList -> empty .

    $end            reduce using rule 3 (ExtDefList -> empty .)


state 3

    (12) StructSpecifier -> STRUCT . OptTag LC DefList RC
    (13) StructSpecifier -> STRUCT . Tag
    (14) OptTag -> . ID
    (15) OptTag -> . empty
    (16) Tag -> . ID
    (60) empty -> .

    ID              shift and go to state 12
    LC              reduce using rule 60 (empty -> .)

    empty                          shift and go to state 10
    OptTag                         shift and go to state 11
    Tag                            shift and go to state 13

state 4

    (61) ExtDef -> error . SEMI

    SEMI            shift and go to state 14


state 5

    (1) Program -> ExtDefList .

    $end            reduce using rule 1 (Program -> ExtDefList .)


state 6

    (11) Specifier -> StructSpecifier .

    error           reduce using rule 11 (Specifier -> StructSpecifier .)
    ID              reduce using rule 11 (Specifier -> StructSpecifier .)
    SEMI            reduce using rule 11 (Specifier -> StructSpecifier .)


state 7

    (4) ExtDef -> Specifier . SEMI
    (5) ExtDef -> Specifier . FunDec CompSt
    (6) ExtDef -> Specifier . FunDec SEMI
    (7) ExtDef -> Specifier . ExtDecList SEMI
    (19) FunDec -> . ID LP VarList RP
    (20) FunDec -> . ID LP RP
    (62) FunDec -> . error RP
    (8) ExtDecList -> . VarDec
    (9) ExtDecList -> . VarDec COMMA ExtDecList
    (17) VarDec -> . ID
    (18) VarDec -> . VarDec LB INT RB

    SEMI            shift and go to state 20
    ID              shift and go to state 16
    error           shift and go to state 15

    ExtDecList                     shift and go to state 17
    FunDec                         shift and go to state 18
    VarDec                         shift and go to state 19

state 8

    (2) ExtDefList -> ExtDef . ExtDefList
    (2) ExtDefList -> . ExtDef ExtDefList
    (3) ExtDefList -> . empty
    (4) ExtDef -> . Specifier SEMI
    (5) ExtDef -> . Specifier FunDec CompSt
    (6) ExtDef -> . Specifier FunDec SEMI
    (7) ExtDef -> . Specifier ExtDecList SEMI
    (61) ExtDef -> . error SEMI
    (60) empty -> .
    (10) Specifier -> . TYPE
    (11) Specifier -> . StructSpecifier
    (12) StructSpecifier -> . STRUCT OptTag LC DefList RC
    (13) StructSpecifier -> . STRUCT Tag

    error           shift and go to state 4
    $end            reduce using rule 60 (empty -> .)
    TYPE            shift and go to state 9
    STRUCT          shift and go to state 3

    ExtDefList                     shift and go to state 21
    ExtDef                         shift and go to state 8
    StructSpecifier                shift and go to state 6
    Specifier                      shift and go to state 7
    empty                          shift and go to state 2

state 9

    (10) Specifier -> TYPE .

    error           reduce using rule 10 (Specifier -> TYPE .)
    ID              reduce using rule 10 (Specifier -> TYPE .)
    SEMI            reduce using rule 10 (Specifier -> TYPE .)


state 10

    (15) OptTag -> empty .

    LC              reduce using rule 15 (OptTag -> empty .)


state 11

    (12) StructSpecifier -> STRUCT OptTag . LC DefList RC

    LC              shift and go to state 22


state 12

    (14) OptTag -> ID .
    (16) Tag -> ID .

    LC              reduce using rule 14 (OptTag -> ID .)
    SEMI            reduce using rule 16 (Tag -> ID .)
    ID              reduce using rule 16 (Tag -> ID .)
    error           reduce using rule 16 (Tag -> ID .)


state 13

    (13) StructSpecifier -> STRUCT Tag .

    error           reduce using rule 13 (StructSpecifier -> STRUCT Tag .)
    ID              reduce using rule 13 (StructSpecifier -> STRUCT Tag .)
    SEMI            reduce using rule 13 (StructSpecifier -> STRUCT Tag .)


state 14

    (61) ExtDef -> error SEMI .

    error           reduce using rule 61 (ExtDef -> error SEMI .)
    TYPE            reduce using rule 61 (ExtDef -> error SEMI .)
    STRUCT          reduce using rule 61 (ExtDef -> error SEMI .)
    $end            reduce using rule 61 (ExtDef -> error SEMI .)


state 15

    (62) FunDec -> error . RP

    RP              shift and go to state 23


state 16

    (19) FunDec -> ID . LP VarList RP
    (20) FunDec -> ID . LP RP
    (17) VarDec -> ID .

    LP              shift and go to state 24
    COMMA           reduce using rule 17 (VarDec -> ID .)
    LB              reduce using rule 17 (VarDec -> ID .)
    SEMI            reduce using rule 17 (VarDec -> ID .)


state 17

    (7) ExtDef -> Specifier ExtDecList . SEMI

    SEMI            shift and go to state 25


state 18

    (5) ExtDef -> Specifier FunDec . CompSt
    (6) ExtDef -> Specifier FunDec . SEMI
    (24) CompSt -> . LC DefList StmtList RC
    (63) CompSt -> . error RC

    SEMI            shift and go to state 29
    LC              shift and go to state 26
    error           shift and go to state 28

    CompSt                         shift and go to state 27

state 19

    (8) ExtDecList -> VarDec .
    (9) ExtDecList -> VarDec . COMMA ExtDecList
    (18) VarDec -> VarDec . LB INT RB

    SEMI            reduce using rule 8 (ExtDecList -> VarDec .)
    COMMA           shift and go to state 31
    LB              shift and go to state 30


state 20

    (4) ExtDef -> Specifier SEMI .

    error           reduce using rule 4 (ExtDef -> Specifier SEMI .)
    TYPE            reduce using rule 4 (ExtDef -> Specifier SEMI .)
    STRUCT          reduce using rule 4 (ExtDef -> Specifier SEMI .)
    $end            reduce using rule 4 (ExtDef -> Specifier SEMI .)


state 21

    (2) ExtDefList -> ExtDef ExtDefList .

    $end            reduce using rule 2 (ExtDefList -> ExtDef ExtDefList .)


state 22

    (12) StructSpecifier -> STRUCT OptTag LC . DefList RC
    (33) DefList -> . Def DefList
    (34) DefList -> . empty
    (35) Def -> . Specifier DecList SEMI
    (65) Def -> . Specifier error SEMI
    (60) empty -> .
    (10) Specifier -> . TYPE
    (11) Specifier -> . StructSpecifier
    (12) StructSpecifier -> . STRUCT OptTag LC DefList RC
    (13) StructSpecifier -> . STRUCT Tag

    RC              reduce using rule 60 (empty -> .)
    TYPE            shift and go to state 9
    STRUCT          shift and go to state 3

    DefList                        shift and go to state 32
    Specifier                      shift and go to state 34
    Def                            shift and go to state 35
    StructSpecifier                shift and go to state 6
    empty                          shift and go to state 33

state 23

    (62) FunDec -> error RP .

    SEMI            reduce using rule 62 (FunDec -> error RP .)
    LC              reduce using rule 62 (FunDec -> error RP .)
    error           reduce using rule 62 (FunDec -> error RP .)


state 24

    (19) FunDec -> ID LP . VarList RP
    (20) FunDec -> ID LP . RP
    (21) VarList -> . ParamDec COMMA VarList
    (22) VarList -> . ParamDec
    (23) ParamDec -> . Specifier VarDec
    (10) Specifier -> . TYPE
    (11) Specifier -> . StructSpecifier
    (12) StructSpecifier -> . STRUCT OptTag LC DefList RC
    (13) StructSpecifier -> . STRUCT Tag

    RP              shift and go to state 37
    TYPE            shift and go to state 9
    STRUCT          shift and go to state 3

    Specifier                      shift and go to state 38
    ParamDec                       shift and go to state 39
    VarList                        shift and go to state 36
    StructSpecifier                shift and go to state 6

state 25

    (7) ExtDef -> Specifier ExtDecList SEMI .

    error           reduce using rule 7 (ExtDef -> Specifier ExtDecList SEMI .)
    TYPE            reduce using rule 7 (ExtDef -> Specifier ExtDecList SEMI .)
    STRUCT          reduce using rule 7 (ExtDef -> Specifier ExtDecList SEMI .)
    $end            reduce using rule 7 (ExtDef -> Specifier ExtDecList SEMI .)


state 26

    (24) CompSt -> LC . DefList StmtList RC
    (33) DefList -> . Def DefList
    (34) DefList -> . empty
    (35) Def -> . Specifier DecList SEMI
    (65) Def -> . Specifier error SEMI
    (60) empty -> .
    (10) Specifier -> . TYPE
    (11) Specifier -> . StructSpecifier
    (12) StructSpecifier -> . STRUCT OptTag LC DefList RC
    (13) StructSpecifier -> . STRUCT Tag

    IF              reduce using rule 60 (empty -> .)
    WHILE           reduce using rule 60 (empty -> .)
    RETURN          reduce using rule 60 (empty -> .)
    error           reduce using rule 60 (empty -> .)
    LP              reduce using rule 60 (empty -> .)
    MINUS           reduce using rule 60 (empty -> .)
    NOT             reduce using rule 60 (empty -> .)
    ID              reduce using rule 60 (empty -> .)
    INT             reduce using rule 60 (empty -> .)
    FLOAT           reduce using rule 60 (empty -> .)
    LC              reduce using rule 60 (empty -> .)
    RC              reduce using rule 60 (empty -> .)
    TYPE            shift and go to state 9
    STRUCT          shift and go to state 3

    DefList                        shift and go to state 40
    Specifier                      shift and go to state 34
    empty                          shift and go to state 33
    StructSpecifier                shift and go to state 6
    Def                            shift and go to state 35

state 27

    (5) ExtDef -> Specifier FunDec CompSt .

    error           reduce using rule 5 (ExtDef -> Specifier FunDec CompSt .)
    TYPE            reduce using rule 5 (ExtDef -> Specifier FunDec CompSt .)
    STRUCT          reduce using rule 5 (ExtDef -> Specifier FunDec CompSt .)
    $end            reduce using rule 5 (ExtDef -> Specifier FunDec CompSt .)


state 28

    (63) CompSt -> error . RC

    RC              shift and go to state 41


state 29

    (6) ExtDef -> Specifier FunDec SEMI .

    error           reduce using rule 6 (ExtDef -> Specifier FunDec SEMI .)
    TYPE            reduce using rule 6 (ExtDef -> Specifier FunDec SEMI .)
    STRUCT          reduce using rule 6 (ExtDef -> Specifier FunDec SEMI .)
    $end            reduce using rule 6 (ExtDef -> Specifier FunDec SEMI .)


state 30

    (18) VarDec -> VarDec LB . INT RB

    INT             shift and go to state 42


state 31

    (9) ExtDecList -> VarDec COMMA . ExtDecList
    (8) ExtDecList -> . VarDec
    (9) ExtDecList -> . VarDec COMMA ExtDecList
    (17) VarDec -> . ID
    (18) VarDec -> . VarDec LB INT RB

    ID              shift and go to state 44

    VarDec                         shift and go to state 19
    ExtDecList                     shift and go to state 43

state 32

    (12) StructSpecifier -> STRUCT OptTag LC DefList . RC

    RC              shift and go to state 45


state 33

    (34) DefList -> empty .

    RC              reduce using rule 34 (DefList -> empty .)
    IF              reduce using rule 34 (DefList -> empty .)
    WHILE           reduce using rule 34 (DefList -> empty .)
    RETURN          reduce using rule 34 (DefList -> empty .)
    error           reduce using rule 34 (DefList -> empty .)
    LP              reduce using rule 34 (DefList -> empty .)
    MINUS           reduce using rule 34 (DefList -> empty .)
    NOT             reduce using rule 34 (DefList -> empty .)
    ID              reduce using rule 34 (DefList -> empty .)
    INT             reduce using rule 34 (DefList -> empty .)
    FLOAT           reduce using rule 34 (DefList -> empty .)
    LC              reduce using rule 34 (DefList -> empty .)


state 34

    (35) Def -> Specifier . DecList SEMI
    (65) Def -> Specifier . error SEMI
    (36) DecList -> . Dec
    (37) DecList -> . Dec COMMA DecList
    (38) Dec -> . VarDec
    (39) Dec -> . VarDec ASSIGNOP Exp
    (17) VarDec -> . ID
    (18) VarDec -> . VarDec LB INT RB

    error           shift and go to state 48
    ID              shift and go to state 44

    DecList                        shift and go to state 47
    VarDec                         shift and go to state 49
    Dec                            shift and go to state 46

state 35

    (33) DefList -> Def . DefList
    (33) DefList -> . Def DefList
    (34) DefList -> . empty
    (35) Def -> . Specifier DecList SEMI
    (65) Def -> . Specifier error SEMI
    (60) empty -> .
    (10) Specifier -> . TYPE
    (11) Specifier -> . StructSpecifier
    (12) StructSpecifier -> . STRUCT OptTag LC DefList RC
    (13) StructSpecifier -> . STRUCT Tag

    RC              reduce using rule 60 (empty -> .)
    IF              reduce using rule 60 (empty -> .)
    WHILE           reduce using rule 60 (empty -> .)
    RETURN          reduce using rule 60 (empty -> .)
    error           reduce using rule 60 (empty -> .)
    LP              reduce using rule 60 (empty -> .)
    MINUS           reduce using rule 60 (empty -> .)
    NOT             reduce using rule 60 (empty -> .)
    ID              reduce using rule 60 (empty -> .)
    INT             reduce using rule 60 (empty -> .)
    FLOAT           reduce using rule 60 (empty -> .)
    LC              reduce using rule 60 (empty -> .)
    TYPE            shift and go to state 9
    STRUCT          shift and go to state 3

    DefList                        shift and go to state 50
    Specifier                      shift and go to state 34
    Def                            shift and go to state 35
    StructSpecifier                shift and go to state 6
    empty                          shift and go to state 33

state 36

    (19) FunDec -> ID LP VarList . RP

    RP              shift and go to state 51


state 37

    (20) FunDec -> ID LP RP .

    SEMI            reduce using rule 20 (FunDec -> ID LP RP .)
    LC              reduce using rule 20 (FunDec -> ID LP RP .)
    error           reduce using rule 20 (FunDec -> ID LP RP .)


state 38

    (23) ParamDec -> Specifier . VarDec
    (17) VarDec -> . ID
    (18) VarDec -> . VarDec LB INT RB

    ID              shift and go to state 44

    VarDec                         shift and go to state 52

state 39

    (21) VarList -> ParamDec . COMMA VarList
    (22) VarList -> ParamDec .

    COMMA           shift and go to state 53
    RP              reduce using rule 22 (VarList -> ParamDec .)


state 40

    (24) CompSt -> LC DefList . StmtList RC
    (25) StmtList -> . Stmt StmtList
    (26) StmtList -> . empty
    (27) Stmt -> . Exp SEMI
    (28) Stmt -> . CompSt
    (29) Stmt -> . IF LP Exp RP Stmt
    (30) Stmt -> . WHILE LP Exp RP Stmt
    (31) Stmt -> . IF LP Exp RP Stmt ELSE Stmt
    (32) Stmt -> . RETURN Exp SEMI
    (64) Stmt -> . error SEMI
    (60) empty -> .
    (40) Exp -> . Exp ASSIGNOP Exp
    (41) Exp -> . Exp AND Exp
    (42) Exp -> . Exp OR Exp
    (43) Exp -> . Exp RELOP Exp
    (44) Exp -> . Exp PLUS Exp
    (45) Exp -> . Exp MINUS Exp
    (46) Exp -> . Exp STAR Exp
    (47) Exp -> . Exp DIV Exp
    (48) Exp -> . LP Exp RP
    (49) Exp -> . MINUS Exp
    (50) Exp -> . NOT Exp
    (51) Exp -> . ID LP Args RP
    (52) Exp -> . ID LP RP
    (53) Exp -> . Exp LB Exp RB
    (54) Exp -> . Exp DOT ID
    (55) Exp -> . ID
    (56) Exp -> . INT
    (57) Exp -> . FLOAT
    (24) CompSt -> . LC DefList StmtList RC
    (63) CompSt -> . error RC

    IF              shift and go to state 66
    WHILE           shift and go to state 57
    RETURN          shift and go to state 62
    error           shift and go to state 67
    RC              reduce using rule 60 (empty -> .)
    LP              shift and go to state 68
    MINUS           shift and go to state 65
    NOT             shift and go to state 59
    ID              shift and go to state 64
    INT             shift and go to state 54
    FLOAT           shift and go to state 55
    LC              shift and go to state 26

    Stmt                           shift and go to state 58
    empty                          shift and go to state 61
    CompSt                         shift and go to state 56
    StmtList                       shift and go to state 60
    Exp                            shift and go to state 63

state 41

    (63) CompSt -> error RC .

    IF              reduce using rule 63 (CompSt -> error RC .)
    WHILE           reduce using rule 63 (CompSt -> error RC .)
    RETURN          reduce using rule 63 (CompSt -> error RC .)
    error           reduce using rule 63 (CompSt -> error RC .)
    LP              reduce using rule 63 (CompSt -> error RC .)
    MINUS           reduce using rule 63 (CompSt -> error RC .)
    NOT             reduce using rule 63 (CompSt -> error RC .)
    ID              reduce using rule 63 (CompSt -> error RC .)
    INT             reduce using rule 63 (CompSt -> error RC .)
    FLOAT           reduce using rule 63 (CompSt -> error RC .)
    LC              reduce using rule 63 (CompSt -> error RC .)
    RC              reduce using rule 63 (CompSt -> error RC .)
    ELSE            reduce using rule 63 (CompSt -> error RC .)
    TYPE            reduce using rule 63 (CompSt -> error RC .)
    STRUCT          reduce using rule 63 (CompSt -> error RC .)
    $end            reduce using rule 63 (CompSt -> error RC .)


state 42

    (18) VarDec -> VarDec LB INT . RB

    RB              shift and go to state 69


state 43

    (9) ExtDecList -> VarDec COMMA ExtDecList .

    SEMI            reduce using rule 9 (ExtDecList -> VarDec COMMA ExtDecList .)


state 44

    (17) VarDec -> ID .

    COMMA           reduce using rule 17 (VarDec -> ID .)
    LB              reduce using rule 17 (VarDec -> ID .)
    SEMI            reduce using rule 17 (VarDec -> ID .)
    ASSIGNOP        reduce using rule 17 (VarDec -> ID .)
    RP              reduce using rule 17 (VarDec -> ID .)


state 45

    (12) StructSpecifier -> STRUCT OptTag LC DefList RC .

    error           reduce using rule 12 (StructSpecifier -> STRUCT OptTag LC DefList RC .)
    ID              reduce using rule 12 (StructSpecifier -> STRUCT OptTag LC DefList RC .)
    SEMI            reduce using rule 12 (StructSpecifier -> STRUCT OptTag LC DefList RC .)


state 46

    (36) DecList -> Dec .
    (37) DecList -> Dec . COMMA DecList

    SEMI            reduce using rule 36 (DecList -> Dec .)
    COMMA           shift and go to state 70


state 47

    (35) Def -> Specifier DecList . SEMI

    SEMI            shift and go to state 71


state 48

    (65) Def -> Specifier error . SEMI

    SEMI            shift and go to state 72


state 49

    (38) Dec -> VarDec .
    (39) Dec -> VarDec . ASSIGNOP Exp
    (18) VarDec -> VarDec . LB INT RB

    COMMA           reduce using rule 38 (Dec -> VarDec .)
    SEMI            reduce using rule 38 (Dec -> VarDec .)
    ASSIGNOP        shift and go to state 73
    LB              shift and go to state 30


state 50

    (33) DefList -> Def DefList .

    RC              reduce using rule 33 (DefList -> Def DefList .)
    IF              reduce using rule 33 (DefList -> Def DefList .)
    WHILE           reduce using rule 33 (DefList -> Def DefList .)
    RETURN          reduce using rule 33 (DefList -> Def DefList .)
    error           reduce using rule 33 (DefList -> Def DefList .)
    LP              reduce using rule 33 (DefList -> Def DefList .)
    MINUS           reduce using rule 33 (DefList -> Def DefList .)
    NOT             reduce using rule 33 (DefList -> Def DefList .)
    ID              reduce using rule 33 (DefList -> Def DefList .)
    INT             reduce using rule 33 (DefList -> Def DefList .)
    FLOAT           reduce using rule 33 (DefList -> Def DefList .)
    LC              reduce using rule 33 (DefList -> Def DefList .)


state 51

    (19) FunDec -> ID LP VarList RP .

    SEMI            reduce using rule 19 (FunDec -> ID LP VarList RP .)
    LC              reduce using rule 19 (FunDec -> ID LP VarList RP .)
    error           reduce using rule 19 (FunDec -> ID LP VarList RP .)


state 52

    (23) ParamDec -> Specifier VarDec .
    (18) VarDec -> VarDec . LB INT RB

    COMMA           reduce using rule 23 (ParamDec -> Specifier VarDec .)
    RP              reduce using rule 23 (ParamDec -> Specifier VarDec .)
    LB              shift and go to state 30


state 53

    (21) VarList -> ParamDec COMMA . VarList
    (21) VarList -> . ParamDec COMMA VarList
    (22) VarList -> . ParamDec
    (23) ParamDec -> . Specifier VarDec
    (10) Specifier -> . TYPE
    (11) Specifier -> . StructSpecifier
    (12) StructSpecifier -> . STRUCT OptTag LC DefList RC
    (13) StructSpecifier -> . STRUCT Tag

    TYPE            shift and go to state 9
    STRUCT          shift and go to state 3

    Specifier                      shift and go to state 38
    ParamDec                       shift and go to state 39
    VarList                        shift and go to state 74
    StructSpecifier                shift and go to state 6

state 54

    (56) Exp -> INT .

    ASSIGNOP        reduce using rule 56 (Exp -> INT .)
    AND             reduce using rule 56 (Exp -> INT .)
    OR              reduce using rule 56 (Exp -> INT .)
    RELOP           reduce using rule 56 (Exp -> INT .)
    PLUS            reduce using rule 56 (Exp -> INT .)
    MINUS           reduce using rule 56 (Exp -> INT .)
    STAR            reduce using rule 56 (Exp -> INT .)
    DIV             reduce using rule 56 (Exp -> INT .)
    LB              reduce using rule 56 (Exp -> INT .)
    DOT             reduce using rule 56 (Exp -> INT .)
    SEMI            reduce using rule 56 (Exp -> INT .)
    RP              reduce using rule 56 (Exp -> INT .)
    COMMA           reduce using rule 56 (Exp -> INT .)
    RB              reduce using rule 56 (Exp -> INT .)


state 55

    (57) Exp -> FLOAT .

    ASSIGNOP        reduce using rule 57 (Exp -> FLOAT .)
    AND             reduce using rule 57 (Exp -> FLOAT .)
    OR              reduce using rule 57 (Exp -> FLOAT .)
    RELOP           reduce using rule 57 (Exp -> FLOAT .)
    PLUS            reduce using rule 57 (Exp -> FLOAT .)
    MINUS           reduce using rule 57 (Exp -> FLOAT .)
    STAR            reduce using rule 57 (Exp -> FLOAT .)
    DIV             reduce using rule 57 (Exp -> FLOAT .)
    LB              reduce using rule 57 (Exp -> FLOAT .)
    DOT             reduce using rule 57 (Exp -> FLOAT .)
    SEMI            reduce using rule 57 (Exp -> FLOAT .)
    RP              reduce using rule 57 (Exp -> FLOAT .)
    COMMA           reduce using rule 57 (Exp -> FLOAT .)
    RB              reduce using rule 57 (Exp -> FLOAT .)


state 56

    (28) Stmt -> CompSt .

    IF              reduce using rule 28 (Stmt -> CompSt .)
    WHILE           reduce using rule 28 (Stmt -> CompSt .)
    RETURN          reduce using rule 28 (Stmt -> CompSt .)
    error           reduce using rule 28 (Stmt -> CompSt .)
    LP              reduce using rule 28 (Stmt -> CompSt .)
    MINUS           reduce using rule 28 (Stmt -> CompSt .)
    NOT             reduce using rule 28 (Stmt -> CompSt .)
    ID              reduce using rule 28 (Stmt -> CompSt .)
    INT             reduce using rule 28 (Stmt -> CompSt .)
    FLOAT           reduce using rule 28 (Stmt -> CompSt .)
    LC              reduce using rule 28 (Stmt -> CompSt .)
    RC              reduce using rule 28 (Stmt -> CompSt .)
    ELSE            reduce using rule 28 (Stmt -> CompSt .)


state 57

    (30) Stmt -> WHILE . LP Exp RP Stmt

    LP              shift and go to state 75


state 58

    (25) StmtList -> Stmt . StmtList
    (25) StmtList -> . Stmt StmtList
    (26) StmtList -> . empty
    (27) Stmt -> . Exp SEMI
    (28) Stmt -> . CompSt
    (29) Stmt -> . IF LP Exp RP Stmt
    (30) Stmt -> . WHILE LP Exp RP Stmt
    (31) Stmt -> . IF LP Exp RP Stmt ELSE Stmt
    (32) Stmt -> . RETURN Exp SEMI
    (64) Stmt -> . error SEMI
    (60) empty -> .
    (40) Exp -> . Exp ASSIGNOP Exp
    (41) Exp -> . Exp AND Exp
    (42) Exp -> . Exp OR Exp
    (43) Exp -> . Exp RELOP Exp
    (44) Exp -> . Exp PLUS Exp
    (45) Exp -> . Exp MINUS Exp
    (46) Exp -> . Exp STAR Exp
    (47) Exp -> . Exp DIV Exp
    (48) Exp -> . LP Exp RP
    (49) Exp -> . MINUS Exp
    (50) Exp -> . NOT Exp
    (51) Exp -> . ID LP Args RP
    (52) Exp -> . ID LP RP
    (53) Exp -> . Exp LB Exp RB
    (54) Exp -> . Exp DOT ID
    (55) Exp -> . ID
    (56) Exp -> . INT
    (57) Exp -> . FLOAT
    (24) CompSt -> . LC DefList StmtList RC
    (63) CompSt -> . error RC

    IF              shift and go to state 66
    WHILE           shift and go to state 57
    RETURN          shift and go to state 62
    error           shift and go to state 67
    RC              reduce using rule 60 (empty -> .)
    LP              shift and go to state 68
    MINUS           shift and go to state 65
    NOT             shift and go to state 59
    ID              shift and go to state 64
    INT             shift and go to state 54
    FLOAT           shift and go to state 55
    LC              shift and go to state 26

    Stmt                           shift and go to state 58
    CompSt                         shift and go to state 56
    empty                          shift and go to state 61
    StmtList                       shift and go to state 76
    Exp                            shift and go to state 63

state 59

    (50) Exp -> NOT . Exp
    (40) Exp -> . Exp ASSIGNOP Exp
    (41) Exp -> . Exp AND Exp
    (42) Exp -> . Exp OR Exp
    (43) Exp -> . Exp RELOP Exp
    (44) Exp -> . Exp PLUS Exp
    (45) Exp -> . Exp MINUS Exp
    (46) Exp -> . Exp STAR Exp
    (47) Exp -> . Exp DIV Exp
    (48) Exp -> . LP Exp RP
    (49) Exp -> . MINUS Exp
    (50) Exp -> . NOT Exp
    (51) Exp -> . ID LP Args RP
    (52) Exp -> . ID LP RP
    (53) Exp -> . Exp LB Exp RB
    (54) Exp -> . Exp DOT ID
    (55) Exp -> . ID
    (56) Exp -> . INT
    (57) Exp -> . FLOAT

    LP              shift and go to state 68
    MINUS           shift and go to state 65
    NOT             shift and go to state 59
    ID              shift and go to state 64
    INT             shift and go to state 54
    FLOAT           shift and go to state 55

    Exp                            shift and go to state 77

state 60

    (24) CompSt -> LC DefList StmtList . RC

    RC              shift and go to state 78


state 61

    (26) StmtList -> empty .

    RC              reduce using rule 26 (StmtList -> empty .)


state 62

    (32) Stmt -> RETURN . Exp SEMI
    (40) Exp -> . Exp ASSIGNOP Exp
    (41) Exp -> . Exp AND Exp
    (42) Exp -> . Exp OR Exp
    (43) Exp -> . Exp RELOP Exp
    (44) Exp -> . Exp PLUS Exp
    (45) Exp -> . Exp MINUS Exp
    (46) Exp -> . Exp STAR Exp
    (47) Exp -> . Exp DIV Exp
    (48) Exp -> . LP Exp RP
    (49) Exp -> . MINUS Exp
    (50) Exp -> . NOT Exp
    (51) Exp -> . ID LP Args RP
    (52) Exp -> . ID LP RP
    (53) Exp -> . Exp LB Exp RB
    (54) Exp -> . Exp DOT ID
    (55) Exp -> . ID
    (56) Exp -> . INT
    (57) Exp -> . FLOAT

    LP              shift and go to state 68
    MINUS           shift and go to state 65
    NOT             shift and go to state 59
    ID              shift and go to state 64
    INT             shift and go to state 54
    FLOAT           shift and go to state 55

    Exp                            shift and go to state 79

state 63

    (27) Stmt -> Exp . SEMI
    (40) Exp -> Exp . ASSIGNOP Exp
    (41) Exp -> Exp . AND Exp
    (42) Exp -> Exp . OR Exp
    (43) Exp -> Exp . RELOP Exp
    (44) Exp -> Exp . PLUS Exp
    (45) Exp -> Exp . MINUS Exp
    (46) Exp -> Exp . STAR Exp
    (47) Exp -> Exp . DIV Exp
    (53) Exp -> Exp . LB Exp RB
    (54) Exp -> Exp . DOT ID

    SEMI            shift and go to state 90
    ASSIGNOP        shift and go to state 89
    AND             shift and go to state 80
    OR              shift and go to state 88
    RELOP           shift and go to state 83
    PLUS            shift and go to state 87
    MINUS           shift and go to state 85
    STAR            shift and go to state 82
    DIV             shift and go to state 86
    LB              shift and go to state 84
    DOT             shift and go to state 81


state 64

    (51) Exp -> ID . LP Args RP
    (52) Exp -> ID . LP RP
    (55) Exp -> ID .

    LP              shift and go to state 91
    ASSIGNOP        reduce using rule 55 (Exp -> ID .)
    AND             reduce using rule 55 (Exp -> ID .)
    OR              reduce using rule 55 (Exp -> ID .)
    RELOP           reduce using rule 55 (Exp -> ID .)
    PLUS            reduce using rule 55 (Exp -> ID .)
    MINUS           reduce using rule 55 (Exp -> ID .)
    STAR            reduce using rule 55 (Exp -> ID .)
    DIV             reduce using rule 55 (Exp -> ID .)
    LB              reduce using rule 55 (Exp -> ID .)
    DOT             reduce using rule 55 (Exp -> ID .)
    SEMI            reduce using rule 55 (Exp -> ID .)
    RP              reduce using rule 55 (Exp -> ID .)
    COMMA           reduce using rule 55 (Exp -> ID .)
    RB              reduce using rule 55 (Exp -> ID .)


state 65

    (49) Exp -> MINUS . Exp
    (40) Exp -> . Exp ASSIGNOP Exp
    (41) Exp -> . Exp AND Exp
    (42) Exp -> . Exp OR Exp
    (43) Exp -> . Exp RELOP Exp
    (44) Exp -> . Exp PLUS Exp
    (45) Exp -> . Exp MINUS Exp
    (46) Exp -> . Exp STAR Exp
    (47) Exp -> . Exp DIV Exp
    (48) Exp -> . LP Exp RP
    (49) Exp -> . MINUS Exp
    (50) Exp -> . NOT Exp
    (51) Exp -> . ID LP Args RP
    (52) Exp -> . ID LP RP
    (53) Exp -> . Exp LB Exp RB
    (54) Exp -> . Exp DOT ID
    (55) Exp -> . ID
    (56) Exp -> . INT
    (57) Exp -> . FLOAT

    LP              shift and go to state 68
    MINUS           shift and go to state 65
    NOT             shift and go to state 59
    ID              shift and go to state 64
    INT             shift and go to state 54
    FLOAT           shift and go to state 55

    Exp                            shift and go to state 92

state 66

    (29) Stmt -> IF . LP Exp RP Stmt
    (31) Stmt -> IF . LP Exp RP Stmt ELSE Stmt

    LP              shift and go to state 93


state 67

    (64) Stmt -> error . SEMI
    (63) CompSt -> error . RC

    SEMI            shift and go to state 94
    RC              shift and go to state 41


state 68

    (48) Exp -> LP . Exp RP
    (40) Exp -> . Exp ASSIGNOP Exp
    (41) Exp -> . Exp AND Exp
    (42) Exp -> . Exp OR Exp
    (43) Exp -> . Exp RELOP Exp
    (44) Exp -> . Exp PLUS Exp
    (45) Exp -> . Exp MINUS Exp
    (46) Exp -> . Exp STAR Exp
    (47) Exp -> . Exp DIV Exp
    (48) Exp -> . LP Exp RP
    (49) Exp -> . MINUS Exp
    (50) Exp -> . NOT Exp
    (51) Exp -> . ID LP Args RP
    (52) Exp -> . ID LP RP
    (53) Exp -> . Exp LB Exp RB
    (54) Exp -> . Exp DOT ID
    (55) Exp -> . ID
    (56) Exp -> . INT
    (57) Exp -> . FLOAT

    LP              shift and go to state 68
    MINUS           shift and go to state 65
    NOT             shift and go to state 59
    ID              shift and go to state 64
    INT             shift and go to state 54
    FLOAT           shift and go to state 55

    Exp                            shift and go to state 95

state 69

    (18) VarDec -> VarDec LB INT RB .

    COMMA           reduce using rule 18 (VarDec -> VarDec LB INT RB .)
    LB              reduce using rule 18 (VarDec -> VarDec LB INT RB .)
    SEMI            reduce using rule 18 (VarDec -> VarDec LB INT RB .)
    ASSIGNOP        reduce using rule 18 (VarDec -> VarDec LB INT RB .)
    RP              reduce using rule 18 (VarDec -> VarDec LB INT RB .)


state 70

    (37) DecList -> Dec COMMA . DecList
    (36) DecList -> . Dec
    (37) DecList -> . Dec COMMA DecList
    (38) Dec -> . VarDec
    (39) Dec -> . VarDec ASSIGNOP Exp
    (17) VarDec -> . ID
    (18) VarDec -> . VarDec LB INT RB

    ID              shift and go to state 44

    DecList                        shift and go to state 96
    VarDec                         shift and go to state 49
    Dec                            shift and go to state 46

state 71

    (35) Def -> Specifier DecList SEMI .

    TYPE            reduce using rule 35 (Def -> Specifier DecList SEMI .)
    STRUCT          reduce using rule 35 (Def -> Specifier DecList SEMI .)
    IF              reduce using rule 35 (Def -> Specifier DecList SEMI .)
    WHILE           reduce using rule 35 (Def -> Specifier DecList SEMI .)
    RETURN          reduce using rule 35 (Def -> Specifier DecList SEMI .)
    error           reduce using rule 35 (Def -> Specifier DecList SEMI .)
    LP              reduce using rule 35 (Def -> Specifier DecList SEMI .)
    MINUS           reduce using rule 35 (Def -> Specifier DecList SEMI .)
    NOT             reduce using rule 35 (Def -> Specifier DecList SEMI .)
    ID              reduce using rule 35 (Def -> Specifier DecList SEMI .)
    INT             reduce using rule 35 (Def -> Specifier DecList SEMI .)
    FLOAT           reduce using rule 35 (Def -> Specifier DecList SEMI .)
    LC              reduce using rule 35 (Def -> Specifier DecList SEMI .)
    RC              reduce using rule 35 (Def -> Specifier DecList SEMI .)


state 72

    (65) Def -> Specifier error SEMI .

    TYPE            reduce using rule 65 (Def -> Specifier error SEMI .)
    STRUCT          reduce using rule 65 (Def -> Specifier error SEMI .)
    IF              reduce using rule 65 (Def -> Specifier error SEMI .)
    WHILE           reduce using rule 65 (Def -> Specifier error SEMI .)
    RETURN          reduce using rule 65 (Def -> Specifier error SEMI .)
    error           reduce using rule 65 (Def -> Specifier error SEMI .)
    LP              reduce using rule 65 (Def -> Specifier error SEMI .)
    MINUS           reduce using rule 65 (Def -> Specifier error SEMI .)
    NOT             reduce using rule 65 (Def -> Specifier error SEMI .)
    ID              reduce using rule 65 (Def -> Specifier error SEMI .)
    INT             reduce using rule 65 (Def -> Specifier error SEMI .)
    FLOAT           reduce using rule 65 (Def -> Specifier error SEMI .)
    LC              reduce using rule 65 (Def -> Specifier error SEMI .)
    RC              reduce using rule 65 (Def -> Specifier error SEMI .)


state 73

    (39) Dec -> VarDec ASSIGNOP . Exp
    (40) Exp -> . Exp ASSIGNOP Exp
    (41) Exp -> . Exp AND Exp
    (42) Exp -> . Exp OR Exp
    (43) Exp -> . Exp RELOP Exp
    (44) Exp -> . Exp PLUS Exp
    (45) Exp -> . Exp MINUS Exp
    (46) Exp -> . Exp STAR Exp
    (47) Exp -> . Exp DIV Exp
    (48) Exp -> . LP Exp RP
    (49) Exp -> . MINUS Exp
    (50) Exp -> . NOT Exp
    (51) Exp -> . ID LP Args RP
    (52) Exp -> . ID LP RP
    (53) Exp -> . Exp LB Exp RB
    (54) Exp -> . Exp DOT ID
    (55) Exp -> . ID
    (56) Exp -> . INT
    (57) Exp -> . FLOAT

    LP              shift and go to state 68
    MINUS           shift and go to state 65
    NOT             shift and go to state 59
    ID              shift and go to state 64
    INT             shift and go to state 54
    FLOAT           shift and go to state 55

    Exp                            shift and go to state 97

state 74

    (21) VarList -> ParamDec COMMA VarList .

    RP              reduce using rule 21 (VarList -> ParamDec COMMA VarList .)


state 75

    (30) Stmt -> WHILE LP . Exp RP Stmt
    (40) Exp -> . Exp ASSIGNOP Exp
    (41) Exp -> . Exp AND Exp
    (42) Exp -> . Exp OR Exp
    (43) Exp -> . Exp RELOP Exp
    (44) Exp -> . Exp PLUS Exp
    (45) Exp -> . Exp MINUS Exp
    (46) Exp -> . Exp STAR Exp
    (47) Exp -> . Exp DIV Exp
    (48) Exp -> . LP Exp RP
    (49) Exp -> . MINUS Exp
    (50) Exp -> . NOT Exp
    (51) Exp -> . ID LP Args RP
    (52) Exp -> . ID LP RP
    (53) Exp -> . Exp LB Exp RB
    (54) Exp -> . Exp DOT ID
    (55) Exp -> . ID
    (56) Exp -> . INT
    (57) Exp -> . FLOAT

    LP              shift and go to state 68
    MINUS           shift and go to state 65
    NOT             shift and go to state 59
    ID              shift and go to state 64
    INT             shift and go to state 54
    FLOAT           shift and go to state 55

    Exp                            shift and go to state 98

state 76

    (25) StmtList -> Stmt StmtList .

    RC              reduce using rule 25 (StmtList -> Stmt StmtList .)


state 77

    (50) Exp -> NOT Exp .
    (40) Exp -> Exp . ASSIGNOP Exp
    (41) Exp -> Exp . AND Exp
    (42) Exp -> Exp . OR Exp
    (43) Exp -> Exp . RELOP Exp
    (44) Exp -> Exp . PLUS Exp
    (45) Exp -> Exp . MINUS Exp
    (46) Exp -> Exp . STAR Exp
    (47) Exp -> Exp . DIV Exp
    (53) Exp -> Exp . LB Exp RB
    (54) Exp -> Exp . DOT ID

    ASSIGNOP        reduce using rule 50 (Exp -> NOT Exp .)
    AND             reduce using rule 50 (Exp -> NOT Exp .)
    OR              reduce using rule 50 (Exp -> NOT Exp .)
    RELOP           reduce using rule 50 (Exp -> NOT Exp .)
    PLUS            reduce using rule 50 (Exp -> NOT Exp .)
    MINUS           reduce using rule 50 (Exp -> NOT Exp .)
    STAR            reduce using rule 50 (Exp -> NOT Exp .)
    DIV             reduce using rule 50 (Exp -> NOT Exp .)
    SEMI            reduce using rule 50 (Exp -> NOT Exp .)
    RP              reduce using rule 50 (Exp -> NOT Exp .)
    COMMA           reduce using rule 50 (Exp -> NOT Exp .)
    RB              reduce using rule 50 (Exp -> NOT Exp .)
    LB              shift and go to state 84
    DOT             shift and go to state 81

  ! LB              [ reduce using rule 50 (Exp -> NOT Exp .) ]
  ! DOT             [ reduce using rule 50 (Exp -> NOT Exp .) ]
  ! ASSIGNOP        [ shift and go to state 89 ]
  ! AND             [ shift and go to state 80 ]
  ! OR              [ shift and go to state 88 ]
  ! RELOP           [ shift and go to state 83 ]
  ! PLUS            [ shift and go to state 87 ]
  ! MINUS           [ shift and go to state 85 ]
  ! STAR            [ shift and go to state 82 ]
  ! DIV             [ shift and go to state 86 ]


state 78

    (24) CompSt -> LC DefList StmtList RC .

    IF              reduce using rule 24 (CompSt -> LC DefList StmtList RC .)
    WHILE           reduce using rule 24 (CompSt -> LC DefList StmtList RC .)
    RETURN          reduce using rule 24 (CompSt -> LC DefList StmtList RC .)
    error           reduce using rule 24 (CompSt -> LC DefList StmtList RC .)
    LP              reduce using rule 24 (CompSt -> LC DefList StmtList RC .)
    MINUS           reduce using rule 24 (CompSt -> LC DefList StmtList RC .)
    NOT             reduce using rule 24 (CompSt -> LC DefList StmtList RC .)
    ID              reduce using rule 24 (CompSt -> LC DefList StmtList RC .)
    INT             reduce using rule 24 (CompSt -> LC DefList StmtList RC .)
    FLOAT           reduce using rule 24 (CompSt -> LC DefList StmtList RC .)
    LC              reduce using rule 24 (CompSt -> LC DefList StmtList RC .)
    RC              reduce using rule 24 (CompSt -> LC DefList StmtList RC .)
    ELSE            reduce using rule 24 (CompSt -> LC DefList StmtList RC .)
    TYPE            reduce using rule 24 (CompSt -> LC DefList StmtList RC .)
    STRUCT          reduce using rule 24 (CompSt -> LC DefList StmtList RC .)
    $end            reduce using rule 24 (CompSt -> LC DefList StmtList RC .)


state 79

    (32) Stmt -> RETURN Exp . SEMI
    (40) Exp -> Exp . ASSIGNOP Exp
    (41) Exp -> Exp . AND Exp
    (42) Exp -> Exp . OR Exp
    (43) Exp -> Exp . RELOP Exp
    (44) Exp -> Exp . PLUS Exp
    (45) Exp -> Exp . MINUS Exp
    (46) Exp -> Exp . STAR Exp
    (47) Exp -> Exp . DIV Exp
    (53) Exp -> Exp . LB Exp RB
    (54) Exp -> Exp . DOT ID

    SEMI            shift and go to state 99
    ASSIGNOP        shift and go to state 89
    AND             shift and go to state 80
    OR              shift and go to state 88
    RELOP           shift and go to state 83
    PLUS            shift and go to state 87
    MINUS           shift and go to state 85
    STAR            shift and go to state 82
    DIV             shift and go to state 86
    LB              shift and go to state 84
    DOT             shift and go to state 81


state 80

    (41) Exp -> Exp AND . Exp
    (40) Exp -> . Exp ASSIGNOP Exp
    (41) Exp -> . Exp AND Exp
    (42) Exp -> . Exp OR Exp
    (43) Exp -> . Exp RELOP Exp
    (44) Exp -> . Exp PLUS Exp
    (45) Exp -> . Exp MINUS Exp
    (46) Exp -> . Exp STAR Exp
    (47) Exp -> . Exp DIV Exp
    (48) Exp -> . LP Exp RP
    (49) Exp -> . MINUS Exp
    (50) Exp -> . NOT Exp
    (51) Exp -> . ID LP Args RP
    (52) Exp -> . ID LP RP
    (53) Exp -> . Exp LB Exp RB
    (54) Exp -> . Exp DOT ID
    (55) Exp -> . ID
    (56) Exp -> . INT
    (57) Exp -> . FLOAT

    LP              shift and go to state 68
    MINUS           shift and go to state 65
    NOT             shift and go to state 59
    ID              shift and go to state 64
    INT             shift and go to state 54
    FLOAT           shift and go to state 55

    Exp                            shift and go to state 100

state 81

    (54) Exp -> Exp DOT . ID

    ID              shift and go to state 101


state 82

    (46) Exp -> Exp STAR . Exp
    (40) Exp -> . Exp ASSIGNOP Exp
    (41) Exp -> . Exp AND Exp
    (42) Exp -> . Exp OR Exp
    (43) Exp -> . Exp RELOP Exp
    (44) Exp -> . Exp PLUS Exp
    (45) Exp -> . Exp MINUS Exp
    (46) Exp -> . Exp STAR Exp
    (47) Exp -> . Exp DIV Exp
    (48) Exp -> . LP Exp RP
    (49) Exp -> . MINUS Exp
    (50) Exp -> . NOT Exp
    (51) Exp -> . ID LP Args RP
    (52) Exp -> . ID LP RP
    (53) Exp -> . Exp LB Exp RB
    (54) Exp -> . Exp DOT ID
    (55) Exp -> . ID
    (56) Exp -> . INT
    (57) Exp -> . FLOAT

    LP              shift and go to state 68
    MINUS           shift and go to state 65
    NOT             shift and go to state 59
    ID              shift and go to state 64
    INT             shift and go to state 54
    FLOAT           shift and go to state 55

    Exp                            shift and go to state 102

state 83

    (43) Exp -> Exp RELOP . Exp
    (40) Exp -> . Exp ASSIGNOP Exp
    (41) Exp -> . Exp AND Exp
    (42) Exp -> . Exp OR Exp
    (43) Exp -> . Exp RELOP Exp
    (44) Exp -> . Exp PLUS Exp
    (45) Exp -> . Exp MINUS Exp
    (46) Exp -> . Exp STAR Exp
    (47) Exp -> . Exp DIV Exp
    (48) Exp -> . LP Exp RP
    (49) Exp -> . MINUS Exp
    (50) Exp -> . NOT Exp
    (51) Exp -> . ID LP Args RP
    (52) Exp -> . ID LP RP
    (53) Exp -> . Exp LB Exp RB
    (54) Exp -> . Exp DOT ID
    (55) Exp -> . ID
    (56) Exp -> . INT
    (57) Exp -> . FLOAT

    LP              shift and go to state 68
    MINUS           shift and go to state 65
    NOT             shift and go to state 59
    ID              shift and go to state 64
    INT             shift and go to state 54
    FLOAT           shift and go to state 55

    Exp                            shift and go to state 103

state 84

    (53) Exp -> Exp LB . Exp RB
    (40) Exp -> . Exp ASSIGNOP Exp
    (41) Exp -> . Exp AND Exp
    (42) Exp -> . Exp OR Exp
    (43) Exp -> . Exp RELOP Exp
    (44) Exp -> . Exp PLUS Exp
    (45) Exp -> . Exp MINUS Exp
    (46) Exp -> . Exp STAR Exp
    (47) Exp -> . Exp DIV Exp
    (48) Exp -> . LP Exp RP
    (49) Exp -> . MINUS Exp
    (50) Exp -> . NOT Exp
    (51) Exp -> . ID LP Args RP
    (52) Exp -> . ID LP RP
    (53) Exp -> . Exp LB Exp RB
    (54) Exp -> . Exp DOT ID
    (55) Exp -> . ID
    (56) Exp -> . INT
    (57) Exp -> . FLOAT

    LP              shift and go to state 68
    MINUS           shift and go to state 65
    NOT             shift and go to state 59
    ID              shift and go to state 64
    INT             shift and go to state 54
    FLOAT           shift and go to state 55

    Exp                            shift and go to state 104

state 85

    (45) Exp -> Exp MINUS . Exp
    (40) Exp -> . Exp ASSIGNOP Exp
    (41) Exp -> . Exp AND Exp
    (42) Exp -> . Exp OR Exp
    (43) Exp -> . Exp RELOP Exp
    (44) Exp -> . Exp PLUS Exp
    (45) Exp -> . Exp MINUS Exp
    (46) Exp -> . Exp STAR Exp
    (47) Exp -> . Exp DIV Exp
    (48) Exp -> . LP Exp RP
    (49) Exp -> . MINUS Exp
    (50) Exp -> . NOT Exp
    (51) Exp -> . ID LP Args RP
    (52) Exp -> . ID LP RP
    (53) Exp -> . Exp LB Exp RB
    (54) Exp -> . Exp DOT ID
    (55) Exp -> . ID
    (56) Exp -> . INT
    (57) Exp -> . FLOAT

    LP              shift and go to state 68
    MINUS           shift and go to state 65
    NOT             shift and go to state 59
    ID              shift and go to state 64
    INT             shift and go to state 54
    FLOAT           shift and go to state 55

    Exp                            shift and go to state 105

state 86

    (47) Exp -> Exp DIV . Exp
    (40) Exp -> . Exp ASSIGNOP Exp
    (41) Exp -> . Exp AND Exp
    (42) Exp -> . Exp OR Exp
    (43) Exp -> . Exp RELOP Exp
    (44) Exp -> . Exp PLUS Exp
    (45) Exp -> . Exp MINUS Exp
    (46) Exp -> . Exp STAR Exp
    (47) Exp -> . Exp DIV Exp
    (48) Exp -> . LP Exp RP
    (49) Exp -> . MINUS Exp
    (50) Exp -> . NOT Exp
    (51) Exp -> . ID LP Args RP
    (52) Exp -> . ID LP RP
    (53) Exp -> . Exp LB Exp RB
    (54) Exp -> . Exp DOT ID
    (55) Exp -> . ID
    (56) Exp -> . INT
    (57) Exp -> . FLOAT

    LP              shift and go to state 68
    MINUS           shift and go to state 65
    NOT             shift and go to state 59
    ID              shift and go to state 64
    INT             shift and go to state 54
    FLOAT           shift and go to state 55

    Exp                            shift and go to state 106

state 87

    (44) Exp -> Exp PLUS . Exp
    (40) Exp -> . Exp ASSIGNOP Exp
    (41) Exp -> . Exp AND Exp
    (42) Exp -> . Exp OR Exp
    (43) Exp -> . Exp RELOP Exp
    (44) Exp -> . Exp PLUS Exp
    (45) Exp -> . Exp MINUS Exp
    (46) Exp -> . Exp STAR Exp
    (47) Exp -> . Exp DIV Exp
    (48) Exp -> . LP Exp RP
    (49) Exp -> . MINUS Exp
    (50) Exp -> . NOT Exp
    (51) Exp -> . ID LP Args RP
    (52) Exp -> . ID LP RP
    (53) Exp -> . Exp LB Exp RB
    (54) Exp -> . Exp DOT ID
    (55) Exp -> . ID
    (56) Exp -> . INT
    (57) Exp -> . FLOAT

    LP              shift and go to state 68
    MINUS           shift and go to state 65
    NOT             shift and go to state 59
    ID              shift and go to state 64
    INT             shift and go to state 54
    FLOAT           shift and go to state 55

    Exp                            shift and go to state 107

state 88

    (42) Exp -> Exp OR . Exp
    (40) Exp -> . Exp ASSIGNOP Exp
    (41) Exp -> . Exp AND Exp
    (42) Exp -> . Exp OR Exp
    (43) Exp -> . Exp RELOP Exp
    (44) Exp -> . Exp PLUS Exp
    (45) Exp -> . Exp MINUS Exp
    (46) Exp -> . Exp STAR Exp
    (47) Exp -> . Exp DIV Exp
    (48) Exp -> . LP Exp RP
    (49) Exp -> . MINUS Exp
    (50) Exp -> . NOT Exp
    (51) Exp -> . ID LP Args RP
    (52) Exp -> . ID LP RP
    (53) Exp -> . Exp LB Exp RB
    (54) Exp -> . Exp DOT ID
    (55) Exp -> . ID
    (56) Exp -> . INT
    (57) Exp -> . FLOAT

    LP              shift and go to state 68
    MINUS           shift and go to state 65
    NOT             shift and go to state 59
    ID              shift and go to state 64
    INT             shift and go to state 54
    FLOAT           shift and go to state 55

    Exp                            shift and go to state 108

state 89

    (40) Exp -> Exp ASSIGNOP . Exp
    (40) Exp -> . Exp ASSIGNOP Exp
    (41) Exp -> . Exp AND Exp
    (42) Exp -> . Exp OR Exp
    (43) Exp -> . Exp RELOP Exp
    (44) Exp -> . Exp PLUS Exp
    (45) Exp -> . Exp MINUS Exp
    (46) Exp -> . Exp STAR Exp
    (47) Exp -> . Exp DIV Exp
    (48) Exp -> . LP Exp RP
    (49) Exp -> . MINUS Exp
    (50) Exp -> . NOT Exp
    (51) Exp -> . ID LP Args RP
    (52) Exp -> . ID LP RP
    (53) Exp -> . Exp LB Exp RB
    (54) Exp -> . Exp DOT ID
    (55) Exp -> . ID
    (56) Exp -> . INT
    (57) Exp -> . FLOAT

    LP              shift and go to state 68
    MINUS           shift and go to state 65
    NOT             shift and go to state 59
    ID              shift and go to state 64
    INT             shift and go to state 54
    FLOAT           shift and go to state 55

    Exp                            shift and go to state 109

state 90

    (27) Stmt -> Exp SEMI .

    IF              reduce using rule 27 (Stmt -> Exp SEMI .)
    WHILE           reduce using rule 27 (Stmt -> Exp SEMI .)
    RETURN          reduce using rule 27 (Stmt -> Exp SEMI .)
    error           reduce using rule 27 (Stmt -> Exp SEMI .)
    LP              reduce using rule 27 (Stmt -> Exp SEMI .)
    MINUS           reduce using rule 27 (Stmt -> Exp SEMI .)
    NOT             reduce using rule 27 (Stmt -> Exp SEMI .)
    ID              reduce using rule 27 (Stmt -> Exp SEMI .)
    INT             reduce using rule 27 (Stmt -> Exp SEMI .)
    FLOAT           reduce using rule 27 (Stmt -> Exp SEMI .)
    LC              reduce using rule 27 (Stmt -> Exp SEMI .)
    RC              reduce using rule 27 (Stmt -> Exp SEMI .)
    ELSE            reduce using rule 27 (Stmt -> Exp SEMI .)


state 91

    (51) Exp -> ID LP . Args RP
    (52) Exp -> ID LP . RP
    (58) Args -> . Exp COMMA Args
    (59) Args -> . Exp
    (40) Exp -> . Exp ASSIGNOP Exp
    (41) Exp -> . Exp AND Exp
    (42) Exp -> . Exp OR Exp
    (43) Exp -> . Exp RELOP Exp
    (44) Exp -> . Exp PLUS Exp
    (45) Exp -> . Exp MINUS Exp
    (46) Exp -> . Exp STAR Exp
    (47) Exp -> . Exp DIV Exp
    (48) Exp -> . LP Exp RP
    (49) Exp -> . MINUS Exp
    (50) Exp -> . NOT Exp
    (51) Exp -> . ID LP Args RP
    (52) Exp -> . ID LP RP
    (53) Exp -> . Exp LB Exp RB
    (54) Exp -> . Exp DOT ID
    (55) Exp -> . ID
    (56) Exp -> . INT
    (57) Exp -> . FLOAT

    RP              shift and go to state 111
    LP              shift and go to state 68
    MINUS           shift and go to state 65
    NOT             shift and go to state 59
    ID              shift and go to state 64
    INT             shift and go to state 54
    FLOAT           shift and go to state 55

    Args                           shift and go to state 112
    Exp                            shift and go to state 110

state 92

    (49) Exp -> MINUS Exp .
    (40) Exp -> Exp . ASSIGNOP Exp
    (41) Exp -> Exp . AND Exp
    (42) Exp -> Exp . OR Exp
    (43) Exp -> Exp . RELOP Exp
    (44) Exp -> Exp . PLUS Exp
    (45) Exp -> Exp . MINUS Exp
    (46) Exp -> Exp . STAR Exp
    (47) Exp -> Exp . DIV Exp
    (53) Exp -> Exp . LB Exp RB
    (54) Exp -> Exp . DOT ID

    ASSIGNOP        reduce using rule 49 (Exp -> MINUS Exp .)
    AND             reduce using rule 49 (Exp -> MINUS Exp .)
    OR              reduce using rule 49 (Exp -> MINUS Exp .)
    RELOP           reduce using rule 49 (Exp -> MINUS Exp .)
    PLUS            reduce using rule 49 (Exp -> MINUS Exp .)
    MINUS           reduce using rule 49 (Exp -> MINUS Exp .)
    SEMI            reduce using rule 49 (Exp -> MINUS Exp .)
    RP              reduce using rule 49 (Exp -> MINUS Exp .)
    COMMA           reduce using rule 49 (Exp -> MINUS Exp .)
    RB              reduce using rule 49 (Exp -> MINUS Exp .)
    STAR            shift and go to state 82
    DIV             shift and go to state 86
    LB              shift and go to state 84
    DOT             shift and go to state 81

  ! STAR            [ reduce using rule 49 (Exp -> MINUS Exp .) ]
  ! DIV             [ reduce using rule 49 (Exp -> MINUS Exp .) ]
  ! LB              [ reduce using rule 49 (Exp -> MINUS Exp .) ]
  ! DOT             [ reduce using rule 49 (Exp -> MINUS Exp .) ]
  ! ASSIGNOP        [ shift and go to state 89 ]
  ! AND             [ shift and go to state 80 ]
  ! OR              [ shift and go to state 88 ]
  ! RELOP           [ shift and go to state 83 ]
  ! PLUS            [ shift and go to state 87 ]
  ! MINUS           [ shift and go to state 85 ]


state 93

    (29) Stmt -> IF LP . Exp RP Stmt
    (31) Stmt -> IF LP . Exp RP Stmt ELSE Stmt
    (40) Exp -> . Exp ASSIGNOP Exp
    (41) Exp -> . Exp AND Exp
    (42) Exp -> . Exp OR Exp
    (43) Exp -> . Exp RELOP Exp
    (44) Exp -> . Exp PLUS Exp
    (45) Exp -> . Exp MINUS Exp
    (46) Exp -> . Exp STAR Exp
    (47) Exp -> . Exp DIV Exp
    (48) Exp -> . LP Exp RP
    (49) Exp -> . MINUS Exp
    (50) Exp -> . NOT Exp
    (51) Exp -> . ID LP Args RP
    (52) Exp -> . ID LP RP
    (53) Exp -> . Exp LB Exp RB
    (54) Exp -> . Exp DOT ID
    (55) Exp -> . ID
    (56) Exp -> . INT
    (57) Exp -> . FLOAT

    LP              shift and go to state 68
    MINUS           shift and go to state 65
    NOT             shift and go to state 59
    ID              shift and go to state 64
    INT             shift and go to state 54
    FLOAT           shift and go to state 55

    Exp                            shift and go to state 113

state 94

    (64) Stmt -> error SEMI .

    IF              reduce using rule 64 (Stmt -> error SEMI .)
    WHILE           reduce using rule 64 (Stmt -> error SEMI .)
    RETURN          reduce using rule 64 (Stmt -> error SEMI .)
    error           reduce using rule 64 (Stmt -> error SEMI .)
    LP              reduce using rule 64 (Stmt -> error SEMI .)
    MINUS           reduce using rule 64 (Stmt -> error SEMI .)
    NOT             reduce using rule 64 (Stmt -> error SEMI .)
    ID              reduce using rule 64 (Stmt -> error SEMI .)
    INT             reduce using rule 64 (Stmt -> error SEMI .)
    FLOAT           reduce using rule 64 (Stmt -> error SEMI .)
    LC              reduce using rule 64 (Stmt -> error SEMI .)
    RC              reduce using rule 64 (Stmt -> error SEMI .)
    ELSE            reduce using rule 64 (Stmt -> error SEMI .)


state 95

    (48) Exp -> LP Exp . RP
    (40) Exp -> Exp . ASSIGNOP Exp
    (41) Exp -> Exp . AND Exp
    (42) Exp -> Exp . OR Exp
    (43) Exp -> Exp . RELOP Exp
    (44) Exp -> Exp . PLUS Exp
    (45) Exp -> Exp . MINUS Exp
    (46) Exp -> Exp . STAR Exp
    (47) Exp -> Exp . DIV Exp
    (53) Exp -> Exp . LB Exp RB
    (54) Exp -> Exp . DOT ID

    RP              shift and go to state 114
    ASSIGNOP        shift and go to state 89
    AND             shift and go to state 80
    OR              shift and go to state 88
    RELOP           shift and go to state 83
    PLUS            shift and go to state 87
    MINUS           shift and go to state 85
    STAR            shift and go to state 82
    DIV             shift and go to state 86
    LB              shift and go to state 84
    DOT             shift and go to state 81


state 96

    (37) DecList -> Dec COMMA DecList .

    SEMI            reduce using rule 37 (DecList -> Dec COMMA DecList .)


state 97

    (39) Dec -> VarDec ASSIGNOP Exp .
    (40) Exp -> Exp . ASSIGNOP Exp
    (41) Exp -> Exp . AND Exp
    (42) Exp -> Exp . OR Exp
    (43) Exp -> Exp . RELOP Exp
    (44) Exp -> Exp . PLUS Exp
    (45) Exp -> Exp . MINUS Exp
    (46) Exp -> Exp . STAR Exp
    (47) Exp -> Exp . DIV Exp
    (53) Exp -> Exp . LB Exp RB
    (54) Exp -> Exp . DOT ID

    COMMA           reduce using rule 39 (Dec -> VarDec ASSIGNOP Exp .)
    SEMI            reduce using rule 39 (Dec -> VarDec ASSIGNOP Exp .)
    ASSIGNOP        shift and go to state 89
    AND             shift and go to state 80
    OR              shift and go to state 88
    RELOP           shift and go to state 83
    PLUS            shift and go to state 87
    MINUS           shift and go to state 85
    STAR            shift and go to state 82
    DIV             shift and go to state 86
    LB              shift and go to state 84
    DOT             shift and go to state 81


state 98

    (30) Stmt -> WHILE LP Exp . RP Stmt
    (40) Exp -> Exp . ASSIGNOP Exp
    (41) Exp -> Exp . AND Exp
    (42) Exp -> Exp . OR Exp
    (43) Exp -> Exp . RELOP Exp
    (44) Exp -> Exp . PLUS Exp
    (45) Exp -> Exp . MINUS Exp
    (46) Exp -> Exp . STAR Exp
    (47) Exp -> Exp . DIV Exp
    (53) Exp -> Exp . LB Exp RB
    (54) Exp -> Exp . DOT ID

    RP              shift and go to state 115
    ASSIGNOP        shift and go to state 89
    AND             shift and go to state 80
    OR              shift and go to state 88
    RELOP           shift and go to state 83
    PLUS            shift and go to state 87
    MINUS           shift and go to state 85
    STAR            shift and go to state 82
    DIV             shift and go to state 86
    LB              shift and go to state 84
    DOT             shift and go to state 81


state 99

    (32) Stmt -> RETURN Exp SEMI .

    IF              reduce using rule 32 (Stmt -> RETURN Exp SEMI .)
    WHILE           reduce using rule 32 (Stmt -> RETURN Exp SEMI .)
    RETURN          reduce using rule 32 (Stmt -> RETURN Exp SEMI .)
    error           reduce using rule 32 (Stmt -> RETURN Exp SEMI .)
    LP              reduce using rule 32 (Stmt -> RETURN Exp SEMI .)
    MINUS           reduce using rule 32 (Stmt -> RETURN Exp SEMI .)
    NOT             reduce using rule 32 (Stmt -> RETURN Exp SEMI .)
    ID              reduce using rule 32 (Stmt -> RETURN Exp SEMI .)
    INT             reduce using rule 32 (Stmt -> RETURN Exp SEMI .)
    FLOAT           reduce using rule 32 (Stmt -> RETURN Exp SEMI .)
    LC              reduce using rule 32 (Stmt -> RETURN Exp SEMI .)
    RC              reduce using rule 32 (Stmt -> RETURN Exp SEMI .)
    ELSE            reduce using rule 32 (Stmt -> RETURN Exp SEMI .)


state 100

    (41) Exp -> Exp AND Exp .
    (40) Exp -> Exp . ASSIGNOP Exp
    (41) Exp -> Exp . AND Exp
    (42) Exp -> Exp . OR Exp
    (43) Exp -> Exp . RELOP Exp
    (44) Exp -> Exp . PLUS Exp
    (45) Exp -> Exp . MINUS Exp
    (46) Exp -> Exp . STAR Exp
    (47) Exp -> Exp . DIV Exp
    (53) Exp -> Exp . LB Exp RB
    (54) Exp -> Exp . DOT ID

    ASSIGNOP        reduce using rule 41 (Exp -> Exp AND Exp .)
    AND             reduce using rule 41 (Exp -> Exp AND Exp .)
    OR              reduce using rule 41 (Exp -> Exp AND Exp .)
    SEMI            reduce using rule 41 (Exp -> Exp AND Exp .)
    RP              reduce using rule 41 (Exp -> Exp AND Exp .)
    COMMA           reduce using rule 41 (Exp -> Exp AND Exp .)
    RB              reduce using rule 41 (Exp -> Exp AND Exp .)
    RELOP           shift and go to state 83
    PLUS            shift and go to state 87
    MINUS           shift and go to state 85
    STAR            shift and go to state 82
    DIV             shift and go to state 86
    LB              shift and go to state 84
    DOT             shift and go to state 81

  ! RELOP           [ reduce using rule 41 (Exp -> Exp AND Exp .) ]
  ! PLUS            [ reduce using rule 41 (Exp -> Exp AND Exp .) ]
  ! MINUS           [ reduce using rule 41 (Exp -> Exp AND Exp .) ]
  ! STAR            [ reduce using rule 41 (Exp -> Exp AND Exp .) ]
  ! DIV             [ reduce using rule 41 (Exp -> Exp AND Exp .) ]
  ! LB              [ reduce using rule 41 (Exp -> Exp AND Exp .) ]
  ! DOT             [ reduce using rule 41 (Exp -> Exp AND Exp .) ]
  ! ASSIGNOP        [ shift and go to state 89 ]
  ! AND             [ shift and go to state 80 ]
  ! OR              [ shift and go to state 88 ]


state 101

    (54) Exp -> Exp DOT ID .

    ASSIGNOP        reduce using rule 54 (Exp -> Exp DOT ID .)
    AND             reduce using rule 54 (Exp -> Exp DOT ID .)
    OR              reduce using rule 54 (Exp -> Exp DOT ID .)
    RELOP           reduce using rule 54 (Exp -> Exp DOT ID .)
    PLUS            reduce using rule 54 (Exp -> Exp DOT ID .)
    MINUS           reduce using rule 54 (Exp -> Exp DOT ID .)
    STAR            reduce using rule 54 (Exp -> Exp DOT ID .)
    DIV             reduce using rule 54 (Exp -> Exp DOT ID .)
    LB              reduce using rule 54 (Exp -> Exp DOT ID .)
    DOT             reduce using rule 54 (Exp -> Exp DOT ID .)
    SEMI            reduce using rule 54 (Exp -> Exp DOT ID .)
    RP              reduce using rule 54 (Exp -> Exp DOT ID .)
    COMMA           reduce using rule 54 (Exp -> Exp DOT ID .)
    RB              reduce using rule 54 (Exp -> Exp DOT ID .)


state 102

    (46) Exp -> Exp STAR Exp .
    (40) Exp -> Exp . ASSIGNOP Exp
    (41) Exp -> Exp . AND Exp
    (42) Exp -> Exp . OR Exp
    (43) Exp -> Exp . RELOP Exp
    (44) Exp -> Exp . PLUS Exp
    (45) Exp -> Exp . MINUS Exp
    (46) Exp -> Exp . STAR Exp
    (47) Exp -> Exp . DIV Exp
    (53) Exp -> Exp . LB Exp RB
    (54) Exp -> Exp . DOT ID

    ASSIGNOP        reduce using rule 46 (Exp -> Exp STAR Exp .)
    AND             reduce using rule 46 (Exp -> Exp STAR Exp .)
    OR              reduce using rule 46 (Exp -> Exp STAR Exp .)
    RELOP           reduce using rule 46 (Exp -> Exp STAR Exp .)
    PLUS            reduce using rule 46 (Exp -> Exp STAR Exp .)
    MINUS           reduce using rule 46 (Exp -> Exp STAR Exp .)
    STAR            reduce using rule 46 (Exp -> Exp STAR Exp .)
    DIV             reduce using rule 46 (Exp -> Exp STAR Exp .)
    SEMI            reduce using rule 46 (Exp -> Exp STAR Exp .)
    RP              reduce using rule 46 (Exp -> Exp STAR Exp .)
    COMMA           reduce using rule 46 (Exp -> Exp STAR Exp .)
    RB              reduce using rule 46 (Exp -> Exp STAR Exp .)
    LB              shift and go to state 84
    DOT             shift and go to state 81

  ! LB              [ reduce using rule 46 (Exp -> Exp STAR Exp .) ]
  ! DOT             [ reduce using rule 46 (Exp -> Exp STAR Exp .) ]
  ! ASSIGNOP        [ shift and go to state 89 ]
  ! AND             [ shift and go to state 80 ]
  ! OR              [ shift and go to state 88 ]
  ! RELOP           [ shift and go to state 83 ]
  ! PLUS            [ shift and go to state 87 ]
  ! MINUS           [ shift and go to state 85 ]
  ! STAR            [ shift and go to state 82 ]
  ! DIV             [ shift and go to state 86 ]


state 103

    (43) Exp -> Exp RELOP Exp .
    (40) Exp -> Exp . ASSIGNOP Exp
    (41) Exp -> Exp . AND Exp
    (42) Exp -> Exp . OR Exp
    (43) Exp -> Exp . RELOP Exp
    (44) Exp -> Exp . PLUS Exp
    (45) Exp -> Exp . MINUS Exp
    (46) Exp -> Exp . STAR Exp
    (47) Exp -> Exp . DIV Exp
    (53) Exp -> Exp . LB Exp RB
    (54) Exp -> Exp . DOT ID

    ASSIGNOP        reduce using rule 43 (Exp -> Exp RELOP Exp .)
    AND             reduce using rule 43 (Exp -> Exp RELOP Exp .)
    OR              reduce using rule 43 (Exp -> Exp RELOP Exp .)
    RELOP           reduce using rule 43 (Exp -> Exp RELOP Exp .)
    SEMI            reduce using rule 43 (Exp -> Exp RELOP Exp .)
    RP              reduce using rule 43 (Exp -> Exp RELOP Exp .)
    COMMA           reduce using rule 43 (Exp -> Exp RELOP Exp .)
    RB              reduce using rule 43 (Exp -> Exp RELOP Exp .)
    PLUS            shift and go to state 87
    MINUS           shift and go to state 85
    STAR            shift and go to state 82
    DIV             shift and go to state 86
    LB              shift and go to state 84
    DOT             shift and go to state 81

  ! PLUS            [ reduce using rule 43 (Exp -> Exp RELOP Exp .) ]
  ! MINUS           [ reduce using rule 43 (Exp -> Exp RELOP Exp .) ]
  ! STAR            [ reduce using rule 43 (Exp -> Exp RELOP Exp .) ]
  ! DIV             [ reduce using rule 43 (Exp -> Exp RELOP Exp .) ]
  ! LB              [ reduce using rule 43 (Exp -> Exp RELOP Exp .) ]
  ! DOT             [ reduce using rule 43 (Exp -> Exp RELOP Exp .) ]
  ! ASSIGNOP        [ shift and go to state 89 ]
  ! AND             [ shift and go to state 80 ]
  ! OR              [ shift and go to state 88 ]
  ! RELOP           [ shift and go to state 83 ]


state 104

    (53) Exp -> Exp LB Exp . RB
    (40) Exp -> Exp . ASSIGNOP Exp
    (41) Exp -> Exp . AND Exp
    (42) Exp -> Exp . OR Exp
    (43) Exp -> Exp . RELOP Exp
    (44) Exp -> Exp . PLUS Exp
    (45) Exp -> Exp . MINUS Exp
    (46) Exp -> Exp . STAR Exp
    (47) Exp -> Exp . DIV Exp
    (53) Exp -> Exp . LB Exp RB
    (54) Exp -> Exp . DOT ID

    RB              shift and go to state 116
    ASSIGNOP        shift and go to state 89
    AND             shift and go to state 80
    OR              shift and go to state 88
    RELOP           shift and go to state 83
    PLUS            shift and go to state 87
    MINUS           shift and go to state 85
    STAR            shift and go to state 82
    DIV             shift and go to state 86
    LB              shift and go to state 84
    DOT             shift and go to state 81


state 105

    (45) Exp -> Exp MINUS Exp .
    (40) Exp -> Exp . ASSIGNOP Exp
    (41) Exp -> Exp . AND Exp
    (42) Exp -> Exp . OR Exp
    (43) Exp -> Exp . RELOP Exp
    (44) Exp -> Exp . PLUS Exp
    (45) Exp -> Exp . MINUS Exp
    (46) Exp -> Exp . STAR Exp
    (47) Exp -> Exp . DIV Exp
    (53) Exp -> Exp . LB Exp RB
    (54) Exp -> Exp . DOT ID

    ASSIGNOP        reduce using rule 45 (Exp -> Exp MINUS Exp .)
    AND             reduce using rule 45 (Exp -> Exp MINUS Exp .)
    OR              reduce using rule 45 (Exp -> Exp MINUS Exp .)
    RELOP           reduce using rule 45 (Exp -> Exp MINUS Exp .)
    PLUS            reduce using rule 45 (Exp -> Exp MINUS Exp .)
    MINUS           reduce using rule 45 (Exp -> Exp MINUS Exp .)
    SEMI            reduce using rule 45 (Exp -> Exp MINUS Exp .)
    RP              reduce using rule 45 (Exp -> Exp MINUS Exp .)
    COMMA           reduce using rule 45 (Exp -> Exp MINUS Exp .)
    RB              reduce using rule 45 (Exp -> Exp MINUS Exp .)
    STAR            shift and go to state 82
    DIV             shift and go to state 86
    LB              shift and go to state 84
    DOT             shift and go to state 81

  ! STAR            [ reduce using rule 45 (Exp -> Exp MINUS Exp .) ]
  ! DIV             [ reduce using rule 45 (Exp -> Exp MINUS Exp .) ]
  ! LB              [ reduce using rule 45 (Exp -> Exp MINUS Exp .) ]
  ! DOT             [ reduce using rule 45 (Exp -> Exp MINUS Exp .) ]
  ! ASSIGNOP        [ shift and go to state 89 ]
  ! AND             [ shift and go to state 80 ]
  ! OR              [ shift and go to state 88 ]
  ! RELOP           [ shift and go to state 83 ]
  ! PLUS            [ shift and go to state 87 ]
  ! MINUS           [ shift and go to state 85 ]


state 106

    (47) Exp -> Exp DIV Exp .
    (40) Exp -> Exp . ASSIGNOP Exp
    (41) Exp -> Exp . AND Exp
    (42) Exp -> Exp . OR Exp
    (43) Exp -> Exp . RELOP Exp
    (44) Exp -> Exp . PLUS Exp
    (45) Exp -> Exp . MINUS Exp
    (46) Exp -> Exp . STAR Exp
    (47) Exp -> Exp . DIV Exp
    (53) Exp -> Exp . LB Exp RB
    (54) Exp -> Exp . DOT ID

    ASSIGNOP        reduce using rule 47 (Exp -> Exp DIV Exp .)
    AND             reduce using rule 47 (Exp -> Exp DIV Exp .)
    OR              reduce using rule 47 (Exp -> Exp DIV Exp .)
    RELOP           reduce using rule 47 (Exp -> Exp DIV Exp .)
    PLUS            reduce using rule 47 (Exp -> Exp DIV Exp .)
    MINUS           reduce using rule 47 (Exp -> Exp DIV Exp .)
    STAR            reduce using rule 47 (Exp -> Exp DIV Exp .)
    DIV             reduce using rule 47 (Exp -> Exp DIV Exp .)
    SEMI            reduce using rule 47 (Exp -> Exp DIV Exp .)
    RP              reduce using rule 47 (Exp -> Exp DIV Exp .)
    COMMA           reduce using rule 47 (Exp -> Exp DIV Exp .)
    RB              reduce using rule 47 (Exp -> Exp DIV Exp .)
    LB              shift and go to state 84
    DOT             shift and go to state 81

  ! LB              [ reduce using rule 47 (Exp -> Exp DIV Exp .) ]
  ! DOT             [ reduce using rule 47 (Exp -> Exp DIV Exp .) ]
  ! ASSIGNOP        [ shift and go to state 89 ]
  ! AND             [ shift and go to state 80 ]
  ! OR              [ shift and go to state 88 ]
  ! RELOP           [ shift and go to state 83 ]
  ! PLUS            [ shift and go to state 87 ]
  ! MINUS           [ shift and go to state 85 ]
  ! STAR            [ shift and go to state 82 ]
  ! DIV             [ shift and go to state 86 ]


state 107

    (44) Exp -> Exp PLUS Exp .
    (40) Exp -> Exp . ASSIGNOP Exp
    (41) Exp -> Exp . AND Exp
    (42) Exp -> Exp . OR Exp
    (43) Exp -> Exp . RELOP Exp
    (44) Exp -> Exp . PLUS Exp
    (45) Exp -> Exp . MINUS Exp
    (46) Exp -> Exp . STAR Exp
    (47) Exp -> Exp . DIV Exp
    (53) Exp -> Exp . LB Exp RB
    (54) Exp -> Exp . DOT ID

    ASSIGNOP        reduce using rule 44 (Exp -> Exp PLUS Exp .)
    AND             reduce using rule 44 (Exp -> Exp PLUS Exp .)
    OR              reduce using rule 44 (Exp -> Exp PLUS Exp .)
    RELOP           reduce using rule 44 (Exp -> Exp PLUS Exp .)
    PLUS            reduce using rule 44 (Exp -> Exp PLUS Exp .)
    MINUS           reduce using rule 44 (Exp -> Exp PLUS Exp .)
    SEMI            reduce using rule 44 (Exp -> Exp PLUS Exp .)
    RP              reduce using rule 44 (Exp -> Exp PLUS Exp .)
    COMMA           reduce using rule 44 (Exp -> Exp PLUS Exp .)
    RB              reduce using rule 44 (Exp -> Exp PLUS Exp .)
    STAR            shift and go to state 82
    DIV             shift and go to state 86
    LB              shift and go to state 84
    DOT             shift and go to state 81

  ! STAR            [ reduce using rule 44 (Exp -> Exp PLUS Exp .) ]
  ! DIV             [ reduce using rule 44 (Exp -> Exp PLUS Exp .) ]
  ! LB              [ reduce using rule 44 (Exp -> Exp PLUS Exp .) ]
  ! DOT             [ reduce using rule 44 (Exp -> Exp PLUS Exp .) ]
  ! ASSIGNOP        [ shift and go to state 89 ]
  ! AND             [ shift and go to state 80 ]
  ! OR              [ shift and go to state 88 ]
  ! RELOP           [ shift and go to state 83 ]
  ! PLUS            [ shift and go to state 87 ]
  ! MINUS           [ shift and go to state 85 ]


state 108

    (42) Exp -> Exp OR Exp .
    (40) Exp -> Exp . ASSIGNOP Exp
    (41) Exp -> Exp . AND Exp
    (42) Exp -> Exp . OR Exp
    (43) Exp -> Exp . RELOP Exp
    (44) Exp -> Exp . PLUS Exp
    (45) Exp -> Exp . MINUS Exp
    (46) Exp -> Exp . STAR Exp
    (47) Exp -> Exp . DIV Exp
    (53) Exp -> Exp . LB Exp RB
    (54) Exp -> Exp . DOT ID

    ASSIGNOP        reduce using rule 42 (Exp -> Exp OR Exp .)
    OR              reduce using rule 42 (Exp -> Exp OR Exp .)
    SEMI            reduce using rule 42 (Exp -> Exp OR Exp .)
    RP              reduce using rule 42 (Exp -> Exp OR Exp .)
    COMMA           reduce using rule 42 (Exp -> Exp OR Exp .)
    RB              reduce using rule 42 (Exp -> Exp OR Exp .)
    AND             shift and go to state 80
    RELOP           shift and go to state 83
    PLUS            shift and go to state 87
    MINUS           shift and go to state 85
    STAR            shift and go to state 82
    DIV             shift and go to state 86
    LB              shift and go to state 84
    DOT             shift and go to state 81

  ! AND             [ reduce using rule 42 (Exp -> Exp OR Exp .) ]
  ! RELOP           [ reduce using rule 42 (Exp -> Exp OR Exp .) ]
  ! PLUS            [ reduce using rule 42 (Exp -> Exp OR Exp .) ]
  ! MINUS           [ reduce using rule 42 (Exp -> Exp OR Exp .) ]
  ! STAR            [ reduce using rule 42 (Exp -> Exp OR Exp .) ]
  ! DIV             [ reduce using rule 42 (Exp -> Exp OR Exp .) ]
  ! LB              [ reduce using rule 42 (Exp -> Exp OR Exp .) ]
  ! DOT             [ reduce using rule 42 (Exp -> Exp OR Exp .) ]
  ! ASSIGNOP        [ shift and go to state 89 ]
  ! OR              [ shift and go to state 88 ]


state 109

    (40) Exp -> Exp ASSIGNOP Exp .
    (40) Exp -> Exp . ASSIGNOP Exp
    (41) Exp -> Exp . AND Exp
    (42) Exp -> Exp . OR Exp
    (43) Exp -> Exp . RELOP Exp
    (44) Exp -> Exp . PLUS Exp
    (45) Exp -> Exp . MINUS Exp
    (46) Exp -> Exp . STAR Exp
    (47) Exp -> Exp . DIV Exp
    (53) Exp -> Exp . LB Exp RB
    (54) Exp -> Exp . DOT ID

    SEMI            reduce using rule 40 (Exp -> Exp ASSIGNOP Exp .)
    RP              reduce using rule 40 (Exp -> Exp ASSIGNOP Exp .)
    COMMA           reduce using rule 40 (Exp -> Exp ASSIGNOP Exp .)
    RB              reduce using rule 40 (Exp -> Exp ASSIGNOP Exp .)
    ASSIGNOP        shift and go to state 89
    AND             shift and go to state 80
    OR              shift and go to state 88
    RELOP           shift and go to state 83
    PLUS            shift and go to state 87
    MINUS           shift and go to state 85
    STAR            shift and go to state 82
    DIV             shift and go to state 86
    LB              shift and go to state 84
    DOT             shift and go to state 81

  ! ASSIGNOP        [ reduce using rule 40 (Exp -> Exp ASSIGNOP Exp .) ]
  ! AND             [ reduce using rule 40 (Exp -> Exp ASSIGNOP Exp .) ]
  ! OR              [ reduce using rule 40 (Exp -> Exp ASSIGNOP Exp .) ]
  ! RELOP           [ reduce using rule 40 (Exp -> Exp ASSIGNOP Exp .) ]
  ! PLUS            [ reduce using rule 40 (Exp -> Exp ASSIGNOP Exp .) ]
  ! MINUS           [ reduce using rule 40 (Exp -> Exp ASSIGNOP Exp .) ]
  ! STAR            [ reduce using rule 40 (Exp -> Exp ASSIGNOP Exp .) ]
  ! DIV             [ reduce using rule 40 (Exp -> Exp ASSIGNOP Exp .) ]
  ! LB              [ reduce using rule 40 (Exp -> Exp ASSIGNOP Exp .) ]
  ! DOT             [ reduce using rule 40 (Exp -> Exp ASSIGNOP Exp .) ]


state 110

    (58) Args -> Exp . COMMA Args
    (59) Args -> Exp .
    (40) Exp -> Exp . ASSIGNOP Exp
    (41) Exp -> Exp . AND Exp
    (42) Exp -> Exp . OR Exp
    (43) Exp -> Exp . RELOP Exp
    (44) Exp -> Exp . PLUS Exp
    (45) Exp -> Exp . MINUS Exp
    (46) Exp -> Exp . STAR Exp
    (47) Exp -> Exp . DIV Exp
    (53) Exp -> Exp . LB Exp RB
    (54) Exp -> Exp . DOT ID

    COMMA           shift and go to state 117
    RP              reduce using rule 59 (Args -> Exp .)
    ASSIGNOP        shift and go to state 89
    AND             shift and go to state 80
    OR              shift and go to state 88
    RELOP           shift and go to state 83
    PLUS            shift and go to state 87
    MINUS           shift and go to state 85
    STAR            shift and go to state 82
    DIV             shift and go to state 86
    LB              shift and go to state 84
    DOT             shift and go to state 81


state 111

    (52) Exp -> ID LP RP .

    ASSIGNOP        reduce using rule 52 (Exp -> ID LP RP .)
    AND             reduce using rule 52 (Exp -> ID LP RP .)
    OR              reduce using rule 52 (Exp -> ID LP RP .)
    RELOP           reduce using rule 52 (Exp -> ID LP RP .)
    PLUS            reduce using rule 52 (Exp -> ID LP RP .)
    MINUS           reduce using rule 52 (Exp -> ID LP RP .)
    STAR            reduce using rule 52 (Exp -> ID LP RP .)
    DIV             reduce using rule 52 (Exp -> ID LP RP .)
    LB              reduce using rule 52 (Exp -> ID LP RP .)
    DOT             reduce using rule 52 (Exp -> ID LP RP .)
    SEMI            reduce using rule 52 (Exp -> ID LP RP .)
    RP              reduce using rule 52 (Exp -> ID LP RP .)
    COMMA           reduce using rule 52 (Exp -> ID LP RP .)
    RB              reduce using rule 52 (Exp -> ID LP RP .)


state 112

    (51) Exp -> ID LP Args . RP

    RP              shift and go to state 118


state 113

    (29) Stmt -> IF LP Exp . RP Stmt
    (31) Stmt -> IF LP Exp . RP Stmt ELSE Stmt
    (40) Exp -> Exp . ASSIGNOP Exp
    (41) Exp -> Exp . AND Exp
    (42) Exp -> Exp . OR Exp
    (43) Exp -> Exp . RELOP Exp
    (44) Exp -> Exp . PLUS Exp
    (45) Exp -> Exp . MINUS Exp
    (46) Exp -> Exp . STAR Exp
    (47) Exp -> Exp . DIV Exp
    (53) Exp -> Exp . LB Exp RB
    (54) Exp -> Exp . DOT ID

    RP              shift and go to state 119
    ASSIGNOP        shift and go to state 89
    AND             shift and go to state 80
    OR              shift and go to state 88
    RELOP           shift and go to state 83
    PLUS            shift and go to state 87
    MINUS           shift and go to state 85
    STAR            shift and go to state 82
    DIV             shift and go to state 86
    LB              shift and go to state 84
    DOT             shift and go to state 81


state 114

    (48) Exp -> LP Exp RP .

    ASSIGNOP        reduce using rule 48 (Exp -> LP Exp RP .)
    AND             reduce using rule 48 (Exp -> LP Exp RP .)
    OR              reduce using rule 48 (Exp -> LP Exp RP .)
    RELOP           reduce using rule 48 (Exp -> LP Exp RP .)
    PLUS            reduce using rule 48 (Exp -> LP Exp RP .)
    MINUS           reduce using rule 48 (Exp -> LP Exp RP .)
    STAR            reduce using rule 48 (Exp -> LP Exp RP .)
    DIV             reduce using rule 48 (Exp -> LP Exp RP .)
    LB              reduce using rule 48 (Exp -> LP Exp RP .)
    DOT             reduce using rule 48 (Exp -> LP Exp RP .)
    SEMI            reduce using rule 48 (Exp -> LP Exp RP .)
    RP              reduce using rule 48 (Exp -> LP Exp RP .)
    COMMA           reduce using rule 48 (Exp -> LP Exp RP .)
    RB              reduce using rule 48 (Exp -> LP Exp RP .)


state 115

    (30) Stmt -> WHILE LP Exp RP . Stmt
    (27) Stmt -> . Exp SEMI
    (28) Stmt -> . CompSt
    (29) Stmt -> . IF LP Exp RP Stmt
    (30) Stmt -> . WHILE LP Exp RP Stmt
    (31) Stmt -> . IF LP Exp RP Stmt ELSE Stmt
    (32) Stmt -> . RETURN Exp SEMI
    (64) Stmt -> . error SEMI
    (40) Exp -> . Exp ASSIGNOP Exp
    (41) Exp -> . Exp AND Exp
    (42) Exp -> . Exp OR Exp
    (43) Exp -> . Exp RELOP Exp
    (44) Exp -> . Exp PLUS Exp
    (45) Exp -> . Exp MINUS Exp
    (46) Exp -> . Exp STAR Exp
    (47) Exp -> . Exp DIV Exp
    (48) Exp -> . LP Exp RP
    (49) Exp -> . MINUS Exp
    (50) Exp -> . NOT Exp
    (51) Exp -> . ID LP Args RP
    (52) Exp -> . ID LP RP
    (53) Exp -> . Exp LB Exp RB
    (54) Exp -> . Exp DOT ID
    (55) Exp -> . ID
    (56) Exp -> . INT
    (57) Exp -> . FLOAT
    (24) CompSt -> . LC DefList StmtList RC
    (63) CompSt -> . error RC

    IF              shift and go to state 66
    WHILE           shift and go to state 57
    RETURN          shift and go to state 62
    error           shift and go to state 67
    LP              shift and go to state 68
    MINUS           shift and go to state 65
    NOT             shift and go to state 59
    ID              shift and go to state 64
    INT             shift and go to state 54
    FLOAT           shift and go to state 55
    LC              shift and go to state 26

    Stmt                           shift and go to state 120
    CompSt                         shift and go to state 56
    Exp                            shift and go to state 63

state 116

    (53) Exp -> Exp LB Exp RB .

    ASSIGNOP        reduce using rule 53 (Exp -> Exp LB Exp RB .)
    AND             reduce using rule 53 (Exp -> Exp LB Exp RB .)
    OR              reduce using rule 53 (Exp -> Exp LB Exp RB .)
    RELOP           reduce using rule 53 (Exp -> Exp LB Exp RB .)
    PLUS            reduce using rule 53 (Exp -> Exp LB Exp RB .)
    MINUS           reduce using rule 53 (Exp -> Exp LB Exp RB .)
    STAR            reduce using rule 53 (Exp -> Exp LB Exp RB .)
    DIV             reduce using rule 53 (Exp -> Exp LB Exp RB .)
    LB              reduce using rule 53 (Exp -> Exp LB Exp RB .)
    DOT             reduce using rule 53 (Exp -> Exp LB Exp RB .)
    SEMI            reduce using rule 53 (Exp -> Exp LB Exp RB .)
    RP              reduce using rule 53 (Exp -> Exp LB Exp RB .)
    COMMA           reduce using rule 53 (Exp -> Exp LB Exp RB .)
    RB              reduce using rule 53 (Exp -> Exp LB Exp RB .)


state 117

    (58) Args -> Exp COMMA . Args
    (58) Args -> . Exp COMMA Args
    (59) Args -> . Exp
    (40) Exp -> . Exp ASSIGNOP Exp
    (41) Exp -> . Exp AND Exp
    (42) Exp -> . Exp OR Exp
    (43) Exp -> . Exp RELOP Exp
    (44) Exp -> . Exp PLUS Exp
    (45) Exp -> . Exp MINUS Exp
    (46) Exp -> . Exp STAR Exp
    (47) Exp -> . Exp DIV Exp
    (48) Exp -> . LP Exp RP
    (49) Exp -> . MINUS Exp
    (50) Exp -> . NOT Exp
    (51) Exp -> . ID LP Args RP
    (52) Exp -> . ID LP RP
    (53) Exp -> . Exp LB Exp RB
    (54) Exp -> . Exp DOT ID
    (55) Exp -> . ID
    (56) Exp -> . INT
    (57) Exp -> . FLOAT

    LP              shift and go to state 68
    MINUS           shift and go to state 65
    NOT             shift and go to state 59
    ID              shift and go to state 64
    INT             shift and go to state 54
    FLOAT           shift and go to state 55

    Args                           shift and go to state 121
    Exp                            shift and go to state 110

state 118

    (51) Exp -> ID LP Args RP .

    ASSIGNOP        reduce using rule 51 (Exp -> ID LP Args RP .)
    AND             reduce using rule 51 (Exp -> ID LP Args RP .)
    OR              reduce using rule 51 (Exp -> ID LP Args RP .)
    RELOP           reduce using rule 51 (Exp -> ID LP Args RP .)
    PLUS            reduce using rule 51 (Exp -> ID LP Args RP .)
    MINUS           reduce using rule 51 (Exp -> ID LP Args RP .)
    STAR            reduce using rule 51 (Exp -> ID LP Args RP .)
    DIV             reduce using rule 51 (Exp -> ID LP Args RP .)
    LB              reduce using rule 51 (Exp -> ID LP Args RP .)
    DOT             reduce using rule 51 (Exp -> ID LP Args RP .)
    SEMI            reduce using rule 51 (Exp -> ID LP Args RP .)
    RP              reduce using rule 51 (Exp -> ID LP Args RP .)
    COMMA           reduce using rule 51 (Exp -> ID LP Args RP .)
    RB              reduce using rule 51 (Exp -> ID LP Args RP .)


state 119

    (29) Stmt -> IF LP Exp RP . Stmt
    (31) Stmt -> IF LP Exp RP . Stmt ELSE Stmt
    (27) Stmt -> . Exp SEMI
    (28) Stmt -> . CompSt
    (29) Stmt -> . IF LP Exp RP Stmt
    (30) Stmt -> . WHILE LP Exp RP Stmt
    (31) Stmt -> . IF LP Exp RP Stmt ELSE Stmt
    (32) Stmt -> . RETURN Exp SEMI
    (64) Stmt -> . error SEMI
    (40) Exp -> . Exp ASSIGNOP Exp
    (41) Exp -> . Exp AND Exp
    (42) Exp -> . Exp OR Exp
    (43) Exp -> . Exp RELOP Exp
    (44) Exp -> . Exp PLUS Exp
    (45) Exp -> . Exp MINUS Exp
    (46) Exp -> . Exp STAR Exp
    (47) Exp -> . Exp DIV Exp
    (48) Exp -> . LP Exp RP
    (49) Exp -> . MINUS Exp
    (50) Exp -> . NOT Exp
    (51) Exp -> . ID LP Args RP
    (52) Exp -> . ID LP RP
    (53) Exp -> . Exp LB Exp RB
    (54) Exp -> . Exp DOT ID
    (55) Exp -> . ID
    (56) Exp -> . INT
    (57) Exp -> . FLOAT
    (24) CompSt -> . LC DefList StmtList RC
    (63) CompSt -> . error RC

    IF              shift and go to state 66
    WHILE           shift and go to state 57
    RETURN          shift and go to state 62
    error           shift and go to state 67
    LP              shift and go to state 68
    MINUS           shift and go to state 65
    NOT             shift and go to state 59
    ID              shift and go to state 64
    INT             shift and go to state 54
    FLOAT           shift and go to state 55
    LC              shift and go to state 26

    Stmt                           shift and go to state 122
    CompSt                         shift and go to state 56
    Exp                            shift and go to state 63

state 120

    (30) Stmt -> WHILE LP Exp RP Stmt .

    IF              reduce using rule 30 (Stmt -> WHILE LP Exp RP Stmt .)
    WHILE           reduce using rule 30 (Stmt -> WHILE LP Exp RP Stmt .)
    RETURN          reduce using rule 30 (Stmt -> WHILE LP Exp RP Stmt .)
    error           reduce using rule 30 (Stmt -> WHILE LP Exp RP Stmt .)
    LP              reduce using rule 30 (Stmt -> WHILE LP Exp RP Stmt .)
    MINUS           reduce using rule 30 (Stmt -> WHILE LP Exp RP Stmt .)
    NOT             reduce using rule 30 (Stmt -> WHILE LP Exp RP Stmt .)
    ID              reduce using rule 30 (Stmt -> WHILE LP Exp RP Stmt .)
    INT             reduce using rule 30 (Stmt -> WHILE LP Exp RP Stmt .)
    FLOAT           reduce using rule 30 (Stmt -> WHILE LP Exp RP Stmt .)
    LC              reduce using rule 30 (Stmt -> WHILE LP Exp RP Stmt .)
    RC              reduce using rule 30 (Stmt -> WHILE LP Exp RP Stmt .)
    ELSE            reduce using rule 30 (Stmt -> WHILE LP Exp RP Stmt .)


state 121

    (58) Args -> Exp COMMA Args .

    RP              reduce using rule 58 (Args -> Exp COMMA Args .)


state 122

    (29) Stmt -> IF LP Exp RP Stmt .
    (31) Stmt -> IF LP Exp RP Stmt . ELSE Stmt

    IF              reduce using rule 29 (Stmt -> IF LP Exp RP Stmt .)
    WHILE           reduce using rule 29 (Stmt -> IF LP Exp RP Stmt .)
    RETURN          reduce using rule 29 (Stmt -> IF LP Exp RP Stmt .)
    error           reduce using rule 29 (Stmt -> IF LP Exp RP Stmt .)
    LP              reduce using rule 29 (Stmt -> IF LP Exp RP Stmt .)
    MINUS           reduce using rule 29 (Stmt -> IF LP Exp RP Stmt .)
    NOT             reduce using rule 29 (Stmt -> IF LP Exp RP Stmt .)
    ID              reduce using rule 29 (Stmt -> IF LP Exp RP Stmt .)
    INT             reduce using rule 29 (Stmt -> IF LP Exp RP Stmt .)
    FLOAT           reduce using rule 29 (Stmt -> IF LP Exp RP Stmt .)
    LC              reduce using rule 29 (Stmt -> IF LP Exp RP Stmt .)
    RC              reduce using rule 29 (Stmt -> IF LP Exp RP Stmt .)
    ELSE            shift and go to state 123

  ! ELSE            [ reduce using rule 29 (Stmt -> IF LP Exp RP Stmt .) ]


state 123

    (31) Stmt -> IF LP Exp RP Stmt ELSE . Stmt
    (27) Stmt -> . Exp SEMI
    (28) Stmt -> . CompSt
    (29) Stmt -> . IF LP Exp RP Stmt
    (30) Stmt -> . WHILE LP Exp RP Stmt
    (31) Stmt -> . IF LP Exp RP Stmt ELSE Stmt
    (32) Stmt -> . RETURN Exp SEMI
    (64) Stmt -> . error SEMI
    (40) Exp -> . Exp ASSIGNOP Exp
    (41) Exp -> . Exp AND Exp
    (42) Exp -> . Exp OR Exp
    (43) Exp -> . Exp RELOP Exp
    (44) Exp -> . Exp PLUS Exp
    (45) Exp -> . Exp MINUS Exp
    (46) Exp -> . Exp STAR Exp
    (47) Exp -> . Exp DIV Exp
    (48) Exp -> . LP Exp RP
    (49) Exp -> . MINUS Exp
    (50) Exp -> . NOT Exp
    (51) Exp -> . ID LP Args RP
    (52) Exp -> . ID LP RP
    (53) Exp -> . Exp LB Exp RB
    (54) Exp -> . Exp DOT ID
    (55) Exp -> . ID
    (56) Exp -> . INT
    (57) Exp -> . FLOAT
    (24) CompSt -> . LC DefList StmtList RC
    (63) CompSt -> . error RC

    IF              shift and go to state 66
    WHILE           shift and go to state 57
    RETURN          shift and go to state 62
    error           shift and go to state 67
    LP              shift and go to state 68
    MINUS           shift and go to state 65
    NOT             shift and go to state 59
    ID              shift and go to state 64
    INT             shift and go to state 54
    FLOAT           shift and go to state 55
    LC              shift and go to state 26

    Stmt                           shift and go to state 124
    CompSt                         shift and go to state 56
    Exp                            shift and go to state 63

state 124

    (31) Stmt -> IF LP Exp RP Stmt ELSE Stmt .

    IF              reduce using rule 31 (Stmt -> IF LP Exp RP Stmt ELSE Stmt .)
    WHILE           reduce using rule 31 (Stmt -> IF LP Exp RP Stmt ELSE Stmt .)
    RETURN          reduce using rule 31 (Stmt -> IF LP Exp RP Stmt ELSE Stmt .)
    error           reduce using rule 31 (Stmt -> IF LP Exp RP Stmt ELSE Stmt .)
    LP              reduce using rule 31 (Stmt -> IF LP Exp RP Stmt ELSE Stmt .)
    MINUS           reduce using rule 31 (Stmt -> IF LP Exp RP Stmt ELSE Stmt .)
    NOT             reduce using rule 31 (Stmt -> IF LP Exp RP Stmt ELSE Stmt .)
    ID              reduce using rule 31 (Stmt -> IF LP Exp RP Stmt ELSE Stmt .)
    INT             reduce using rule 31 (Stmt -> IF LP Exp RP Stmt ELSE Stmt .)
    FLOAT           reduce using rule 31 (Stmt -> IF LP Exp RP Stmt ELSE Stmt .)
    LC              reduce using rule 31 (Stmt -> IF LP Exp RP Stmt ELSE Stmt .)
    RC              reduce using rule 31 (Stmt -> IF LP Exp RP Stmt ELSE Stmt .)
    ELSE            reduce using rule 31 (Stmt -> IF LP Exp RP Stmt ELSE Stmt .)

