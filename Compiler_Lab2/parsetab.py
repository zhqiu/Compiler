
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightASSIGNOPleftORleftANDleftRELOPleftPLUSMINUSleftSTARDIVrightNOTleftDOTLBRBLPRPnonassocif_thennonassocELSEnonassocSTRUCTRETURNWHILEINT FLOAT ID SEMI COMMA ASSIGNOP RELOP PLUS MINUS STAR DIV AND OR DOT NOT LP RP LB RB LC RC STRUCT WHILE RETURN ELSE IF TYPEProgram : ExtDefListExtDefList\t: ExtDef ExtDefList\n\t           \t\t| emptyExtDef\t:\tSpecifier SEMIExtDef :\tSpecifier FunDec CompStExtDef : Specifier FunDec SEMIExtDef\t:\tSpecifier ExtDecList SEMIExtDecList : VarDecExtDecList : VarDec COMMA ExtDecList\t Specifier : TYPESpecifier : StructSpecifierStructSpecifier : STRUCT OptTag LC DefList RCStructSpecifier : STRUCT TagOptTag : IDOptTag : emptyTag :\tIDVarDec : IDVarDec : VarDec LB INT RBFunDec : ID LP VarList RPFunDec : ID LP RPVarList : ParamDec COMMA VarListVarList : ParamDecParamDec\t:\tSpecifier VarDecCompSt\t: LC DefList StmtList RCStmtList\t: Stmt StmtList\n\t            | emptyStmt :\tExp SEMIStmt : CompStStmt : IF LP Exp RP Stmt %prec if_thenStmt : WHILE LP Exp RP StmtStmt : IF LP Exp RP Stmt ELSE StmtStmt : RETURN Exp SEMIDefList\t: Def DefList \n\t            | emptyDef : Specifier DecList SEMIDecList\t:\tDecDecList\t: Dec COMMA DecListDec\t:\tVarDecDec\t: VarDec ASSIGNOP Exp Exp : Exp ASSIGNOP ExpExp : Exp AND ExpExp : Exp OR ExpExp : Exp RELOP ExpExp : Exp PLUS ExpExp : Exp MINUS ExpExp : Exp STAR ExpExp : Exp DIV ExpExp : LP Exp RPExp : MINUS ExpExp : NOT ExpExp : ID LP Args RPExp : ID LP RPExp : Exp LB Exp RBExp : Exp DOT IDExp : IDExp : INTExp : FLOATArgs : Exp COMMA ArgsArgs : Expempty :ExtDef : error SEMIFunDec : error RPCompSt : error RCStmt : error SEMIDef : Specifier error SEMI'
    
_lr_action_items = {'INT':([26,30,33,35,40,41,50,56,58,59,62,65,68,71,72,73,75,78,80,82,83,84,85,86,87,88,89,90,91,93,94,99,115,117,119,120,122,123,124,],[-60,42,-34,-60,54,-63,-33,-28,54,54,54,54,54,-35,-65,54,54,-24,54,54,54,54,54,54,54,54,54,-27,54,54,-64,-32,54,54,54,-30,-29,54,-31,]),'FLOAT':([26,33,35,40,41,50,56,58,59,62,65,68,71,72,73,75,78,80,82,83,84,85,86,87,88,89,90,91,93,94,99,115,117,119,120,122,123,124,],[-60,-34,-60,55,-63,-33,-28,55,55,55,55,55,-35,-65,55,55,-24,55,55,55,55,55,55,55,55,55,-27,55,55,-64,-32,55,55,55,-30,-29,55,-31,]),'COMMA':([16,19,39,44,46,49,52,54,55,64,69,77,92,97,100,101,102,103,105,106,107,108,109,110,111,114,116,118,],[-17,31,53,-17,70,-38,-23,-56,-57,-55,-18,-50,-49,-39,-41,-54,-46,-43,-45,-47,-44,-42,-40,117,-52,-48,-53,-51,]),'STRUCT':([0,8,14,20,22,24,25,26,27,29,35,41,53,71,72,78,],[3,3,-61,-4,3,3,-7,3,-5,-6,3,-63,3,-35,-65,-24,]),'WHILE':([26,33,35,40,41,50,56,58,71,72,78,90,94,99,115,119,120,122,123,124,],[-60,-34,-60,57,-63,-33,-28,57,-35,-65,-24,-27,-64,-32,57,57,-30,-29,57,-31,]),'RB':([42,54,55,64,77,92,100,101,102,103,104,105,106,107,108,109,111,114,116,118,],[69,-56,-57,-55,-50,-49,-41,-54,-46,-43,116,-45,-47,-44,-42,-40,-52,-48,-53,-51,]),'ELSE':([41,56,78,90,94,99,120,122,124,],[-63,-28,-24,-27,-64,-32,-30,123,-31,]),'RP':([15,24,36,39,44,52,54,55,64,69,74,77,91,92,95,98,100,101,102,103,105,106,107,108,109,110,111,112,113,114,116,118,121,],[23,37,51,-22,-17,-23,-56,-57,-55,-18,-21,-50,111,-49,114,115,-41,-54,-46,-43,-45,-47,-44,-42,-40,-59,-52,118,119,-48,-53,-51,-58,]),'DIV':([54,55,63,64,77,79,92,95,97,98,100,101,102,103,104,105,106,107,108,109,110,111,113,114,116,118,],[-56,-57,86,-55,-50,86,86,86,86,86,86,-54,-46,86,86,86,-47,86,86,86,86,-52,86,-48,-53,-51,]),'NOT':([26,33,35,40,41,50,56,58,59,62,65,68,71,72,73,75,78,80,82,83,84,85,86,87,88,89,90,91,93,94,99,115,117,119,120,122,123,124,],[-60,-34,-60,59,-63,-33,-28,59,59,59,59,59,-35,-65,59,59,-24,59,59,59,59,59,59,59,59,59,-27,59,59,-64,-32,59,59,59,-30,-29,59,-31,]),'PLUS':([54,55,63,64,77,79,92,95,97,98,100,101,102,103,104,105,106,107,108,109,110,111,113,114,116,118,],[-56,-57,87,-55,-50,87,-49,87,87,87,87,-54,-46,87,87,-45,-47,-44,87,87,87,-52,87,-48,-53,-51,]),'MINUS':([26,33,35,40,41,50,54,55,56,58,59,62,63,64,65,68,71,72,73,75,77,78,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,116,117,118,119,120,122,123,124,],[-60,-34,-60,65,-63,-33,-56,-57,-28,65,65,65,85,-55,65,65,-35,-65,65,65,-50,-24,85,65,65,65,65,65,65,65,65,65,-27,65,-49,65,-64,85,85,85,-32,85,-54,-46,85,85,-45,-47,-44,85,85,85,-52,85,-48,65,-53,65,-51,65,-30,-29,65,-31,]),'AND':([54,55,63,64,77,79,92,95,97,98,100,101,102,103,104,105,106,107,108,109,110,111,113,114,116,118,],[-56,-57,80,-55,-50,80,-49,80,80,80,-41,-54,-46,-43,80,-45,-47,-44,80,80,80,-52,80,-48,-53,-51,]),'DOT':([54,55,63,64,77,79,92,95,97,98,100,101,102,103,104,105,106,107,108,109,110,111,113,114,116,118,],[-56,-57,81,-55,81,81,81,81,81,81,81,-54,81,81,81,81,81,81,81,81,81,-52,81,-48,-53,-51,]),'STAR':([54,55,63,64,77,79,92,95,97,98,100,101,102,103,104,105,106,107,108,109,110,111,113,114,116,118,],[-56,-57,82,-55,-50,82,82,82,82,82,82,-54,-46,82,82,82,-47,82,82,82,82,-52,82,-48,-53,-51,]),'RELOP':([54,55,63,64,77,79,92,95,97,98,100,101,102,103,104,105,106,107,108,109,110,111,113,114,116,118,],[-56,-57,83,-55,-50,83,-49,83,83,83,83,-54,-46,-43,83,-45,-47,-44,83,83,83,-52,83,-48,-53,-51,]),'TYPE':([0,8,14,20,22,24,25,26,27,29,35,41,53,71,72,78,],[9,9,-61,-4,9,9,-7,9,-5,-6,9,-63,9,-35,-65,-24,]),'RETURN':([26,33,35,40,41,50,56,58,71,72,78,90,94,99,115,119,120,122,123,124,],[-60,-34,-60,62,-63,-33,-28,62,-35,-65,-24,-27,-64,-32,62,62,-30,-29,62,-31,]),'RC':([22,26,28,32,33,35,40,41,50,56,58,60,61,67,71,72,76,78,90,94,99,120,122,124,],[-60,-60,41,45,-34,-60,-60,-63,-33,-28,-60,78,-26,41,-35,-65,-25,-24,-27,-64,-32,-30,-29,-31,]),'ID':([3,6,7,9,12,13,26,31,33,34,35,38,40,41,45,50,56,58,59,62,65,68,70,71,72,73,75,78,80,81,82,83,84,85,86,87,88,89,90,91,93,94,99,115,117,119,120,122,123,124,],[12,-11,16,-10,-16,-13,-60,44,-34,44,-60,44,64,-63,-12,-33,-28,64,64,64,64,64,44,-35,-65,64,64,-24,64,101,64,64,64,64,64,64,64,64,-27,64,64,-64,-32,64,64,64,-30,-29,64,-31,]),'LC':([3,10,11,12,18,23,26,33,35,37,40,41,50,51,56,58,71,72,78,90,94,99,115,119,120,122,123,124,],[-60,-15,22,-14,26,-62,-60,-34,-60,-20,26,-63,-33,-19,-28,26,-35,-65,-24,-27,-64,-32,26,26,-30,-29,26,-31,]),'LB':([16,19,44,49,52,54,55,63,64,69,77,79,92,95,97,98,100,101,102,103,104,105,106,107,108,109,110,111,113,114,116,118,],[-17,30,-17,30,30,-56,-57,84,-55,-18,84,84,84,84,84,84,84,-54,84,84,84,84,84,84,84,84,84,-52,84,-48,-53,-51,]),'IF':([26,33,35,40,41,50,56,58,71,72,78,90,94,99,115,119,120,122,123,124,],[-60,-34,-60,66,-63,-33,-28,66,-35,-65,-24,-27,-64,-32,66,66,-30,-29,66,-31,]),'ASSIGNOP':([44,49,54,55,63,64,69,77,79,92,95,97,98,100,101,102,103,104,105,106,107,108,109,110,111,113,114,116,118,],[-17,73,-56,-57,89,-55,-18,-50,89,-49,89,89,89,-41,-54,-46,-43,89,-45,-47,-44,-42,89,89,-52,89,-48,-53,-51,]),'error':([0,6,7,8,9,12,13,14,18,20,23,25,26,27,29,33,34,35,37,40,41,45,50,51,56,58,71,72,78,90,94,99,115,119,120,122,123,124,],[4,-11,15,4,-10,-16,-13,-61,28,-4,-62,-7,-60,-5,-6,-34,48,-60,-20,67,-63,-12,-33,-19,-28,67,-35,-65,-24,-27,-64,-32,67,67,-30,-29,67,-31,]),'OR':([54,55,63,64,77,79,92,95,97,98,100,101,102,103,104,105,106,107,108,109,110,111,113,114,116,118,],[-56,-57,88,-55,-50,88,-49,88,88,88,-41,-54,-46,-43,88,-45,-47,-44,-42,88,88,-52,88,-48,-53,-51,]),'LP':([16,26,33,35,40,41,50,56,57,58,59,62,64,65,66,68,71,72,73,75,78,80,82,83,84,85,86,87,88,89,90,91,93,94,99,115,117,119,120,122,123,124,],[24,-60,-34,-60,68,-63,-33,-28,75,68,68,68,91,68,93,68,-35,-65,68,68,-24,68,68,68,68,68,68,68,68,68,-27,68,68,-64,-32,68,68,68,-30,-29,68,-31,]),'$end':([0,1,2,5,8,14,20,21,25,27,29,41,78,],[-60,0,-3,-1,-60,-61,-4,-2,-7,-5,-6,-63,-24,]),'SEMI':([4,6,7,9,12,13,16,17,18,19,23,37,43,44,45,46,47,48,49,51,54,55,63,64,67,69,77,79,92,96,97,100,101,102,103,105,106,107,108,109,111,114,116,118,],[14,-11,20,-10,-16,-13,-17,25,29,-8,-62,-20,-9,-17,-12,-36,71,72,-38,-19,-56,-57,90,-55,94,-18,-50,99,-49,-37,-39,-41,-54,-46,-43,-45,-47,-44,-42,-40,-52,-48,-53,-51,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Program':([0,],[1,]),'DefList':([22,26,35,],[32,40,50,]),'DecList':([34,70,],[47,96,]),'Stmt':([40,58,115,119,123,],[58,58,120,122,124,]),'Specifier':([0,8,22,24,26,35,53,],[7,7,34,38,34,34,38,]),'ExtDef':([0,8,],[8,8,]),'ExtDecList':([7,31,],[17,43,]),'StmtList':([40,58,],[60,76,]),'Args':([91,117,],[112,121,]),'Tag':([3,],[13,]),'CompSt':([18,40,58,115,119,123,],[27,56,56,56,56,56,]),'ExtDefList':([0,8,],[5,21,]),'empty':([0,3,8,22,26,35,40,58,],[2,10,2,33,33,33,61,61,]),'OptTag':([3,],[11,]),'Dec':([34,70,],[46,46,]),'Exp':([40,58,59,62,65,68,73,75,80,82,83,84,85,86,87,88,89,91,93,115,117,119,123,],[63,63,77,79,92,95,97,98,100,102,103,104,105,106,107,108,109,110,113,63,110,63,63,]),'StructSpecifier':([0,8,22,24,26,35,53,],[6,6,6,6,6,6,6,]),'VarList':([24,53,],[36,74,]),'Def':([22,26,35,],[35,35,35,]),'ParamDec':([24,53,],[39,39,]),'FunDec':([7,],[18,]),'VarDec':([7,31,34,38,70,],[19,19,49,52,49,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Program","S'",1,None,None,None),
  ('Program -> ExtDefList','Program',1,'p_program','lab2.py',265),
  ('ExtDefList -> ExtDef ExtDefList','ExtDefList',2,'p_extdeflist','lab2.py',271),
  ('ExtDefList -> empty','ExtDefList',1,'p_extdeflist','lab2.py',272),
  ('ExtDef -> Specifier SEMI','ExtDef',2,'p_extdef_1','lab2.py',280),
  ('ExtDef -> Specifier FunDec CompSt','ExtDef',3,'p_extdef_2','lab2.py',298),
  ('ExtDef -> Specifier FunDec SEMI','ExtDef',3,'p_extdef_funcDec','lab2.py',319),
  ('ExtDef -> Specifier ExtDecList SEMI','ExtDef',3,'p_extdef_3','lab2.py',330),
  ('ExtDecList -> VarDec','ExtDecList',1,'p_extdeclist_1','lab2.py',371),
  ('ExtDecList -> VarDec COMMA ExtDecList','ExtDecList',3,'p_extdeclist_2','lab2.py',375),
  ('Specifier -> TYPE','Specifier',1,'p_specifier_TYPE','lab2.py',381),
  ('Specifier -> StructSpecifier','Specifier',1,'p_specifier_structspecifier','lab2.py',386),
  ('StructSpecifier -> STRUCT OptTag LC DefList RC','StructSpecifier',5,'p_structspecifier_1','lab2.py',392),
  ('StructSpecifier -> STRUCT Tag','StructSpecifier',2,'p_structspecifier_2','lab2.py',396),
  ('OptTag -> ID','OptTag',1,'p_opttag_ID','lab2.py',402),
  ('OptTag -> empty','OptTag',1,'p_opttag_empty','lab2.py',406),
  ('Tag -> ID','Tag',1,'p_tag','lab2.py',411),
  ('VarDec -> ID','VarDec',1,'p_vardec_ID','lab2.py',417),
  ('VarDec -> VarDec LB INT RB','VarDec',4,'p_vardec_vardeclbintrb','lab2.py',422),
  ('FunDec -> ID LP VarList RP','FunDec',4,'p_fundec_1','lab2.py',428),
  ('FunDec -> ID LP RP','FunDec',3,'p_fundec_2','lab2.py',432),
  ('VarList -> ParamDec COMMA VarList','VarList',3,'p_varlist_1','lab2.py',438),
  ('VarList -> ParamDec','VarList',1,'p_varlist_2','lab2.py',442),
  ('ParamDec -> Specifier VarDec','ParamDec',2,'p_paramdec','lab2.py',448),
  ('CompSt -> LC DefList StmtList RC','CompSt',4,'p_compst','lab2.py',454),
  ('StmtList -> Stmt StmtList','StmtList',2,'p_stmtlist','lab2.py',460),
  ('StmtList -> empty','StmtList',1,'p_stmtlist','lab2.py',461),
  ('Stmt -> Exp SEMI','Stmt',2,'p_stmt_1','lab2.py',470),
  ('Stmt -> CompSt','Stmt',1,'p_stmt_2','lab2.py',474),
  ('Stmt -> IF LP Exp RP Stmt','Stmt',5,'p_stmt_3','lab2.py',478),
  ('Stmt -> WHILE LP Exp RP Stmt','Stmt',5,'p_stmt_4','lab2.py',482),
  ('Stmt -> IF LP Exp RP Stmt ELSE Stmt','Stmt',7,'p_stmt_5','lab2.py',486),
  ('Stmt -> RETURN Exp SEMI','Stmt',3,'p_stmt_6','lab2.py',490),
  ('DefList -> Def DefList','DefList',2,'p_deflist','lab2.py',496),
  ('DefList -> empty','DefList',1,'p_deflist','lab2.py',497),
  ('Def -> Specifier DecList SEMI','Def',3,'p_def','lab2.py',506),
  ('DecList -> Dec','DecList',1,'p_declist_1','lab2.py',516),
  ('DecList -> Dec COMMA DecList','DecList',3,'p_declist_2','lab2.py',520),
  ('Dec -> VarDec','Dec',1,'p_dec_1','lab2.py',525),
  ('Dec -> VarDec ASSIGNOP Exp','Dec',3,'p_dec_2','lab2.py',529),
  ('Exp -> Exp ASSIGNOP Exp','Exp',3,'p_exp_ASSIGNOP','lab2.py',535),
  ('Exp -> Exp AND Exp','Exp',3,'p_exp_AND','lab2.py',539),
  ('Exp -> Exp OR Exp','Exp',3,'p_exp_OR','lab2.py',543),
  ('Exp -> Exp RELOP Exp','Exp',3,'p_exp_RELOP','lab2.py',547),
  ('Exp -> Exp PLUS Exp','Exp',3,'p_exp_PLUS','lab2.py',551),
  ('Exp -> Exp MINUS Exp','Exp',3,'p_exp_MINUS','lab2.py',555),
  ('Exp -> Exp STAR Exp','Exp',3,'p_exp_STAR','lab2.py',559),
  ('Exp -> Exp DIV Exp','Exp',3,'p_exp_DIV','lab2.py',563),
  ('Exp -> LP Exp RP','Exp',3,'p_exp_LPRP','lab2.py',567),
  ('Exp -> MINUS Exp','Exp',2,'p_exp_MINUS_2','lab2.py',571),
  ('Exp -> NOT Exp','Exp',2,'p_exp_NOT','lab2.py',575),
  ('Exp -> ID LP Args RP','Exp',4,'p_exp_IDLPRP','lab2.py',579),
  ('Exp -> ID LP RP','Exp',3,'p_exp_IDLPRP2','lab2.py',583),
  ('Exp -> Exp LB Exp RB','Exp',4,'p_exp_LBRB','lab2.py',587),
  ('Exp -> Exp DOT ID','Exp',3,'p_exp_DOTID','lab2.py',591),
  ('Exp -> ID','Exp',1,'p_exp_ID','lab2.py',595),
  ('Exp -> INT','Exp',1,'p_exp_INT','lab2.py',599),
  ('Exp -> FLOAT','Exp',1,'p_exp_FLOAT','lab2.py',603),
  ('Args -> Exp COMMA Args','Args',3,'p_args_1','lab2.py',609),
  ('Args -> Exp','Args',1,'p_args_2','lab2.py',613),
  ('empty -> <empty>','empty',0,'p_empty','lab2.py',619),
  ('ExtDef -> error SEMI','ExtDef',2,'p_extdef_error','lab2.py',641),
  ('FunDec -> error RP','FunDec',2,'p_fundec_error','lab2.py',645),
  ('CompSt -> error RC','CompSt',2,'p_compst_error','lab2.py',649),
  ('Stmt -> error SEMI','Stmt',2,'p_stmt_error','lab2.py',653),
  ('Def -> Specifier error SEMI','Def',3,'p_def_error','lab2.py',657),
]
