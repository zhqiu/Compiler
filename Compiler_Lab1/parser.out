Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> Program
Rule 1     Program -> ExtDefList
Rule 2     ExtDefList -> ExtDef ExtDefList
Rule 3     ExtDefList -> empty
Rule 4     ExtDef -> Specifier SEMI
Rule 5     ExtDef -> Specifier FunDec CompSt
Rule 6     ExtDef -> Specifier ExtDecList SEMI
Rule 7     ExtDecList -> VarDec
Rule 8     ExtDecList -> VarDec COMMA ExtDecList
Rule 9     Specifier -> TYPE
Rule 10    Specifier -> StructSpecifier
Rule 11    StructSpecifier -> STRUCT OptTag LC DefList RC
Rule 12    StructSpecifier -> STRUCT Tag
Rule 13    OptTag -> ID
Rule 14    OptTag -> empty
Rule 15    Tag -> ID
Rule 16    VarDec -> ID
Rule 17    VarDec -> VarDec LB INT RB
Rule 18    FunDec -> ID LP VarList RP
Rule 19    FunDec -> ID LP RP
Rule 20    VarList -> ParamDec COMMA VarList
Rule 21    VarList -> ParamDec
Rule 22    ParamDec -> Specifier VarDec
Rule 23    CompSt -> LC DefList StmtList RC
Rule 24    StmtList -> Stmt StmtList
Rule 25    StmtList -> empty
Rule 26    Stmt -> Exp SEMI
Rule 27    Stmt -> CompSt
Rule 28    Stmt -> IF LP Exp RP Stmt
Rule 29    Stmt -> WHILE LP Exp RP Stmt
Rule 30    Stmt -> IF LP Exp RP Stmt ELSE Stmt
Rule 31    Stmt -> RETURN Exp SEMI
Rule 32    DefList -> Def DefList
Rule 33    DefList -> empty
Rule 34    Def -> Specifier DecList SEMI
Rule 35    DecList -> Dec
Rule 36    DecList -> Dec COMMA DecList
Rule 37    Dec -> VarDec
Rule 38    Dec -> VarDec ASSIGNOP Exp
Rule 39    Exp -> Exp ASSIGNOP Exp
Rule 40    Exp -> Exp AND Exp
Rule 41    Exp -> Exp OR Exp
Rule 42    Exp -> Exp RELOP Exp
Rule 43    Exp -> Exp PLUS Exp
Rule 44    Exp -> Exp MINUS Exp
Rule 45    Exp -> Exp STAR Exp
Rule 46    Exp -> Exp DIV Exp
Rule 47    Exp -> LP Exp RP
Rule 48    Exp -> MINUS Exp
Rule 49    Exp -> NOT Exp
Rule 50    Exp -> ID LP Args RP
Rule 51    Exp -> ID LP RP
Rule 52    Exp -> Exp LB Exp RB
Rule 53    Exp -> Exp DOT ID
Rule 54    Exp -> ID
Rule 55    Exp -> INT
Rule 56    Exp -> FLOAT
Rule 57    Args -> Exp COMMA Args
Rule 58    Args -> Exp
Rule 59    empty -> <empty>
Rule 60    ExtDef -> error SEMI
Rule 61    FunDec -> error RP
Rule 62    CompSt -> error RC
Rule 63    Stmt -> error SEMI
Rule 64    Def -> Specifier error SEMI

Terminals, with rules where they appear

AND                  : 40
ASSIGNOP             : 38 39
COMMA                : 8 20 36 57
DIV                  : 46
DOT                  : 53
ELSE                 : 30
FLOAT                : 56
ID                   : 13 15 16 18 19 50 51 53 54
IF                   : 28 30
INT                  : 17 55
LB                   : 17 52
LC                   : 11 23
LP                   : 18 19 28 29 30 47 50 51
MINUS                : 44 48
NOT                  : 49
OR                   : 41
PLUS                 : 43
RB                   : 17 52
RC                   : 11 23 62
RELOP                : 42
RETURN               : 31
RP                   : 18 19 28 29 30 47 50 51 61
SEMI                 : 4 6 26 31 34 60 63 64
STAR                 : 45
STRUCT               : 11 12
TYPE                 : 9
WHILE                : 29
error                : 60 61 62 63 64

Nonterminals, with rules where they appear

Args                 : 50 57
CompSt               : 5 27
Dec                  : 35 36
DecList              : 34 36
Def                  : 32
DefList              : 11 23 32
Exp                  : 26 28 29 30 31 38 39 39 40 40 41 41 42 42 43 43 44 44 45 45 46 46 47 48 49 52 52 53 57 58
ExtDecList           : 6 8
ExtDef               : 2
ExtDefList           : 1 2
FunDec               : 5
OptTag               : 11
ParamDec             : 20 21
Program              : 0
Specifier            : 4 5 6 22 34 64
Stmt                 : 24 28 29 30 30
StmtList             : 23 24
StructSpecifier      : 10
Tag                  : 12
VarDec               : 7 8 17 22 37 38
VarList              : 18 20
empty                : 3 14 25 33

Parsing method: LALR

state 0

    (0) S' -> . Program
    (1) Program -> . ExtDefList
    (2) ExtDefList -> . ExtDef ExtDefList
    (3) ExtDefList -> . empty
    (4) ExtDef -> . Specifier SEMI
    (5) ExtDef -> . Specifier FunDec CompSt
    (6) ExtDef -> . Specifier ExtDecList SEMI
    (60) ExtDef -> . error SEMI
    (59) empty -> .
    (9) Specifier -> . TYPE
    (10) Specifier -> . StructSpecifier
    (11) StructSpecifier -> . STRUCT OptTag LC DefList RC
    (12) StructSpecifier -> . STRUCT Tag

    error           shift and go to state 9
    $end            reduce using rule 59 (empty -> .)
    TYPE            shift and go to state 7
    STRUCT          shift and go to state 3

    empty                          shift and go to state 2
    Program                        shift and go to state 4
    ExtDefList                     shift and go to state 6
    StructSpecifier                shift and go to state 5
    Specifier                      shift and go to state 1
    ExtDef                         shift and go to state 8

state 1

    (4) ExtDef -> Specifier . SEMI
    (5) ExtDef -> Specifier . FunDec CompSt
    (6) ExtDef -> Specifier . ExtDecList SEMI
    (18) FunDec -> . ID LP VarList RP
    (19) FunDec -> . ID LP RP
    (61) FunDec -> . error RP
    (7) ExtDecList -> . VarDec
    (8) ExtDecList -> . VarDec COMMA ExtDecList
    (16) VarDec -> . ID
    (17) VarDec -> . VarDec LB INT RB

    SEMI            shift and go to state 10
    ID              shift and go to state 14
    error           shift and go to state 13

    FunDec                         shift and go to state 15
    ExtDecList                     shift and go to state 11
    VarDec                         shift and go to state 12

state 2

    (3) ExtDefList -> empty .

    $end            reduce using rule 3 (ExtDefList -> empty .)


state 3

    (11) StructSpecifier -> STRUCT . OptTag LC DefList RC
    (12) StructSpecifier -> STRUCT . Tag
    (13) OptTag -> . ID
    (14) OptTag -> . empty
    (15) Tag -> . ID
    (59) empty -> .

    ID              shift and go to state 18
    LC              reduce using rule 59 (empty -> .)

    OptTag                         shift and go to state 17
    empty                          shift and go to state 16
    Tag                            shift and go to state 19

state 4

    (0) S' -> Program .



state 5

    (10) Specifier -> StructSpecifier .

    ID              reduce using rule 10 (Specifier -> StructSpecifier .)
    error           reduce using rule 10 (Specifier -> StructSpecifier .)
    SEMI            reduce using rule 10 (Specifier -> StructSpecifier .)


state 6

    (1) Program -> ExtDefList .

    $end            reduce using rule 1 (Program -> ExtDefList .)


state 7

    (9) Specifier -> TYPE .

    ID              reduce using rule 9 (Specifier -> TYPE .)
    error           reduce using rule 9 (Specifier -> TYPE .)
    SEMI            reduce using rule 9 (Specifier -> TYPE .)


state 8

    (2) ExtDefList -> ExtDef . ExtDefList
    (2) ExtDefList -> . ExtDef ExtDefList
    (3) ExtDefList -> . empty
    (4) ExtDef -> . Specifier SEMI
    (5) ExtDef -> . Specifier FunDec CompSt
    (6) ExtDef -> . Specifier ExtDecList SEMI
    (60) ExtDef -> . error SEMI
    (59) empty -> .
    (9) Specifier -> . TYPE
    (10) Specifier -> . StructSpecifier
    (11) StructSpecifier -> . STRUCT OptTag LC DefList RC
    (12) StructSpecifier -> . STRUCT Tag

    error           shift and go to state 9
    $end            reduce using rule 59 (empty -> .)
    TYPE            shift and go to state 7
    STRUCT          shift and go to state 3

    ExtDefList                     shift and go to state 20
    empty                          shift and go to state 2
    ExtDef                         shift and go to state 8
    Specifier                      shift and go to state 1
    StructSpecifier                shift and go to state 5

state 9

    (60) ExtDef -> error . SEMI

    SEMI            shift and go to state 21


state 10

    (4) ExtDef -> Specifier SEMI .

    error           reduce using rule 4 (ExtDef -> Specifier SEMI .)
    TYPE            reduce using rule 4 (ExtDef -> Specifier SEMI .)
    STRUCT          reduce using rule 4 (ExtDef -> Specifier SEMI .)
    $end            reduce using rule 4 (ExtDef -> Specifier SEMI .)


state 11

    (6) ExtDef -> Specifier ExtDecList . SEMI

    SEMI            shift and go to state 22


state 12

    (7) ExtDecList -> VarDec .
    (8) ExtDecList -> VarDec . COMMA ExtDecList
    (17) VarDec -> VarDec . LB INT RB

    SEMI            reduce using rule 7 (ExtDecList -> VarDec .)
    COMMA           shift and go to state 24
    LB              shift and go to state 23


state 13

    (61) FunDec -> error . RP

    RP              shift and go to state 25


state 14

    (18) FunDec -> ID . LP VarList RP
    (19) FunDec -> ID . LP RP
    (16) VarDec -> ID .

    LP              shift and go to state 26
    COMMA           reduce using rule 16 (VarDec -> ID .)
    LB              reduce using rule 16 (VarDec -> ID .)
    SEMI            reduce using rule 16 (VarDec -> ID .)


state 15

    (5) ExtDef -> Specifier FunDec . CompSt
    (23) CompSt -> . LC DefList StmtList RC
    (62) CompSt -> . error RC

    LC              shift and go to state 27
    error           shift and go to state 29

    CompSt                         shift and go to state 28

state 16

    (14) OptTag -> empty .

    LC              reduce using rule 14 (OptTag -> empty .)


state 17

    (11) StructSpecifier -> STRUCT OptTag . LC DefList RC

    LC              shift and go to state 30


state 18

    (13) OptTag -> ID .
    (15) Tag -> ID .

    LC              reduce using rule 13 (OptTag -> ID .)
    SEMI            reduce using rule 15 (Tag -> ID .)
    ID              reduce using rule 15 (Tag -> ID .)
    error           reduce using rule 15 (Tag -> ID .)


state 19

    (12) StructSpecifier -> STRUCT Tag .

    SEMI            reduce using rule 12 (StructSpecifier -> STRUCT Tag .)
    ID              reduce using rule 12 (StructSpecifier -> STRUCT Tag .)
    error           reduce using rule 12 (StructSpecifier -> STRUCT Tag .)


state 20

    (2) ExtDefList -> ExtDef ExtDefList .

    $end            reduce using rule 2 (ExtDefList -> ExtDef ExtDefList .)


state 21

    (60) ExtDef -> error SEMI .

    error           reduce using rule 60 (ExtDef -> error SEMI .)
    TYPE            reduce using rule 60 (ExtDef -> error SEMI .)
    STRUCT          reduce using rule 60 (ExtDef -> error SEMI .)
    $end            reduce using rule 60 (ExtDef -> error SEMI .)


state 22

    (6) ExtDef -> Specifier ExtDecList SEMI .

    error           reduce using rule 6 (ExtDef -> Specifier ExtDecList SEMI .)
    TYPE            reduce using rule 6 (ExtDef -> Specifier ExtDecList SEMI .)
    STRUCT          reduce using rule 6 (ExtDef -> Specifier ExtDecList SEMI .)
    $end            reduce using rule 6 (ExtDef -> Specifier ExtDecList SEMI .)


state 23

    (17) VarDec -> VarDec LB . INT RB

    INT             shift and go to state 31


state 24

    (8) ExtDecList -> VarDec COMMA . ExtDecList
    (7) ExtDecList -> . VarDec
    (8) ExtDecList -> . VarDec COMMA ExtDecList
    (16) VarDec -> . ID
    (17) VarDec -> . VarDec LB INT RB

    ID              shift and go to state 33

    VarDec                         shift and go to state 12
    ExtDecList                     shift and go to state 32

state 25

    (61) FunDec -> error RP .

    LC              reduce using rule 61 (FunDec -> error RP .)
    error           reduce using rule 61 (FunDec -> error RP .)


state 26

    (18) FunDec -> ID LP . VarList RP
    (19) FunDec -> ID LP . RP
    (20) VarList -> . ParamDec COMMA VarList
    (21) VarList -> . ParamDec
    (22) ParamDec -> . Specifier VarDec
    (9) Specifier -> . TYPE
    (10) Specifier -> . StructSpecifier
    (11) StructSpecifier -> . STRUCT OptTag LC DefList RC
    (12) StructSpecifier -> . STRUCT Tag

    RP              shift and go to state 35
    TYPE            shift and go to state 7
    STRUCT          shift and go to state 3

    ParamDec                       shift and go to state 36
    StructSpecifier                shift and go to state 5
    Specifier                      shift and go to state 34
    VarList                        shift and go to state 37

state 27

    (23) CompSt -> LC . DefList StmtList RC
    (32) DefList -> . Def DefList
    (33) DefList -> . empty
    (34) Def -> . Specifier DecList SEMI
    (64) Def -> . Specifier error SEMI
    (59) empty -> .
    (9) Specifier -> . TYPE
    (10) Specifier -> . StructSpecifier
    (11) StructSpecifier -> . STRUCT OptTag LC DefList RC
    (12) StructSpecifier -> . STRUCT Tag

    IF              reduce using rule 59 (empty -> .)
    WHILE           reduce using rule 59 (empty -> .)
    RETURN          reduce using rule 59 (empty -> .)
    error           reduce using rule 59 (empty -> .)
    LP              reduce using rule 59 (empty -> .)
    MINUS           reduce using rule 59 (empty -> .)
    NOT             reduce using rule 59 (empty -> .)
    ID              reduce using rule 59 (empty -> .)
    INT             reduce using rule 59 (empty -> .)
    FLOAT           reduce using rule 59 (empty -> .)
    LC              reduce using rule 59 (empty -> .)
    RC              reduce using rule 59 (empty -> .)
    TYPE            shift and go to state 7
    STRUCT          shift and go to state 3

    empty                          shift and go to state 39
    StructSpecifier                shift and go to state 5
    Def                            shift and go to state 40
    Specifier                      shift and go to state 38
    DefList                        shift and go to state 41

state 28

    (5) ExtDef -> Specifier FunDec CompSt .

    error           reduce using rule 5 (ExtDef -> Specifier FunDec CompSt .)
    TYPE            reduce using rule 5 (ExtDef -> Specifier FunDec CompSt .)
    STRUCT          reduce using rule 5 (ExtDef -> Specifier FunDec CompSt .)
    $end            reduce using rule 5 (ExtDef -> Specifier FunDec CompSt .)


state 29

    (62) CompSt -> error . RC

    RC              shift and go to state 42


state 30

    (11) StructSpecifier -> STRUCT OptTag LC . DefList RC
    (32) DefList -> . Def DefList
    (33) DefList -> . empty
    (34) Def -> . Specifier DecList SEMI
    (64) Def -> . Specifier error SEMI
    (59) empty -> .
    (9) Specifier -> . TYPE
    (10) Specifier -> . StructSpecifier
    (11) StructSpecifier -> . STRUCT OptTag LC DefList RC
    (12) StructSpecifier -> . STRUCT Tag

    RC              reduce using rule 59 (empty -> .)
    TYPE            shift and go to state 7
    STRUCT          shift and go to state 3

    Specifier                      shift and go to state 38
    empty                          shift and go to state 39
    StructSpecifier                shift and go to state 5
    Def                            shift and go to state 40
    DefList                        shift and go to state 43

state 31

    (17) VarDec -> VarDec LB INT . RB

    RB              shift and go to state 44


state 32

    (8) ExtDecList -> VarDec COMMA ExtDecList .

    SEMI            reduce using rule 8 (ExtDecList -> VarDec COMMA ExtDecList .)


state 33

    (16) VarDec -> ID .

    ASSIGNOP        reduce using rule 16 (VarDec -> ID .)
    LB              reduce using rule 16 (VarDec -> ID .)
    COMMA           reduce using rule 16 (VarDec -> ID .)
    SEMI            reduce using rule 16 (VarDec -> ID .)
    RP              reduce using rule 16 (VarDec -> ID .)


state 34

    (22) ParamDec -> Specifier . VarDec
    (16) VarDec -> . ID
    (17) VarDec -> . VarDec LB INT RB

    ID              shift and go to state 33

    VarDec                         shift and go to state 45

state 35

    (19) FunDec -> ID LP RP .

    LC              reduce using rule 19 (FunDec -> ID LP RP .)
    error           reduce using rule 19 (FunDec -> ID LP RP .)


state 36

    (20) VarList -> ParamDec . COMMA VarList
    (21) VarList -> ParamDec .

    COMMA           shift and go to state 46
    RP              reduce using rule 21 (VarList -> ParamDec .)


state 37

    (18) FunDec -> ID LP VarList . RP

    RP              shift and go to state 47


state 38

    (34) Def -> Specifier . DecList SEMI
    (64) Def -> Specifier . error SEMI
    (35) DecList -> . Dec
    (36) DecList -> . Dec COMMA DecList
    (37) Dec -> . VarDec
    (38) Dec -> . VarDec ASSIGNOP Exp
    (16) VarDec -> . ID
    (17) VarDec -> . VarDec LB INT RB

    error           shift and go to state 50
    ID              shift and go to state 33

    DecList                        shift and go to state 48
    VarDec                         shift and go to state 49
    Dec                            shift and go to state 51

state 39

    (33) DefList -> empty .

    IF              reduce using rule 33 (DefList -> empty .)
    WHILE           reduce using rule 33 (DefList -> empty .)
    RETURN          reduce using rule 33 (DefList -> empty .)
    error           reduce using rule 33 (DefList -> empty .)
    LP              reduce using rule 33 (DefList -> empty .)
    MINUS           reduce using rule 33 (DefList -> empty .)
    NOT             reduce using rule 33 (DefList -> empty .)
    ID              reduce using rule 33 (DefList -> empty .)
    INT             reduce using rule 33 (DefList -> empty .)
    FLOAT           reduce using rule 33 (DefList -> empty .)
    LC              reduce using rule 33 (DefList -> empty .)
    RC              reduce using rule 33 (DefList -> empty .)


state 40

    (32) DefList -> Def . DefList
    (32) DefList -> . Def DefList
    (33) DefList -> . empty
    (34) Def -> . Specifier DecList SEMI
    (64) Def -> . Specifier error SEMI
    (59) empty -> .
    (9) Specifier -> . TYPE
    (10) Specifier -> . StructSpecifier
    (11) StructSpecifier -> . STRUCT OptTag LC DefList RC
    (12) StructSpecifier -> . STRUCT Tag

    IF              reduce using rule 59 (empty -> .)
    WHILE           reduce using rule 59 (empty -> .)
    RETURN          reduce using rule 59 (empty -> .)
    error           reduce using rule 59 (empty -> .)
    LP              reduce using rule 59 (empty -> .)
    MINUS           reduce using rule 59 (empty -> .)
    NOT             reduce using rule 59 (empty -> .)
    ID              reduce using rule 59 (empty -> .)
    INT             reduce using rule 59 (empty -> .)
    FLOAT           reduce using rule 59 (empty -> .)
    LC              reduce using rule 59 (empty -> .)
    RC              reduce using rule 59 (empty -> .)
    TYPE            shift and go to state 7
    STRUCT          shift and go to state 3

    empty                          shift and go to state 39
    StructSpecifier                shift and go to state 5
    Def                            shift and go to state 40
    Specifier                      shift and go to state 38
    DefList                        shift and go to state 52

state 41

    (23) CompSt -> LC DefList . StmtList RC
    (24) StmtList -> . Stmt StmtList
    (25) StmtList -> . empty
    (26) Stmt -> . Exp SEMI
    (27) Stmt -> . CompSt
    (28) Stmt -> . IF LP Exp RP Stmt
    (29) Stmt -> . WHILE LP Exp RP Stmt
    (30) Stmt -> . IF LP Exp RP Stmt ELSE Stmt
    (31) Stmt -> . RETURN Exp SEMI
    (63) Stmt -> . error SEMI
    (59) empty -> .
    (39) Exp -> . Exp ASSIGNOP Exp
    (40) Exp -> . Exp AND Exp
    (41) Exp -> . Exp OR Exp
    (42) Exp -> . Exp RELOP Exp
    (43) Exp -> . Exp PLUS Exp
    (44) Exp -> . Exp MINUS Exp
    (45) Exp -> . Exp STAR Exp
    (46) Exp -> . Exp DIV Exp
    (47) Exp -> . LP Exp RP
    (48) Exp -> . MINUS Exp
    (49) Exp -> . NOT Exp
    (50) Exp -> . ID LP Args RP
    (51) Exp -> . ID LP RP
    (52) Exp -> . Exp LB Exp RB
    (53) Exp -> . Exp DOT ID
    (54) Exp -> . ID
    (55) Exp -> . INT
    (56) Exp -> . FLOAT
    (23) CompSt -> . LC DefList StmtList RC
    (62) CompSt -> . error RC

    IF              shift and go to state 53
    WHILE           shift and go to state 59
    RETURN          shift and go to state 63
    error           shift and go to state 58
    RC              reduce using rule 59 (empty -> .)
    LP              shift and go to state 66
    MINUS           shift and go to state 65
    NOT             shift and go to state 62
    ID              shift and go to state 60
    INT             shift and go to state 55
    FLOAT           shift and go to state 61
    LC              shift and go to state 27

    Exp                            shift and go to state 64
    StmtList                       shift and go to state 54
    empty                          shift and go to state 56
    CompSt                         shift and go to state 57
    Stmt                           shift and go to state 67

state 42

    (62) CompSt -> error RC .

    ELSE            reduce using rule 62 (CompSt -> error RC .)
    IF              reduce using rule 62 (CompSt -> error RC .)
    WHILE           reduce using rule 62 (CompSt -> error RC .)
    RETURN          reduce using rule 62 (CompSt -> error RC .)
    error           reduce using rule 62 (CompSt -> error RC .)
    LP              reduce using rule 62 (CompSt -> error RC .)
    MINUS           reduce using rule 62 (CompSt -> error RC .)
    NOT             reduce using rule 62 (CompSt -> error RC .)
    ID              reduce using rule 62 (CompSt -> error RC .)
    INT             reduce using rule 62 (CompSt -> error RC .)
    FLOAT           reduce using rule 62 (CompSt -> error RC .)
    LC              reduce using rule 62 (CompSt -> error RC .)
    RC              reduce using rule 62 (CompSt -> error RC .)
    TYPE            reduce using rule 62 (CompSt -> error RC .)
    STRUCT          reduce using rule 62 (CompSt -> error RC .)
    $end            reduce using rule 62 (CompSt -> error RC .)


state 43

    (11) StructSpecifier -> STRUCT OptTag LC DefList . RC

    RC              shift and go to state 68


state 44

    (17) VarDec -> VarDec LB INT RB .

    ASSIGNOP        reduce using rule 17 (VarDec -> VarDec LB INT RB .)
    LB              reduce using rule 17 (VarDec -> VarDec LB INT RB .)
    COMMA           reduce using rule 17 (VarDec -> VarDec LB INT RB .)
    SEMI            reduce using rule 17 (VarDec -> VarDec LB INT RB .)
    RP              reduce using rule 17 (VarDec -> VarDec LB INT RB .)


state 45

    (22) ParamDec -> Specifier VarDec .
    (17) VarDec -> VarDec . LB INT RB

    COMMA           reduce using rule 22 (ParamDec -> Specifier VarDec .)
    RP              reduce using rule 22 (ParamDec -> Specifier VarDec .)
    LB              shift and go to state 23


state 46

    (20) VarList -> ParamDec COMMA . VarList
    (20) VarList -> . ParamDec COMMA VarList
    (21) VarList -> . ParamDec
    (22) ParamDec -> . Specifier VarDec
    (9) Specifier -> . TYPE
    (10) Specifier -> . StructSpecifier
    (11) StructSpecifier -> . STRUCT OptTag LC DefList RC
    (12) StructSpecifier -> . STRUCT Tag

    TYPE            shift and go to state 7
    STRUCT          shift and go to state 3

    ParamDec                       shift and go to state 36
    StructSpecifier                shift and go to state 5
    Specifier                      shift and go to state 34
    VarList                        shift and go to state 69

state 47

    (18) FunDec -> ID LP VarList RP .

    LC              reduce using rule 18 (FunDec -> ID LP VarList RP .)
    error           reduce using rule 18 (FunDec -> ID LP VarList RP .)


state 48

    (34) Def -> Specifier DecList . SEMI

    SEMI            shift and go to state 70


state 49

    (37) Dec -> VarDec .
    (38) Dec -> VarDec . ASSIGNOP Exp
    (17) VarDec -> VarDec . LB INT RB

    COMMA           reduce using rule 37 (Dec -> VarDec .)
    SEMI            reduce using rule 37 (Dec -> VarDec .)
    ASSIGNOP        shift and go to state 71
    LB              shift and go to state 23


state 50

    (64) Def -> Specifier error . SEMI

    SEMI            shift and go to state 72


state 51

    (35) DecList -> Dec .
    (36) DecList -> Dec . COMMA DecList

    SEMI            reduce using rule 35 (DecList -> Dec .)
    COMMA           shift and go to state 73


state 52

    (32) DefList -> Def DefList .

    IF              reduce using rule 32 (DefList -> Def DefList .)
    WHILE           reduce using rule 32 (DefList -> Def DefList .)
    RETURN          reduce using rule 32 (DefList -> Def DefList .)
    error           reduce using rule 32 (DefList -> Def DefList .)
    LP              reduce using rule 32 (DefList -> Def DefList .)
    MINUS           reduce using rule 32 (DefList -> Def DefList .)
    NOT             reduce using rule 32 (DefList -> Def DefList .)
    ID              reduce using rule 32 (DefList -> Def DefList .)
    INT             reduce using rule 32 (DefList -> Def DefList .)
    FLOAT           reduce using rule 32 (DefList -> Def DefList .)
    LC              reduce using rule 32 (DefList -> Def DefList .)
    RC              reduce using rule 32 (DefList -> Def DefList .)


state 53

    (28) Stmt -> IF . LP Exp RP Stmt
    (30) Stmt -> IF . LP Exp RP Stmt ELSE Stmt

    LP              shift and go to state 74


state 54

    (23) CompSt -> LC DefList StmtList . RC

    RC              shift and go to state 75


state 55

    (55) Exp -> INT .

    COMMA           reduce using rule 55 (Exp -> INT .)
    ASSIGNOP        reduce using rule 55 (Exp -> INT .)
    AND             reduce using rule 55 (Exp -> INT .)
    OR              reduce using rule 55 (Exp -> INT .)
    RELOP           reduce using rule 55 (Exp -> INT .)
    PLUS            reduce using rule 55 (Exp -> INT .)
    MINUS           reduce using rule 55 (Exp -> INT .)
    STAR            reduce using rule 55 (Exp -> INT .)
    DIV             reduce using rule 55 (Exp -> INT .)
    LB              reduce using rule 55 (Exp -> INT .)
    DOT             reduce using rule 55 (Exp -> INT .)
    RP              reduce using rule 55 (Exp -> INT .)
    SEMI            reduce using rule 55 (Exp -> INT .)
    RB              reduce using rule 55 (Exp -> INT .)


state 56

    (25) StmtList -> empty .

    RC              reduce using rule 25 (StmtList -> empty .)


state 57

    (27) Stmt -> CompSt .

    IF              reduce using rule 27 (Stmt -> CompSt .)
    WHILE           reduce using rule 27 (Stmt -> CompSt .)
    RETURN          reduce using rule 27 (Stmt -> CompSt .)
    error           reduce using rule 27 (Stmt -> CompSt .)
    LP              reduce using rule 27 (Stmt -> CompSt .)
    MINUS           reduce using rule 27 (Stmt -> CompSt .)
    NOT             reduce using rule 27 (Stmt -> CompSt .)
    ID              reduce using rule 27 (Stmt -> CompSt .)
    INT             reduce using rule 27 (Stmt -> CompSt .)
    FLOAT           reduce using rule 27 (Stmt -> CompSt .)
    LC              reduce using rule 27 (Stmt -> CompSt .)
    RC              reduce using rule 27 (Stmt -> CompSt .)
    ELSE            reduce using rule 27 (Stmt -> CompSt .)


state 58

    (63) Stmt -> error . SEMI
    (62) CompSt -> error . RC

    SEMI            shift and go to state 76
    RC              shift and go to state 42


state 59

    (29) Stmt -> WHILE . LP Exp RP Stmt

    LP              shift and go to state 77


state 60

    (50) Exp -> ID . LP Args RP
    (51) Exp -> ID . LP RP
    (54) Exp -> ID .

    LP              shift and go to state 78
    COMMA           reduce using rule 54 (Exp -> ID .)
    ASSIGNOP        reduce using rule 54 (Exp -> ID .)
    AND             reduce using rule 54 (Exp -> ID .)
    OR              reduce using rule 54 (Exp -> ID .)
    RELOP           reduce using rule 54 (Exp -> ID .)
    PLUS            reduce using rule 54 (Exp -> ID .)
    MINUS           reduce using rule 54 (Exp -> ID .)
    STAR            reduce using rule 54 (Exp -> ID .)
    DIV             reduce using rule 54 (Exp -> ID .)
    LB              reduce using rule 54 (Exp -> ID .)
    DOT             reduce using rule 54 (Exp -> ID .)
    RP              reduce using rule 54 (Exp -> ID .)
    SEMI            reduce using rule 54 (Exp -> ID .)
    RB              reduce using rule 54 (Exp -> ID .)


state 61

    (56) Exp -> FLOAT .

    COMMA           reduce using rule 56 (Exp -> FLOAT .)
    ASSIGNOP        reduce using rule 56 (Exp -> FLOAT .)
    AND             reduce using rule 56 (Exp -> FLOAT .)
    OR              reduce using rule 56 (Exp -> FLOAT .)
    RELOP           reduce using rule 56 (Exp -> FLOAT .)
    PLUS            reduce using rule 56 (Exp -> FLOAT .)
    MINUS           reduce using rule 56 (Exp -> FLOAT .)
    STAR            reduce using rule 56 (Exp -> FLOAT .)
    DIV             reduce using rule 56 (Exp -> FLOAT .)
    LB              reduce using rule 56 (Exp -> FLOAT .)
    DOT             reduce using rule 56 (Exp -> FLOAT .)
    RP              reduce using rule 56 (Exp -> FLOAT .)
    SEMI            reduce using rule 56 (Exp -> FLOAT .)
    RB              reduce using rule 56 (Exp -> FLOAT .)


state 62

    (49) Exp -> NOT . Exp
    (39) Exp -> . Exp ASSIGNOP Exp
    (40) Exp -> . Exp AND Exp
    (41) Exp -> . Exp OR Exp
    (42) Exp -> . Exp RELOP Exp
    (43) Exp -> . Exp PLUS Exp
    (44) Exp -> . Exp MINUS Exp
    (45) Exp -> . Exp STAR Exp
    (46) Exp -> . Exp DIV Exp
    (47) Exp -> . LP Exp RP
    (48) Exp -> . MINUS Exp
    (49) Exp -> . NOT Exp
    (50) Exp -> . ID LP Args RP
    (51) Exp -> . ID LP RP
    (52) Exp -> . Exp LB Exp RB
    (53) Exp -> . Exp DOT ID
    (54) Exp -> . ID
    (55) Exp -> . INT
    (56) Exp -> . FLOAT

    LP              shift and go to state 66
    MINUS           shift and go to state 65
    NOT             shift and go to state 62
    ID              shift and go to state 60
    INT             shift and go to state 55
    FLOAT           shift and go to state 61

    Exp                            shift and go to state 79

state 63

    (31) Stmt -> RETURN . Exp SEMI
    (39) Exp -> . Exp ASSIGNOP Exp
    (40) Exp -> . Exp AND Exp
    (41) Exp -> . Exp OR Exp
    (42) Exp -> . Exp RELOP Exp
    (43) Exp -> . Exp PLUS Exp
    (44) Exp -> . Exp MINUS Exp
    (45) Exp -> . Exp STAR Exp
    (46) Exp -> . Exp DIV Exp
    (47) Exp -> . LP Exp RP
    (48) Exp -> . MINUS Exp
    (49) Exp -> . NOT Exp
    (50) Exp -> . ID LP Args RP
    (51) Exp -> . ID LP RP
    (52) Exp -> . Exp LB Exp RB
    (53) Exp -> . Exp DOT ID
    (54) Exp -> . ID
    (55) Exp -> . INT
    (56) Exp -> . FLOAT

    LP              shift and go to state 66
    MINUS           shift and go to state 65
    NOT             shift and go to state 62
    ID              shift and go to state 60
    INT             shift and go to state 55
    FLOAT           shift and go to state 61

    Exp                            shift and go to state 80

state 64

    (26) Stmt -> Exp . SEMI
    (39) Exp -> Exp . ASSIGNOP Exp
    (40) Exp -> Exp . AND Exp
    (41) Exp -> Exp . OR Exp
    (42) Exp -> Exp . RELOP Exp
    (43) Exp -> Exp . PLUS Exp
    (44) Exp -> Exp . MINUS Exp
    (45) Exp -> Exp . STAR Exp
    (46) Exp -> Exp . DIV Exp
    (52) Exp -> Exp . LB Exp RB
    (53) Exp -> Exp . DOT ID

    SEMI            shift and go to state 83
    ASSIGNOP        shift and go to state 87
    AND             shift and go to state 86
    OR              shift and go to state 85
    RELOP           shift and go to state 84
    PLUS            shift and go to state 81
    MINUS           shift and go to state 91
    STAR            shift and go to state 82
    DIV             shift and go to state 89
    LB              shift and go to state 88
    DOT             shift and go to state 90


state 65

    (48) Exp -> MINUS . Exp
    (39) Exp -> . Exp ASSIGNOP Exp
    (40) Exp -> . Exp AND Exp
    (41) Exp -> . Exp OR Exp
    (42) Exp -> . Exp RELOP Exp
    (43) Exp -> . Exp PLUS Exp
    (44) Exp -> . Exp MINUS Exp
    (45) Exp -> . Exp STAR Exp
    (46) Exp -> . Exp DIV Exp
    (47) Exp -> . LP Exp RP
    (48) Exp -> . MINUS Exp
    (49) Exp -> . NOT Exp
    (50) Exp -> . ID LP Args RP
    (51) Exp -> . ID LP RP
    (52) Exp -> . Exp LB Exp RB
    (53) Exp -> . Exp DOT ID
    (54) Exp -> . ID
    (55) Exp -> . INT
    (56) Exp -> . FLOAT

    LP              shift and go to state 66
    MINUS           shift and go to state 65
    NOT             shift and go to state 62
    ID              shift and go to state 60
    INT             shift and go to state 55
    FLOAT           shift and go to state 61

    Exp                            shift and go to state 92

state 66

    (47) Exp -> LP . Exp RP
    (39) Exp -> . Exp ASSIGNOP Exp
    (40) Exp -> . Exp AND Exp
    (41) Exp -> . Exp OR Exp
    (42) Exp -> . Exp RELOP Exp
    (43) Exp -> . Exp PLUS Exp
    (44) Exp -> . Exp MINUS Exp
    (45) Exp -> . Exp STAR Exp
    (46) Exp -> . Exp DIV Exp
    (47) Exp -> . LP Exp RP
    (48) Exp -> . MINUS Exp
    (49) Exp -> . NOT Exp
    (50) Exp -> . ID LP Args RP
    (51) Exp -> . ID LP RP
    (52) Exp -> . Exp LB Exp RB
    (53) Exp -> . Exp DOT ID
    (54) Exp -> . ID
    (55) Exp -> . INT
    (56) Exp -> . FLOAT

    LP              shift and go to state 66
    MINUS           shift and go to state 65
    NOT             shift and go to state 62
    ID              shift and go to state 60
    INT             shift and go to state 55
    FLOAT           shift and go to state 61

    Exp                            shift and go to state 93

state 67

    (24) StmtList -> Stmt . StmtList
    (24) StmtList -> . Stmt StmtList
    (25) StmtList -> . empty
    (26) Stmt -> . Exp SEMI
    (27) Stmt -> . CompSt
    (28) Stmt -> . IF LP Exp RP Stmt
    (29) Stmt -> . WHILE LP Exp RP Stmt
    (30) Stmt -> . IF LP Exp RP Stmt ELSE Stmt
    (31) Stmt -> . RETURN Exp SEMI
    (63) Stmt -> . error SEMI
    (59) empty -> .
    (39) Exp -> . Exp ASSIGNOP Exp
    (40) Exp -> . Exp AND Exp
    (41) Exp -> . Exp OR Exp
    (42) Exp -> . Exp RELOP Exp
    (43) Exp -> . Exp PLUS Exp
    (44) Exp -> . Exp MINUS Exp
    (45) Exp -> . Exp STAR Exp
    (46) Exp -> . Exp DIV Exp
    (47) Exp -> . LP Exp RP
    (48) Exp -> . MINUS Exp
    (49) Exp -> . NOT Exp
    (50) Exp -> . ID LP Args RP
    (51) Exp -> . ID LP RP
    (52) Exp -> . Exp LB Exp RB
    (53) Exp -> . Exp DOT ID
    (54) Exp -> . ID
    (55) Exp -> . INT
    (56) Exp -> . FLOAT
    (23) CompSt -> . LC DefList StmtList RC
    (62) CompSt -> . error RC

    IF              shift and go to state 53
    WHILE           shift and go to state 59
    RETURN          shift and go to state 63
    error           shift and go to state 58
    RC              reduce using rule 59 (empty -> .)
    LP              shift and go to state 66
    MINUS           shift and go to state 65
    NOT             shift and go to state 62
    ID              shift and go to state 60
    INT             shift and go to state 55
    FLOAT           shift and go to state 61
    LC              shift and go to state 27

    Exp                            shift and go to state 64
    StmtList                       shift and go to state 94
    empty                          shift and go to state 56
    CompSt                         shift and go to state 57
    Stmt                           shift and go to state 67

state 68

    (11) StructSpecifier -> STRUCT OptTag LC DefList RC .

    SEMI            reduce using rule 11 (StructSpecifier -> STRUCT OptTag LC DefList RC .)
    ID              reduce using rule 11 (StructSpecifier -> STRUCT OptTag LC DefList RC .)
    error           reduce using rule 11 (StructSpecifier -> STRUCT OptTag LC DefList RC .)


state 69

    (20) VarList -> ParamDec COMMA VarList .

    RP              reduce using rule 20 (VarList -> ParamDec COMMA VarList .)


state 70

    (34) Def -> Specifier DecList SEMI .

    TYPE            reduce using rule 34 (Def -> Specifier DecList SEMI .)
    STRUCT          reduce using rule 34 (Def -> Specifier DecList SEMI .)
    RC              reduce using rule 34 (Def -> Specifier DecList SEMI .)
    IF              reduce using rule 34 (Def -> Specifier DecList SEMI .)
    WHILE           reduce using rule 34 (Def -> Specifier DecList SEMI .)
    RETURN          reduce using rule 34 (Def -> Specifier DecList SEMI .)
    error           reduce using rule 34 (Def -> Specifier DecList SEMI .)
    LP              reduce using rule 34 (Def -> Specifier DecList SEMI .)
    MINUS           reduce using rule 34 (Def -> Specifier DecList SEMI .)
    NOT             reduce using rule 34 (Def -> Specifier DecList SEMI .)
    ID              reduce using rule 34 (Def -> Specifier DecList SEMI .)
    INT             reduce using rule 34 (Def -> Specifier DecList SEMI .)
    FLOAT           reduce using rule 34 (Def -> Specifier DecList SEMI .)
    LC              reduce using rule 34 (Def -> Specifier DecList SEMI .)


state 71

    (38) Dec -> VarDec ASSIGNOP . Exp
    (39) Exp -> . Exp ASSIGNOP Exp
    (40) Exp -> . Exp AND Exp
    (41) Exp -> . Exp OR Exp
    (42) Exp -> . Exp RELOP Exp
    (43) Exp -> . Exp PLUS Exp
    (44) Exp -> . Exp MINUS Exp
    (45) Exp -> . Exp STAR Exp
    (46) Exp -> . Exp DIV Exp
    (47) Exp -> . LP Exp RP
    (48) Exp -> . MINUS Exp
    (49) Exp -> . NOT Exp
    (50) Exp -> . ID LP Args RP
    (51) Exp -> . ID LP RP
    (52) Exp -> . Exp LB Exp RB
    (53) Exp -> . Exp DOT ID
    (54) Exp -> . ID
    (55) Exp -> . INT
    (56) Exp -> . FLOAT

    LP              shift and go to state 66
    MINUS           shift and go to state 65
    NOT             shift and go to state 62
    ID              shift and go to state 60
    INT             shift and go to state 55
    FLOAT           shift and go to state 61

    Exp                            shift and go to state 95

state 72

    (64) Def -> Specifier error SEMI .

    TYPE            reduce using rule 64 (Def -> Specifier error SEMI .)
    STRUCT          reduce using rule 64 (Def -> Specifier error SEMI .)
    RC              reduce using rule 64 (Def -> Specifier error SEMI .)
    IF              reduce using rule 64 (Def -> Specifier error SEMI .)
    WHILE           reduce using rule 64 (Def -> Specifier error SEMI .)
    RETURN          reduce using rule 64 (Def -> Specifier error SEMI .)
    error           reduce using rule 64 (Def -> Specifier error SEMI .)
    LP              reduce using rule 64 (Def -> Specifier error SEMI .)
    MINUS           reduce using rule 64 (Def -> Specifier error SEMI .)
    NOT             reduce using rule 64 (Def -> Specifier error SEMI .)
    ID              reduce using rule 64 (Def -> Specifier error SEMI .)
    INT             reduce using rule 64 (Def -> Specifier error SEMI .)
    FLOAT           reduce using rule 64 (Def -> Specifier error SEMI .)
    LC              reduce using rule 64 (Def -> Specifier error SEMI .)


state 73

    (36) DecList -> Dec COMMA . DecList
    (35) DecList -> . Dec
    (36) DecList -> . Dec COMMA DecList
    (37) Dec -> . VarDec
    (38) Dec -> . VarDec ASSIGNOP Exp
    (16) VarDec -> . ID
    (17) VarDec -> . VarDec LB INT RB

    ID              shift and go to state 33

    DecList                        shift and go to state 96
    VarDec                         shift and go to state 49
    Dec                            shift and go to state 51

state 74

    (28) Stmt -> IF LP . Exp RP Stmt
    (30) Stmt -> IF LP . Exp RP Stmt ELSE Stmt
    (39) Exp -> . Exp ASSIGNOP Exp
    (40) Exp -> . Exp AND Exp
    (41) Exp -> . Exp OR Exp
    (42) Exp -> . Exp RELOP Exp
    (43) Exp -> . Exp PLUS Exp
    (44) Exp -> . Exp MINUS Exp
    (45) Exp -> . Exp STAR Exp
    (46) Exp -> . Exp DIV Exp
    (47) Exp -> . LP Exp RP
    (48) Exp -> . MINUS Exp
    (49) Exp -> . NOT Exp
    (50) Exp -> . ID LP Args RP
    (51) Exp -> . ID LP RP
    (52) Exp -> . Exp LB Exp RB
    (53) Exp -> . Exp DOT ID
    (54) Exp -> . ID
    (55) Exp -> . INT
    (56) Exp -> . FLOAT

    LP              shift and go to state 66
    MINUS           shift and go to state 65
    NOT             shift and go to state 62
    ID              shift and go to state 60
    INT             shift and go to state 55
    FLOAT           shift and go to state 61

    Exp                            shift and go to state 97

state 75

    (23) CompSt -> LC DefList StmtList RC .

    ELSE            reduce using rule 23 (CompSt -> LC DefList StmtList RC .)
    IF              reduce using rule 23 (CompSt -> LC DefList StmtList RC .)
    WHILE           reduce using rule 23 (CompSt -> LC DefList StmtList RC .)
    RETURN          reduce using rule 23 (CompSt -> LC DefList StmtList RC .)
    error           reduce using rule 23 (CompSt -> LC DefList StmtList RC .)
    LP              reduce using rule 23 (CompSt -> LC DefList StmtList RC .)
    MINUS           reduce using rule 23 (CompSt -> LC DefList StmtList RC .)
    NOT             reduce using rule 23 (CompSt -> LC DefList StmtList RC .)
    ID              reduce using rule 23 (CompSt -> LC DefList StmtList RC .)
    INT             reduce using rule 23 (CompSt -> LC DefList StmtList RC .)
    FLOAT           reduce using rule 23 (CompSt -> LC DefList StmtList RC .)
    LC              reduce using rule 23 (CompSt -> LC DefList StmtList RC .)
    RC              reduce using rule 23 (CompSt -> LC DefList StmtList RC .)
    TYPE            reduce using rule 23 (CompSt -> LC DefList StmtList RC .)
    STRUCT          reduce using rule 23 (CompSt -> LC DefList StmtList RC .)
    $end            reduce using rule 23 (CompSt -> LC DefList StmtList RC .)


state 76

    (63) Stmt -> error SEMI .

    IF              reduce using rule 63 (Stmt -> error SEMI .)
    WHILE           reduce using rule 63 (Stmt -> error SEMI .)
    RETURN          reduce using rule 63 (Stmt -> error SEMI .)
    error           reduce using rule 63 (Stmt -> error SEMI .)
    LP              reduce using rule 63 (Stmt -> error SEMI .)
    MINUS           reduce using rule 63 (Stmt -> error SEMI .)
    NOT             reduce using rule 63 (Stmt -> error SEMI .)
    ID              reduce using rule 63 (Stmt -> error SEMI .)
    INT             reduce using rule 63 (Stmt -> error SEMI .)
    FLOAT           reduce using rule 63 (Stmt -> error SEMI .)
    LC              reduce using rule 63 (Stmt -> error SEMI .)
    RC              reduce using rule 63 (Stmt -> error SEMI .)
    ELSE            reduce using rule 63 (Stmt -> error SEMI .)


state 77

    (29) Stmt -> WHILE LP . Exp RP Stmt
    (39) Exp -> . Exp ASSIGNOP Exp
    (40) Exp -> . Exp AND Exp
    (41) Exp -> . Exp OR Exp
    (42) Exp -> . Exp RELOP Exp
    (43) Exp -> . Exp PLUS Exp
    (44) Exp -> . Exp MINUS Exp
    (45) Exp -> . Exp STAR Exp
    (46) Exp -> . Exp DIV Exp
    (47) Exp -> . LP Exp RP
    (48) Exp -> . MINUS Exp
    (49) Exp -> . NOT Exp
    (50) Exp -> . ID LP Args RP
    (51) Exp -> . ID LP RP
    (52) Exp -> . Exp LB Exp RB
    (53) Exp -> . Exp DOT ID
    (54) Exp -> . ID
    (55) Exp -> . INT
    (56) Exp -> . FLOAT

    LP              shift and go to state 66
    MINUS           shift and go to state 65
    NOT             shift and go to state 62
    ID              shift and go to state 60
    INT             shift and go to state 55
    FLOAT           shift and go to state 61

    Exp                            shift and go to state 98

state 78

    (50) Exp -> ID LP . Args RP
    (51) Exp -> ID LP . RP
    (57) Args -> . Exp COMMA Args
    (58) Args -> . Exp
    (39) Exp -> . Exp ASSIGNOP Exp
    (40) Exp -> . Exp AND Exp
    (41) Exp -> . Exp OR Exp
    (42) Exp -> . Exp RELOP Exp
    (43) Exp -> . Exp PLUS Exp
    (44) Exp -> . Exp MINUS Exp
    (45) Exp -> . Exp STAR Exp
    (46) Exp -> . Exp DIV Exp
    (47) Exp -> . LP Exp RP
    (48) Exp -> . MINUS Exp
    (49) Exp -> . NOT Exp
    (50) Exp -> . ID LP Args RP
    (51) Exp -> . ID LP RP
    (52) Exp -> . Exp LB Exp RB
    (53) Exp -> . Exp DOT ID
    (54) Exp -> . ID
    (55) Exp -> . INT
    (56) Exp -> . FLOAT

    RP              shift and go to state 101
    LP              shift and go to state 66
    MINUS           shift and go to state 65
    NOT             shift and go to state 62
    ID              shift and go to state 60
    INT             shift and go to state 55
    FLOAT           shift and go to state 61

    Args                           shift and go to state 99
    Exp                            shift and go to state 100

state 79

    (49) Exp -> NOT Exp .
    (39) Exp -> Exp . ASSIGNOP Exp
    (40) Exp -> Exp . AND Exp
    (41) Exp -> Exp . OR Exp
    (42) Exp -> Exp . RELOP Exp
    (43) Exp -> Exp . PLUS Exp
    (44) Exp -> Exp . MINUS Exp
    (45) Exp -> Exp . STAR Exp
    (46) Exp -> Exp . DIV Exp
    (52) Exp -> Exp . LB Exp RB
    (53) Exp -> Exp . DOT ID

    COMMA           reduce using rule 49 (Exp -> NOT Exp .)
    ASSIGNOP        reduce using rule 49 (Exp -> NOT Exp .)
    AND             reduce using rule 49 (Exp -> NOT Exp .)
    OR              reduce using rule 49 (Exp -> NOT Exp .)
    RELOP           reduce using rule 49 (Exp -> NOT Exp .)
    PLUS            reduce using rule 49 (Exp -> NOT Exp .)
    MINUS           reduce using rule 49 (Exp -> NOT Exp .)
    STAR            reduce using rule 49 (Exp -> NOT Exp .)
    DIV             reduce using rule 49 (Exp -> NOT Exp .)
    RP              reduce using rule 49 (Exp -> NOT Exp .)
    SEMI            reduce using rule 49 (Exp -> NOT Exp .)
    RB              reduce using rule 49 (Exp -> NOT Exp .)
    LB              shift and go to state 88
    DOT             shift and go to state 90

  ! LB              [ reduce using rule 49 (Exp -> NOT Exp .) ]
  ! DOT             [ reduce using rule 49 (Exp -> NOT Exp .) ]
  ! ASSIGNOP        [ shift and go to state 87 ]
  ! AND             [ shift and go to state 86 ]
  ! OR              [ shift and go to state 85 ]
  ! RELOP           [ shift and go to state 84 ]
  ! PLUS            [ shift and go to state 81 ]
  ! MINUS           [ shift and go to state 91 ]
  ! STAR            [ shift and go to state 82 ]
  ! DIV             [ shift and go to state 89 ]


state 80

    (31) Stmt -> RETURN Exp . SEMI
    (39) Exp -> Exp . ASSIGNOP Exp
    (40) Exp -> Exp . AND Exp
    (41) Exp -> Exp . OR Exp
    (42) Exp -> Exp . RELOP Exp
    (43) Exp -> Exp . PLUS Exp
    (44) Exp -> Exp . MINUS Exp
    (45) Exp -> Exp . STAR Exp
    (46) Exp -> Exp . DIV Exp
    (52) Exp -> Exp . LB Exp RB
    (53) Exp -> Exp . DOT ID

    SEMI            shift and go to state 102
    ASSIGNOP        shift and go to state 87
    AND             shift and go to state 86
    OR              shift and go to state 85
    RELOP           shift and go to state 84
    PLUS            shift and go to state 81
    MINUS           shift and go to state 91
    STAR            shift and go to state 82
    DIV             shift and go to state 89
    LB              shift and go to state 88
    DOT             shift and go to state 90


state 81

    (43) Exp -> Exp PLUS . Exp
    (39) Exp -> . Exp ASSIGNOP Exp
    (40) Exp -> . Exp AND Exp
    (41) Exp -> . Exp OR Exp
    (42) Exp -> . Exp RELOP Exp
    (43) Exp -> . Exp PLUS Exp
    (44) Exp -> . Exp MINUS Exp
    (45) Exp -> . Exp STAR Exp
    (46) Exp -> . Exp DIV Exp
    (47) Exp -> . LP Exp RP
    (48) Exp -> . MINUS Exp
    (49) Exp -> . NOT Exp
    (50) Exp -> . ID LP Args RP
    (51) Exp -> . ID LP RP
    (52) Exp -> . Exp LB Exp RB
    (53) Exp -> . Exp DOT ID
    (54) Exp -> . ID
    (55) Exp -> . INT
    (56) Exp -> . FLOAT

    LP              shift and go to state 66
    MINUS           shift and go to state 65
    NOT             shift and go to state 62
    ID              shift and go to state 60
    INT             shift and go to state 55
    FLOAT           shift and go to state 61

    Exp                            shift and go to state 103

state 82

    (45) Exp -> Exp STAR . Exp
    (39) Exp -> . Exp ASSIGNOP Exp
    (40) Exp -> . Exp AND Exp
    (41) Exp -> . Exp OR Exp
    (42) Exp -> . Exp RELOP Exp
    (43) Exp -> . Exp PLUS Exp
    (44) Exp -> . Exp MINUS Exp
    (45) Exp -> . Exp STAR Exp
    (46) Exp -> . Exp DIV Exp
    (47) Exp -> . LP Exp RP
    (48) Exp -> . MINUS Exp
    (49) Exp -> . NOT Exp
    (50) Exp -> . ID LP Args RP
    (51) Exp -> . ID LP RP
    (52) Exp -> . Exp LB Exp RB
    (53) Exp -> . Exp DOT ID
    (54) Exp -> . ID
    (55) Exp -> . INT
    (56) Exp -> . FLOAT

    LP              shift and go to state 66
    MINUS           shift and go to state 65
    NOT             shift and go to state 62
    ID              shift and go to state 60
    INT             shift and go to state 55
    FLOAT           shift and go to state 61

    Exp                            shift and go to state 104

state 83

    (26) Stmt -> Exp SEMI .

    IF              reduce using rule 26 (Stmt -> Exp SEMI .)
    WHILE           reduce using rule 26 (Stmt -> Exp SEMI .)
    RETURN          reduce using rule 26 (Stmt -> Exp SEMI .)
    error           reduce using rule 26 (Stmt -> Exp SEMI .)
    LP              reduce using rule 26 (Stmt -> Exp SEMI .)
    MINUS           reduce using rule 26 (Stmt -> Exp SEMI .)
    NOT             reduce using rule 26 (Stmt -> Exp SEMI .)
    ID              reduce using rule 26 (Stmt -> Exp SEMI .)
    INT             reduce using rule 26 (Stmt -> Exp SEMI .)
    FLOAT           reduce using rule 26 (Stmt -> Exp SEMI .)
    LC              reduce using rule 26 (Stmt -> Exp SEMI .)
    RC              reduce using rule 26 (Stmt -> Exp SEMI .)
    ELSE            reduce using rule 26 (Stmt -> Exp SEMI .)


state 84

    (42) Exp -> Exp RELOP . Exp
    (39) Exp -> . Exp ASSIGNOP Exp
    (40) Exp -> . Exp AND Exp
    (41) Exp -> . Exp OR Exp
    (42) Exp -> . Exp RELOP Exp
    (43) Exp -> . Exp PLUS Exp
    (44) Exp -> . Exp MINUS Exp
    (45) Exp -> . Exp STAR Exp
    (46) Exp -> . Exp DIV Exp
    (47) Exp -> . LP Exp RP
    (48) Exp -> . MINUS Exp
    (49) Exp -> . NOT Exp
    (50) Exp -> . ID LP Args RP
    (51) Exp -> . ID LP RP
    (52) Exp -> . Exp LB Exp RB
    (53) Exp -> . Exp DOT ID
    (54) Exp -> . ID
    (55) Exp -> . INT
    (56) Exp -> . FLOAT

    LP              shift and go to state 66
    MINUS           shift and go to state 65
    NOT             shift and go to state 62
    ID              shift and go to state 60
    INT             shift and go to state 55
    FLOAT           shift and go to state 61

    Exp                            shift and go to state 105

state 85

    (41) Exp -> Exp OR . Exp
    (39) Exp -> . Exp ASSIGNOP Exp
    (40) Exp -> . Exp AND Exp
    (41) Exp -> . Exp OR Exp
    (42) Exp -> . Exp RELOP Exp
    (43) Exp -> . Exp PLUS Exp
    (44) Exp -> . Exp MINUS Exp
    (45) Exp -> . Exp STAR Exp
    (46) Exp -> . Exp DIV Exp
    (47) Exp -> . LP Exp RP
    (48) Exp -> . MINUS Exp
    (49) Exp -> . NOT Exp
    (50) Exp -> . ID LP Args RP
    (51) Exp -> . ID LP RP
    (52) Exp -> . Exp LB Exp RB
    (53) Exp -> . Exp DOT ID
    (54) Exp -> . ID
    (55) Exp -> . INT
    (56) Exp -> . FLOAT

    LP              shift and go to state 66
    MINUS           shift and go to state 65
    NOT             shift and go to state 62
    ID              shift and go to state 60
    INT             shift and go to state 55
    FLOAT           shift and go to state 61

    Exp                            shift and go to state 106

state 86

    (40) Exp -> Exp AND . Exp
    (39) Exp -> . Exp ASSIGNOP Exp
    (40) Exp -> . Exp AND Exp
    (41) Exp -> . Exp OR Exp
    (42) Exp -> . Exp RELOP Exp
    (43) Exp -> . Exp PLUS Exp
    (44) Exp -> . Exp MINUS Exp
    (45) Exp -> . Exp STAR Exp
    (46) Exp -> . Exp DIV Exp
    (47) Exp -> . LP Exp RP
    (48) Exp -> . MINUS Exp
    (49) Exp -> . NOT Exp
    (50) Exp -> . ID LP Args RP
    (51) Exp -> . ID LP RP
    (52) Exp -> . Exp LB Exp RB
    (53) Exp -> . Exp DOT ID
    (54) Exp -> . ID
    (55) Exp -> . INT
    (56) Exp -> . FLOAT

    LP              shift and go to state 66
    MINUS           shift and go to state 65
    NOT             shift and go to state 62
    ID              shift and go to state 60
    INT             shift and go to state 55
    FLOAT           shift and go to state 61

    Exp                            shift and go to state 107

state 87

    (39) Exp -> Exp ASSIGNOP . Exp
    (39) Exp -> . Exp ASSIGNOP Exp
    (40) Exp -> . Exp AND Exp
    (41) Exp -> . Exp OR Exp
    (42) Exp -> . Exp RELOP Exp
    (43) Exp -> . Exp PLUS Exp
    (44) Exp -> . Exp MINUS Exp
    (45) Exp -> . Exp STAR Exp
    (46) Exp -> . Exp DIV Exp
    (47) Exp -> . LP Exp RP
    (48) Exp -> . MINUS Exp
    (49) Exp -> . NOT Exp
    (50) Exp -> . ID LP Args RP
    (51) Exp -> . ID LP RP
    (52) Exp -> . Exp LB Exp RB
    (53) Exp -> . Exp DOT ID
    (54) Exp -> . ID
    (55) Exp -> . INT
    (56) Exp -> . FLOAT

    LP              shift and go to state 66
    MINUS           shift and go to state 65
    NOT             shift and go to state 62
    ID              shift and go to state 60
    INT             shift and go to state 55
    FLOAT           shift and go to state 61

    Exp                            shift and go to state 108

state 88

    (52) Exp -> Exp LB . Exp RB
    (39) Exp -> . Exp ASSIGNOP Exp
    (40) Exp -> . Exp AND Exp
    (41) Exp -> . Exp OR Exp
    (42) Exp -> . Exp RELOP Exp
    (43) Exp -> . Exp PLUS Exp
    (44) Exp -> . Exp MINUS Exp
    (45) Exp -> . Exp STAR Exp
    (46) Exp -> . Exp DIV Exp
    (47) Exp -> . LP Exp RP
    (48) Exp -> . MINUS Exp
    (49) Exp -> . NOT Exp
    (50) Exp -> . ID LP Args RP
    (51) Exp -> . ID LP RP
    (52) Exp -> . Exp LB Exp RB
    (53) Exp -> . Exp DOT ID
    (54) Exp -> . ID
    (55) Exp -> . INT
    (56) Exp -> . FLOAT

    LP              shift and go to state 66
    MINUS           shift and go to state 65
    NOT             shift and go to state 62
    ID              shift and go to state 60
    INT             shift and go to state 55
    FLOAT           shift and go to state 61

    Exp                            shift and go to state 109

state 89

    (46) Exp -> Exp DIV . Exp
    (39) Exp -> . Exp ASSIGNOP Exp
    (40) Exp -> . Exp AND Exp
    (41) Exp -> . Exp OR Exp
    (42) Exp -> . Exp RELOP Exp
    (43) Exp -> . Exp PLUS Exp
    (44) Exp -> . Exp MINUS Exp
    (45) Exp -> . Exp STAR Exp
    (46) Exp -> . Exp DIV Exp
    (47) Exp -> . LP Exp RP
    (48) Exp -> . MINUS Exp
    (49) Exp -> . NOT Exp
    (50) Exp -> . ID LP Args RP
    (51) Exp -> . ID LP RP
    (52) Exp -> . Exp LB Exp RB
    (53) Exp -> . Exp DOT ID
    (54) Exp -> . ID
    (55) Exp -> . INT
    (56) Exp -> . FLOAT

    LP              shift and go to state 66
    MINUS           shift and go to state 65
    NOT             shift and go to state 62
    ID              shift and go to state 60
    INT             shift and go to state 55
    FLOAT           shift and go to state 61

    Exp                            shift and go to state 110

state 90

    (53) Exp -> Exp DOT . ID

    ID              shift and go to state 111


state 91

    (44) Exp -> Exp MINUS . Exp
    (39) Exp -> . Exp ASSIGNOP Exp
    (40) Exp -> . Exp AND Exp
    (41) Exp -> . Exp OR Exp
    (42) Exp -> . Exp RELOP Exp
    (43) Exp -> . Exp PLUS Exp
    (44) Exp -> . Exp MINUS Exp
    (45) Exp -> . Exp STAR Exp
    (46) Exp -> . Exp DIV Exp
    (47) Exp -> . LP Exp RP
    (48) Exp -> . MINUS Exp
    (49) Exp -> . NOT Exp
    (50) Exp -> . ID LP Args RP
    (51) Exp -> . ID LP RP
    (52) Exp -> . Exp LB Exp RB
    (53) Exp -> . Exp DOT ID
    (54) Exp -> . ID
    (55) Exp -> . INT
    (56) Exp -> . FLOAT

    LP              shift and go to state 66
    MINUS           shift and go to state 65
    NOT             shift and go to state 62
    ID              shift and go to state 60
    INT             shift and go to state 55
    FLOAT           shift and go to state 61

    Exp                            shift and go to state 112

state 92

    (48) Exp -> MINUS Exp .
    (39) Exp -> Exp . ASSIGNOP Exp
    (40) Exp -> Exp . AND Exp
    (41) Exp -> Exp . OR Exp
    (42) Exp -> Exp . RELOP Exp
    (43) Exp -> Exp . PLUS Exp
    (44) Exp -> Exp . MINUS Exp
    (45) Exp -> Exp . STAR Exp
    (46) Exp -> Exp . DIV Exp
    (52) Exp -> Exp . LB Exp RB
    (53) Exp -> Exp . DOT ID

    COMMA           reduce using rule 48 (Exp -> MINUS Exp .)
    ASSIGNOP        reduce using rule 48 (Exp -> MINUS Exp .)
    AND             reduce using rule 48 (Exp -> MINUS Exp .)
    OR              reduce using rule 48 (Exp -> MINUS Exp .)
    RELOP           reduce using rule 48 (Exp -> MINUS Exp .)
    PLUS            reduce using rule 48 (Exp -> MINUS Exp .)
    MINUS           reduce using rule 48 (Exp -> MINUS Exp .)
    RP              reduce using rule 48 (Exp -> MINUS Exp .)
    SEMI            reduce using rule 48 (Exp -> MINUS Exp .)
    RB              reduce using rule 48 (Exp -> MINUS Exp .)
    STAR            shift and go to state 82
    DIV             shift and go to state 89
    LB              shift and go to state 88
    DOT             shift and go to state 90

  ! STAR            [ reduce using rule 48 (Exp -> MINUS Exp .) ]
  ! DIV             [ reduce using rule 48 (Exp -> MINUS Exp .) ]
  ! LB              [ reduce using rule 48 (Exp -> MINUS Exp .) ]
  ! DOT             [ reduce using rule 48 (Exp -> MINUS Exp .) ]
  ! ASSIGNOP        [ shift and go to state 87 ]
  ! AND             [ shift and go to state 86 ]
  ! OR              [ shift and go to state 85 ]
  ! RELOP           [ shift and go to state 84 ]
  ! PLUS            [ shift and go to state 81 ]
  ! MINUS           [ shift and go to state 91 ]


state 93

    (47) Exp -> LP Exp . RP
    (39) Exp -> Exp . ASSIGNOP Exp
    (40) Exp -> Exp . AND Exp
    (41) Exp -> Exp . OR Exp
    (42) Exp -> Exp . RELOP Exp
    (43) Exp -> Exp . PLUS Exp
    (44) Exp -> Exp . MINUS Exp
    (45) Exp -> Exp . STAR Exp
    (46) Exp -> Exp . DIV Exp
    (52) Exp -> Exp . LB Exp RB
    (53) Exp -> Exp . DOT ID

    RP              shift and go to state 113
    ASSIGNOP        shift and go to state 87
    AND             shift and go to state 86
    OR              shift and go to state 85
    RELOP           shift and go to state 84
    PLUS            shift and go to state 81
    MINUS           shift and go to state 91
    STAR            shift and go to state 82
    DIV             shift and go to state 89
    LB              shift and go to state 88
    DOT             shift and go to state 90


state 94

    (24) StmtList -> Stmt StmtList .

    RC              reduce using rule 24 (StmtList -> Stmt StmtList .)


state 95

    (38) Dec -> VarDec ASSIGNOP Exp .
    (39) Exp -> Exp . ASSIGNOP Exp
    (40) Exp -> Exp . AND Exp
    (41) Exp -> Exp . OR Exp
    (42) Exp -> Exp . RELOP Exp
    (43) Exp -> Exp . PLUS Exp
    (44) Exp -> Exp . MINUS Exp
    (45) Exp -> Exp . STAR Exp
    (46) Exp -> Exp . DIV Exp
    (52) Exp -> Exp . LB Exp RB
    (53) Exp -> Exp . DOT ID

    COMMA           reduce using rule 38 (Dec -> VarDec ASSIGNOP Exp .)
    SEMI            reduce using rule 38 (Dec -> VarDec ASSIGNOP Exp .)
    ASSIGNOP        shift and go to state 87
    AND             shift and go to state 86
    OR              shift and go to state 85
    RELOP           shift and go to state 84
    PLUS            shift and go to state 81
    MINUS           shift and go to state 91
    STAR            shift and go to state 82
    DIV             shift and go to state 89
    LB              shift and go to state 88
    DOT             shift and go to state 90


state 96

    (36) DecList -> Dec COMMA DecList .

    SEMI            reduce using rule 36 (DecList -> Dec COMMA DecList .)


state 97

    (28) Stmt -> IF LP Exp . RP Stmt
    (30) Stmt -> IF LP Exp . RP Stmt ELSE Stmt
    (39) Exp -> Exp . ASSIGNOP Exp
    (40) Exp -> Exp . AND Exp
    (41) Exp -> Exp . OR Exp
    (42) Exp -> Exp . RELOP Exp
    (43) Exp -> Exp . PLUS Exp
    (44) Exp -> Exp . MINUS Exp
    (45) Exp -> Exp . STAR Exp
    (46) Exp -> Exp . DIV Exp
    (52) Exp -> Exp . LB Exp RB
    (53) Exp -> Exp . DOT ID

    RP              shift and go to state 114
    ASSIGNOP        shift and go to state 87
    AND             shift and go to state 86
    OR              shift and go to state 85
    RELOP           shift and go to state 84
    PLUS            shift and go to state 81
    MINUS           shift and go to state 91
    STAR            shift and go to state 82
    DIV             shift and go to state 89
    LB              shift and go to state 88
    DOT             shift and go to state 90


state 98

    (29) Stmt -> WHILE LP Exp . RP Stmt
    (39) Exp -> Exp . ASSIGNOP Exp
    (40) Exp -> Exp . AND Exp
    (41) Exp -> Exp . OR Exp
    (42) Exp -> Exp . RELOP Exp
    (43) Exp -> Exp . PLUS Exp
    (44) Exp -> Exp . MINUS Exp
    (45) Exp -> Exp . STAR Exp
    (46) Exp -> Exp . DIV Exp
    (52) Exp -> Exp . LB Exp RB
    (53) Exp -> Exp . DOT ID

    RP              shift and go to state 115
    ASSIGNOP        shift and go to state 87
    AND             shift and go to state 86
    OR              shift and go to state 85
    RELOP           shift and go to state 84
    PLUS            shift and go to state 81
    MINUS           shift and go to state 91
    STAR            shift and go to state 82
    DIV             shift and go to state 89
    LB              shift and go to state 88
    DOT             shift and go to state 90


state 99

    (50) Exp -> ID LP Args . RP

    RP              shift and go to state 116


state 100

    (57) Args -> Exp . COMMA Args
    (58) Args -> Exp .
    (39) Exp -> Exp . ASSIGNOP Exp
    (40) Exp -> Exp . AND Exp
    (41) Exp -> Exp . OR Exp
    (42) Exp -> Exp . RELOP Exp
    (43) Exp -> Exp . PLUS Exp
    (44) Exp -> Exp . MINUS Exp
    (45) Exp -> Exp . STAR Exp
    (46) Exp -> Exp . DIV Exp
    (52) Exp -> Exp . LB Exp RB
    (53) Exp -> Exp . DOT ID

    COMMA           shift and go to state 117
    RP              reduce using rule 58 (Args -> Exp .)
    ASSIGNOP        shift and go to state 87
    AND             shift and go to state 86
    OR              shift and go to state 85
    RELOP           shift and go to state 84
    PLUS            shift and go to state 81
    MINUS           shift and go to state 91
    STAR            shift and go to state 82
    DIV             shift and go to state 89
    LB              shift and go to state 88
    DOT             shift and go to state 90


state 101

    (51) Exp -> ID LP RP .

    COMMA           reduce using rule 51 (Exp -> ID LP RP .)
    ASSIGNOP        reduce using rule 51 (Exp -> ID LP RP .)
    AND             reduce using rule 51 (Exp -> ID LP RP .)
    OR              reduce using rule 51 (Exp -> ID LP RP .)
    RELOP           reduce using rule 51 (Exp -> ID LP RP .)
    PLUS            reduce using rule 51 (Exp -> ID LP RP .)
    MINUS           reduce using rule 51 (Exp -> ID LP RP .)
    STAR            reduce using rule 51 (Exp -> ID LP RP .)
    DIV             reduce using rule 51 (Exp -> ID LP RP .)
    LB              reduce using rule 51 (Exp -> ID LP RP .)
    DOT             reduce using rule 51 (Exp -> ID LP RP .)
    RP              reduce using rule 51 (Exp -> ID LP RP .)
    SEMI            reduce using rule 51 (Exp -> ID LP RP .)
    RB              reduce using rule 51 (Exp -> ID LP RP .)


state 102

    (31) Stmt -> RETURN Exp SEMI .

    IF              reduce using rule 31 (Stmt -> RETURN Exp SEMI .)
    WHILE           reduce using rule 31 (Stmt -> RETURN Exp SEMI .)
    RETURN          reduce using rule 31 (Stmt -> RETURN Exp SEMI .)
    error           reduce using rule 31 (Stmt -> RETURN Exp SEMI .)
    LP              reduce using rule 31 (Stmt -> RETURN Exp SEMI .)
    MINUS           reduce using rule 31 (Stmt -> RETURN Exp SEMI .)
    NOT             reduce using rule 31 (Stmt -> RETURN Exp SEMI .)
    ID              reduce using rule 31 (Stmt -> RETURN Exp SEMI .)
    INT             reduce using rule 31 (Stmt -> RETURN Exp SEMI .)
    FLOAT           reduce using rule 31 (Stmt -> RETURN Exp SEMI .)
    LC              reduce using rule 31 (Stmt -> RETURN Exp SEMI .)
    RC              reduce using rule 31 (Stmt -> RETURN Exp SEMI .)
    ELSE            reduce using rule 31 (Stmt -> RETURN Exp SEMI .)


state 103

    (43) Exp -> Exp PLUS Exp .
    (39) Exp -> Exp . ASSIGNOP Exp
    (40) Exp -> Exp . AND Exp
    (41) Exp -> Exp . OR Exp
    (42) Exp -> Exp . RELOP Exp
    (43) Exp -> Exp . PLUS Exp
    (44) Exp -> Exp . MINUS Exp
    (45) Exp -> Exp . STAR Exp
    (46) Exp -> Exp . DIV Exp
    (52) Exp -> Exp . LB Exp RB
    (53) Exp -> Exp . DOT ID

    COMMA           reduce using rule 43 (Exp -> Exp PLUS Exp .)
    ASSIGNOP        reduce using rule 43 (Exp -> Exp PLUS Exp .)
    AND             reduce using rule 43 (Exp -> Exp PLUS Exp .)
    OR              reduce using rule 43 (Exp -> Exp PLUS Exp .)
    RELOP           reduce using rule 43 (Exp -> Exp PLUS Exp .)
    PLUS            reduce using rule 43 (Exp -> Exp PLUS Exp .)
    MINUS           reduce using rule 43 (Exp -> Exp PLUS Exp .)
    RP              reduce using rule 43 (Exp -> Exp PLUS Exp .)
    SEMI            reduce using rule 43 (Exp -> Exp PLUS Exp .)
    RB              reduce using rule 43 (Exp -> Exp PLUS Exp .)
    STAR            shift and go to state 82
    DIV             shift and go to state 89
    LB              shift and go to state 88
    DOT             shift and go to state 90

  ! STAR            [ reduce using rule 43 (Exp -> Exp PLUS Exp .) ]
  ! DIV             [ reduce using rule 43 (Exp -> Exp PLUS Exp .) ]
  ! LB              [ reduce using rule 43 (Exp -> Exp PLUS Exp .) ]
  ! DOT             [ reduce using rule 43 (Exp -> Exp PLUS Exp .) ]
  ! ASSIGNOP        [ shift and go to state 87 ]
  ! AND             [ shift and go to state 86 ]
  ! OR              [ shift and go to state 85 ]
  ! RELOP           [ shift and go to state 84 ]
  ! PLUS            [ shift and go to state 81 ]
  ! MINUS           [ shift and go to state 91 ]


state 104

    (45) Exp -> Exp STAR Exp .
    (39) Exp -> Exp . ASSIGNOP Exp
    (40) Exp -> Exp . AND Exp
    (41) Exp -> Exp . OR Exp
    (42) Exp -> Exp . RELOP Exp
    (43) Exp -> Exp . PLUS Exp
    (44) Exp -> Exp . MINUS Exp
    (45) Exp -> Exp . STAR Exp
    (46) Exp -> Exp . DIV Exp
    (52) Exp -> Exp . LB Exp RB
    (53) Exp -> Exp . DOT ID

    COMMA           reduce using rule 45 (Exp -> Exp STAR Exp .)
    ASSIGNOP        reduce using rule 45 (Exp -> Exp STAR Exp .)
    AND             reduce using rule 45 (Exp -> Exp STAR Exp .)
    OR              reduce using rule 45 (Exp -> Exp STAR Exp .)
    RELOP           reduce using rule 45 (Exp -> Exp STAR Exp .)
    PLUS            reduce using rule 45 (Exp -> Exp STAR Exp .)
    MINUS           reduce using rule 45 (Exp -> Exp STAR Exp .)
    STAR            reduce using rule 45 (Exp -> Exp STAR Exp .)
    DIV             reduce using rule 45 (Exp -> Exp STAR Exp .)
    RP              reduce using rule 45 (Exp -> Exp STAR Exp .)
    SEMI            reduce using rule 45 (Exp -> Exp STAR Exp .)
    RB              reduce using rule 45 (Exp -> Exp STAR Exp .)
    LB              shift and go to state 88
    DOT             shift and go to state 90

  ! LB              [ reduce using rule 45 (Exp -> Exp STAR Exp .) ]
  ! DOT             [ reduce using rule 45 (Exp -> Exp STAR Exp .) ]
  ! ASSIGNOP        [ shift and go to state 87 ]
  ! AND             [ shift and go to state 86 ]
  ! OR              [ shift and go to state 85 ]
  ! RELOP           [ shift and go to state 84 ]
  ! PLUS            [ shift and go to state 81 ]
  ! MINUS           [ shift and go to state 91 ]
  ! STAR            [ shift and go to state 82 ]
  ! DIV             [ shift and go to state 89 ]


state 105

    (42) Exp -> Exp RELOP Exp .
    (39) Exp -> Exp . ASSIGNOP Exp
    (40) Exp -> Exp . AND Exp
    (41) Exp -> Exp . OR Exp
    (42) Exp -> Exp . RELOP Exp
    (43) Exp -> Exp . PLUS Exp
    (44) Exp -> Exp . MINUS Exp
    (45) Exp -> Exp . STAR Exp
    (46) Exp -> Exp . DIV Exp
    (52) Exp -> Exp . LB Exp RB
    (53) Exp -> Exp . DOT ID

    COMMA           reduce using rule 42 (Exp -> Exp RELOP Exp .)
    ASSIGNOP        reduce using rule 42 (Exp -> Exp RELOP Exp .)
    AND             reduce using rule 42 (Exp -> Exp RELOP Exp .)
    OR              reduce using rule 42 (Exp -> Exp RELOP Exp .)
    RELOP           reduce using rule 42 (Exp -> Exp RELOP Exp .)
    RP              reduce using rule 42 (Exp -> Exp RELOP Exp .)
    SEMI            reduce using rule 42 (Exp -> Exp RELOP Exp .)
    RB              reduce using rule 42 (Exp -> Exp RELOP Exp .)
    PLUS            shift and go to state 81
    MINUS           shift and go to state 91
    STAR            shift and go to state 82
    DIV             shift and go to state 89
    LB              shift and go to state 88
    DOT             shift and go to state 90

  ! PLUS            [ reduce using rule 42 (Exp -> Exp RELOP Exp .) ]
  ! MINUS           [ reduce using rule 42 (Exp -> Exp RELOP Exp .) ]
  ! STAR            [ reduce using rule 42 (Exp -> Exp RELOP Exp .) ]
  ! DIV             [ reduce using rule 42 (Exp -> Exp RELOP Exp .) ]
  ! LB              [ reduce using rule 42 (Exp -> Exp RELOP Exp .) ]
  ! DOT             [ reduce using rule 42 (Exp -> Exp RELOP Exp .) ]
  ! ASSIGNOP        [ shift and go to state 87 ]
  ! AND             [ shift and go to state 86 ]
  ! OR              [ shift and go to state 85 ]
  ! RELOP           [ shift and go to state 84 ]


state 106

    (41) Exp -> Exp OR Exp .
    (39) Exp -> Exp . ASSIGNOP Exp
    (40) Exp -> Exp . AND Exp
    (41) Exp -> Exp . OR Exp
    (42) Exp -> Exp . RELOP Exp
    (43) Exp -> Exp . PLUS Exp
    (44) Exp -> Exp . MINUS Exp
    (45) Exp -> Exp . STAR Exp
    (46) Exp -> Exp . DIV Exp
    (52) Exp -> Exp . LB Exp RB
    (53) Exp -> Exp . DOT ID

    COMMA           reduce using rule 41 (Exp -> Exp OR Exp .)
    ASSIGNOP        reduce using rule 41 (Exp -> Exp OR Exp .)
    OR              reduce using rule 41 (Exp -> Exp OR Exp .)
    RP              reduce using rule 41 (Exp -> Exp OR Exp .)
    SEMI            reduce using rule 41 (Exp -> Exp OR Exp .)
    RB              reduce using rule 41 (Exp -> Exp OR Exp .)
    AND             shift and go to state 86
    RELOP           shift and go to state 84
    PLUS            shift and go to state 81
    MINUS           shift and go to state 91
    STAR            shift and go to state 82
    DIV             shift and go to state 89
    LB              shift and go to state 88
    DOT             shift and go to state 90

  ! AND             [ reduce using rule 41 (Exp -> Exp OR Exp .) ]
  ! RELOP           [ reduce using rule 41 (Exp -> Exp OR Exp .) ]
  ! PLUS            [ reduce using rule 41 (Exp -> Exp OR Exp .) ]
  ! MINUS           [ reduce using rule 41 (Exp -> Exp OR Exp .) ]
  ! STAR            [ reduce using rule 41 (Exp -> Exp OR Exp .) ]
  ! DIV             [ reduce using rule 41 (Exp -> Exp OR Exp .) ]
  ! LB              [ reduce using rule 41 (Exp -> Exp OR Exp .) ]
  ! DOT             [ reduce using rule 41 (Exp -> Exp OR Exp .) ]
  ! ASSIGNOP        [ shift and go to state 87 ]
  ! OR              [ shift and go to state 85 ]


state 107

    (40) Exp -> Exp AND Exp .
    (39) Exp -> Exp . ASSIGNOP Exp
    (40) Exp -> Exp . AND Exp
    (41) Exp -> Exp . OR Exp
    (42) Exp -> Exp . RELOP Exp
    (43) Exp -> Exp . PLUS Exp
    (44) Exp -> Exp . MINUS Exp
    (45) Exp -> Exp . STAR Exp
    (46) Exp -> Exp . DIV Exp
    (52) Exp -> Exp . LB Exp RB
    (53) Exp -> Exp . DOT ID

    COMMA           reduce using rule 40 (Exp -> Exp AND Exp .)
    ASSIGNOP        reduce using rule 40 (Exp -> Exp AND Exp .)
    AND             reduce using rule 40 (Exp -> Exp AND Exp .)
    OR              reduce using rule 40 (Exp -> Exp AND Exp .)
    RP              reduce using rule 40 (Exp -> Exp AND Exp .)
    SEMI            reduce using rule 40 (Exp -> Exp AND Exp .)
    RB              reduce using rule 40 (Exp -> Exp AND Exp .)
    RELOP           shift and go to state 84
    PLUS            shift and go to state 81
    MINUS           shift and go to state 91
    STAR            shift and go to state 82
    DIV             shift and go to state 89
    LB              shift and go to state 88
    DOT             shift and go to state 90

  ! RELOP           [ reduce using rule 40 (Exp -> Exp AND Exp .) ]
  ! PLUS            [ reduce using rule 40 (Exp -> Exp AND Exp .) ]
  ! MINUS           [ reduce using rule 40 (Exp -> Exp AND Exp .) ]
  ! STAR            [ reduce using rule 40 (Exp -> Exp AND Exp .) ]
  ! DIV             [ reduce using rule 40 (Exp -> Exp AND Exp .) ]
  ! LB              [ reduce using rule 40 (Exp -> Exp AND Exp .) ]
  ! DOT             [ reduce using rule 40 (Exp -> Exp AND Exp .) ]
  ! ASSIGNOP        [ shift and go to state 87 ]
  ! AND             [ shift and go to state 86 ]
  ! OR              [ shift and go to state 85 ]


state 108

    (39) Exp -> Exp ASSIGNOP Exp .
    (39) Exp -> Exp . ASSIGNOP Exp
    (40) Exp -> Exp . AND Exp
    (41) Exp -> Exp . OR Exp
    (42) Exp -> Exp . RELOP Exp
    (43) Exp -> Exp . PLUS Exp
    (44) Exp -> Exp . MINUS Exp
    (45) Exp -> Exp . STAR Exp
    (46) Exp -> Exp . DIV Exp
    (52) Exp -> Exp . LB Exp RB
    (53) Exp -> Exp . DOT ID

    COMMA           reduce using rule 39 (Exp -> Exp ASSIGNOP Exp .)
    RP              reduce using rule 39 (Exp -> Exp ASSIGNOP Exp .)
    SEMI            reduce using rule 39 (Exp -> Exp ASSIGNOP Exp .)
    RB              reduce using rule 39 (Exp -> Exp ASSIGNOP Exp .)
    ASSIGNOP        shift and go to state 87
    AND             shift and go to state 86
    OR              shift and go to state 85
    RELOP           shift and go to state 84
    PLUS            shift and go to state 81
    MINUS           shift and go to state 91
    STAR            shift and go to state 82
    DIV             shift and go to state 89
    LB              shift and go to state 88
    DOT             shift and go to state 90

  ! ASSIGNOP        [ reduce using rule 39 (Exp -> Exp ASSIGNOP Exp .) ]
  ! AND             [ reduce using rule 39 (Exp -> Exp ASSIGNOP Exp .) ]
  ! OR              [ reduce using rule 39 (Exp -> Exp ASSIGNOP Exp .) ]
  ! RELOP           [ reduce using rule 39 (Exp -> Exp ASSIGNOP Exp .) ]
  ! PLUS            [ reduce using rule 39 (Exp -> Exp ASSIGNOP Exp .) ]
  ! MINUS           [ reduce using rule 39 (Exp -> Exp ASSIGNOP Exp .) ]
  ! STAR            [ reduce using rule 39 (Exp -> Exp ASSIGNOP Exp .) ]
  ! DIV             [ reduce using rule 39 (Exp -> Exp ASSIGNOP Exp .) ]
  ! LB              [ reduce using rule 39 (Exp -> Exp ASSIGNOP Exp .) ]
  ! DOT             [ reduce using rule 39 (Exp -> Exp ASSIGNOP Exp .) ]


state 109

    (52) Exp -> Exp LB Exp . RB
    (39) Exp -> Exp . ASSIGNOP Exp
    (40) Exp -> Exp . AND Exp
    (41) Exp -> Exp . OR Exp
    (42) Exp -> Exp . RELOP Exp
    (43) Exp -> Exp . PLUS Exp
    (44) Exp -> Exp . MINUS Exp
    (45) Exp -> Exp . STAR Exp
    (46) Exp -> Exp . DIV Exp
    (52) Exp -> Exp . LB Exp RB
    (53) Exp -> Exp . DOT ID

    RB              shift and go to state 118
    ASSIGNOP        shift and go to state 87
    AND             shift and go to state 86
    OR              shift and go to state 85
    RELOP           shift and go to state 84
    PLUS            shift and go to state 81
    MINUS           shift and go to state 91
    STAR            shift and go to state 82
    DIV             shift and go to state 89
    LB              shift and go to state 88
    DOT             shift and go to state 90


state 110

    (46) Exp -> Exp DIV Exp .
    (39) Exp -> Exp . ASSIGNOP Exp
    (40) Exp -> Exp . AND Exp
    (41) Exp -> Exp . OR Exp
    (42) Exp -> Exp . RELOP Exp
    (43) Exp -> Exp . PLUS Exp
    (44) Exp -> Exp . MINUS Exp
    (45) Exp -> Exp . STAR Exp
    (46) Exp -> Exp . DIV Exp
    (52) Exp -> Exp . LB Exp RB
    (53) Exp -> Exp . DOT ID

    COMMA           reduce using rule 46 (Exp -> Exp DIV Exp .)
    ASSIGNOP        reduce using rule 46 (Exp -> Exp DIV Exp .)
    AND             reduce using rule 46 (Exp -> Exp DIV Exp .)
    OR              reduce using rule 46 (Exp -> Exp DIV Exp .)
    RELOP           reduce using rule 46 (Exp -> Exp DIV Exp .)
    PLUS            reduce using rule 46 (Exp -> Exp DIV Exp .)
    MINUS           reduce using rule 46 (Exp -> Exp DIV Exp .)
    STAR            reduce using rule 46 (Exp -> Exp DIV Exp .)
    DIV             reduce using rule 46 (Exp -> Exp DIV Exp .)
    RP              reduce using rule 46 (Exp -> Exp DIV Exp .)
    SEMI            reduce using rule 46 (Exp -> Exp DIV Exp .)
    RB              reduce using rule 46 (Exp -> Exp DIV Exp .)
    LB              shift and go to state 88
    DOT             shift and go to state 90

  ! LB              [ reduce using rule 46 (Exp -> Exp DIV Exp .) ]
  ! DOT             [ reduce using rule 46 (Exp -> Exp DIV Exp .) ]
  ! ASSIGNOP        [ shift and go to state 87 ]
  ! AND             [ shift and go to state 86 ]
  ! OR              [ shift and go to state 85 ]
  ! RELOP           [ shift and go to state 84 ]
  ! PLUS            [ shift and go to state 81 ]
  ! MINUS           [ shift and go to state 91 ]
  ! STAR            [ shift and go to state 82 ]
  ! DIV             [ shift and go to state 89 ]


state 111

    (53) Exp -> Exp DOT ID .

    COMMA           reduce using rule 53 (Exp -> Exp DOT ID .)
    ASSIGNOP        reduce using rule 53 (Exp -> Exp DOT ID .)
    AND             reduce using rule 53 (Exp -> Exp DOT ID .)
    OR              reduce using rule 53 (Exp -> Exp DOT ID .)
    RELOP           reduce using rule 53 (Exp -> Exp DOT ID .)
    PLUS            reduce using rule 53 (Exp -> Exp DOT ID .)
    MINUS           reduce using rule 53 (Exp -> Exp DOT ID .)
    STAR            reduce using rule 53 (Exp -> Exp DOT ID .)
    DIV             reduce using rule 53 (Exp -> Exp DOT ID .)
    LB              reduce using rule 53 (Exp -> Exp DOT ID .)
    DOT             reduce using rule 53 (Exp -> Exp DOT ID .)
    RP              reduce using rule 53 (Exp -> Exp DOT ID .)
    SEMI            reduce using rule 53 (Exp -> Exp DOT ID .)
    RB              reduce using rule 53 (Exp -> Exp DOT ID .)


state 112

    (44) Exp -> Exp MINUS Exp .
    (39) Exp -> Exp . ASSIGNOP Exp
    (40) Exp -> Exp . AND Exp
    (41) Exp -> Exp . OR Exp
    (42) Exp -> Exp . RELOP Exp
    (43) Exp -> Exp . PLUS Exp
    (44) Exp -> Exp . MINUS Exp
    (45) Exp -> Exp . STAR Exp
    (46) Exp -> Exp . DIV Exp
    (52) Exp -> Exp . LB Exp RB
    (53) Exp -> Exp . DOT ID

    COMMA           reduce using rule 44 (Exp -> Exp MINUS Exp .)
    ASSIGNOP        reduce using rule 44 (Exp -> Exp MINUS Exp .)
    AND             reduce using rule 44 (Exp -> Exp MINUS Exp .)
    OR              reduce using rule 44 (Exp -> Exp MINUS Exp .)
    RELOP           reduce using rule 44 (Exp -> Exp MINUS Exp .)
    PLUS            reduce using rule 44 (Exp -> Exp MINUS Exp .)
    MINUS           reduce using rule 44 (Exp -> Exp MINUS Exp .)
    RP              reduce using rule 44 (Exp -> Exp MINUS Exp .)
    SEMI            reduce using rule 44 (Exp -> Exp MINUS Exp .)
    RB              reduce using rule 44 (Exp -> Exp MINUS Exp .)
    STAR            shift and go to state 82
    DIV             shift and go to state 89
    LB              shift and go to state 88
    DOT             shift and go to state 90

  ! STAR            [ reduce using rule 44 (Exp -> Exp MINUS Exp .) ]
  ! DIV             [ reduce using rule 44 (Exp -> Exp MINUS Exp .) ]
  ! LB              [ reduce using rule 44 (Exp -> Exp MINUS Exp .) ]
  ! DOT             [ reduce using rule 44 (Exp -> Exp MINUS Exp .) ]
  ! ASSIGNOP        [ shift and go to state 87 ]
  ! AND             [ shift and go to state 86 ]
  ! OR              [ shift and go to state 85 ]
  ! RELOP           [ shift and go to state 84 ]
  ! PLUS            [ shift and go to state 81 ]
  ! MINUS           [ shift and go to state 91 ]


state 113

    (47) Exp -> LP Exp RP .

    COMMA           reduce using rule 47 (Exp -> LP Exp RP .)
    ASSIGNOP        reduce using rule 47 (Exp -> LP Exp RP .)
    AND             reduce using rule 47 (Exp -> LP Exp RP .)
    OR              reduce using rule 47 (Exp -> LP Exp RP .)
    RELOP           reduce using rule 47 (Exp -> LP Exp RP .)
    PLUS            reduce using rule 47 (Exp -> LP Exp RP .)
    MINUS           reduce using rule 47 (Exp -> LP Exp RP .)
    STAR            reduce using rule 47 (Exp -> LP Exp RP .)
    DIV             reduce using rule 47 (Exp -> LP Exp RP .)
    LB              reduce using rule 47 (Exp -> LP Exp RP .)
    DOT             reduce using rule 47 (Exp -> LP Exp RP .)
    RP              reduce using rule 47 (Exp -> LP Exp RP .)
    SEMI            reduce using rule 47 (Exp -> LP Exp RP .)
    RB              reduce using rule 47 (Exp -> LP Exp RP .)


state 114

    (28) Stmt -> IF LP Exp RP . Stmt
    (30) Stmt -> IF LP Exp RP . Stmt ELSE Stmt
    (26) Stmt -> . Exp SEMI
    (27) Stmt -> . CompSt
    (28) Stmt -> . IF LP Exp RP Stmt
    (29) Stmt -> . WHILE LP Exp RP Stmt
    (30) Stmt -> . IF LP Exp RP Stmt ELSE Stmt
    (31) Stmt -> . RETURN Exp SEMI
    (63) Stmt -> . error SEMI
    (39) Exp -> . Exp ASSIGNOP Exp
    (40) Exp -> . Exp AND Exp
    (41) Exp -> . Exp OR Exp
    (42) Exp -> . Exp RELOP Exp
    (43) Exp -> . Exp PLUS Exp
    (44) Exp -> . Exp MINUS Exp
    (45) Exp -> . Exp STAR Exp
    (46) Exp -> . Exp DIV Exp
    (47) Exp -> . LP Exp RP
    (48) Exp -> . MINUS Exp
    (49) Exp -> . NOT Exp
    (50) Exp -> . ID LP Args RP
    (51) Exp -> . ID LP RP
    (52) Exp -> . Exp LB Exp RB
    (53) Exp -> . Exp DOT ID
    (54) Exp -> . ID
    (55) Exp -> . INT
    (56) Exp -> . FLOAT
    (23) CompSt -> . LC DefList StmtList RC
    (62) CompSt -> . error RC

    IF              shift and go to state 53
    WHILE           shift and go to state 59
    RETURN          shift and go to state 63
    error           shift and go to state 58
    LP              shift and go to state 66
    MINUS           shift and go to state 65
    NOT             shift and go to state 62
    ID              shift and go to state 60
    INT             shift and go to state 55
    FLOAT           shift and go to state 61
    LC              shift and go to state 27

    Exp                            shift and go to state 64
    CompSt                         shift and go to state 57
    Stmt                           shift and go to state 119

state 115

    (29) Stmt -> WHILE LP Exp RP . Stmt
    (26) Stmt -> . Exp SEMI
    (27) Stmt -> . CompSt
    (28) Stmt -> . IF LP Exp RP Stmt
    (29) Stmt -> . WHILE LP Exp RP Stmt
    (30) Stmt -> . IF LP Exp RP Stmt ELSE Stmt
    (31) Stmt -> . RETURN Exp SEMI
    (63) Stmt -> . error SEMI
    (39) Exp -> . Exp ASSIGNOP Exp
    (40) Exp -> . Exp AND Exp
    (41) Exp -> . Exp OR Exp
    (42) Exp -> . Exp RELOP Exp
    (43) Exp -> . Exp PLUS Exp
    (44) Exp -> . Exp MINUS Exp
    (45) Exp -> . Exp STAR Exp
    (46) Exp -> . Exp DIV Exp
    (47) Exp -> . LP Exp RP
    (48) Exp -> . MINUS Exp
    (49) Exp -> . NOT Exp
    (50) Exp -> . ID LP Args RP
    (51) Exp -> . ID LP RP
    (52) Exp -> . Exp LB Exp RB
    (53) Exp -> . Exp DOT ID
    (54) Exp -> . ID
    (55) Exp -> . INT
    (56) Exp -> . FLOAT
    (23) CompSt -> . LC DefList StmtList RC
    (62) CompSt -> . error RC

    IF              shift and go to state 53
    WHILE           shift and go to state 59
    RETURN          shift and go to state 63
    error           shift and go to state 58
    LP              shift and go to state 66
    MINUS           shift and go to state 65
    NOT             shift and go to state 62
    ID              shift and go to state 60
    INT             shift and go to state 55
    FLOAT           shift and go to state 61
    LC              shift and go to state 27

    Exp                            shift and go to state 64
    CompSt                         shift and go to state 57
    Stmt                           shift and go to state 120

state 116

    (50) Exp -> ID LP Args RP .

    COMMA           reduce using rule 50 (Exp -> ID LP Args RP .)
    ASSIGNOP        reduce using rule 50 (Exp -> ID LP Args RP .)
    AND             reduce using rule 50 (Exp -> ID LP Args RP .)
    OR              reduce using rule 50 (Exp -> ID LP Args RP .)
    RELOP           reduce using rule 50 (Exp -> ID LP Args RP .)
    PLUS            reduce using rule 50 (Exp -> ID LP Args RP .)
    MINUS           reduce using rule 50 (Exp -> ID LP Args RP .)
    STAR            reduce using rule 50 (Exp -> ID LP Args RP .)
    DIV             reduce using rule 50 (Exp -> ID LP Args RP .)
    LB              reduce using rule 50 (Exp -> ID LP Args RP .)
    DOT             reduce using rule 50 (Exp -> ID LP Args RP .)
    RP              reduce using rule 50 (Exp -> ID LP Args RP .)
    SEMI            reduce using rule 50 (Exp -> ID LP Args RP .)
    RB              reduce using rule 50 (Exp -> ID LP Args RP .)


state 117

    (57) Args -> Exp COMMA . Args
    (57) Args -> . Exp COMMA Args
    (58) Args -> . Exp
    (39) Exp -> . Exp ASSIGNOP Exp
    (40) Exp -> . Exp AND Exp
    (41) Exp -> . Exp OR Exp
    (42) Exp -> . Exp RELOP Exp
    (43) Exp -> . Exp PLUS Exp
    (44) Exp -> . Exp MINUS Exp
    (45) Exp -> . Exp STAR Exp
    (46) Exp -> . Exp DIV Exp
    (47) Exp -> . LP Exp RP
    (48) Exp -> . MINUS Exp
    (49) Exp -> . NOT Exp
    (50) Exp -> . ID LP Args RP
    (51) Exp -> . ID LP RP
    (52) Exp -> . Exp LB Exp RB
    (53) Exp -> . Exp DOT ID
    (54) Exp -> . ID
    (55) Exp -> . INT
    (56) Exp -> . FLOAT

    LP              shift and go to state 66
    MINUS           shift and go to state 65
    NOT             shift and go to state 62
    ID              shift and go to state 60
    INT             shift and go to state 55
    FLOAT           shift and go to state 61

    Exp                            shift and go to state 100
    Args                           shift and go to state 121

state 118

    (52) Exp -> Exp LB Exp RB .

    COMMA           reduce using rule 52 (Exp -> Exp LB Exp RB .)
    ASSIGNOP        reduce using rule 52 (Exp -> Exp LB Exp RB .)
    AND             reduce using rule 52 (Exp -> Exp LB Exp RB .)
    OR              reduce using rule 52 (Exp -> Exp LB Exp RB .)
    RELOP           reduce using rule 52 (Exp -> Exp LB Exp RB .)
    PLUS            reduce using rule 52 (Exp -> Exp LB Exp RB .)
    MINUS           reduce using rule 52 (Exp -> Exp LB Exp RB .)
    STAR            reduce using rule 52 (Exp -> Exp LB Exp RB .)
    DIV             reduce using rule 52 (Exp -> Exp LB Exp RB .)
    LB              reduce using rule 52 (Exp -> Exp LB Exp RB .)
    DOT             reduce using rule 52 (Exp -> Exp LB Exp RB .)
    RP              reduce using rule 52 (Exp -> Exp LB Exp RB .)
    SEMI            reduce using rule 52 (Exp -> Exp LB Exp RB .)
    RB              reduce using rule 52 (Exp -> Exp LB Exp RB .)


state 119

    (28) Stmt -> IF LP Exp RP Stmt .
    (30) Stmt -> IF LP Exp RP Stmt . ELSE Stmt

    IF              reduce using rule 28 (Stmt -> IF LP Exp RP Stmt .)
    WHILE           reduce using rule 28 (Stmt -> IF LP Exp RP Stmt .)
    RETURN          reduce using rule 28 (Stmt -> IF LP Exp RP Stmt .)
    error           reduce using rule 28 (Stmt -> IF LP Exp RP Stmt .)
    LP              reduce using rule 28 (Stmt -> IF LP Exp RP Stmt .)
    MINUS           reduce using rule 28 (Stmt -> IF LP Exp RP Stmt .)
    NOT             reduce using rule 28 (Stmt -> IF LP Exp RP Stmt .)
    ID              reduce using rule 28 (Stmt -> IF LP Exp RP Stmt .)
    INT             reduce using rule 28 (Stmt -> IF LP Exp RP Stmt .)
    FLOAT           reduce using rule 28 (Stmt -> IF LP Exp RP Stmt .)
    LC              reduce using rule 28 (Stmt -> IF LP Exp RP Stmt .)
    RC              reduce using rule 28 (Stmt -> IF LP Exp RP Stmt .)
    ELSE            shift and go to state 122

  ! ELSE            [ reduce using rule 28 (Stmt -> IF LP Exp RP Stmt .) ]


state 120

    (29) Stmt -> WHILE LP Exp RP Stmt .

    IF              reduce using rule 29 (Stmt -> WHILE LP Exp RP Stmt .)
    WHILE           reduce using rule 29 (Stmt -> WHILE LP Exp RP Stmt .)
    RETURN          reduce using rule 29 (Stmt -> WHILE LP Exp RP Stmt .)
    error           reduce using rule 29 (Stmt -> WHILE LP Exp RP Stmt .)
    LP              reduce using rule 29 (Stmt -> WHILE LP Exp RP Stmt .)
    MINUS           reduce using rule 29 (Stmt -> WHILE LP Exp RP Stmt .)
    NOT             reduce using rule 29 (Stmt -> WHILE LP Exp RP Stmt .)
    ID              reduce using rule 29 (Stmt -> WHILE LP Exp RP Stmt .)
    INT             reduce using rule 29 (Stmt -> WHILE LP Exp RP Stmt .)
    FLOAT           reduce using rule 29 (Stmt -> WHILE LP Exp RP Stmt .)
    LC              reduce using rule 29 (Stmt -> WHILE LP Exp RP Stmt .)
    RC              reduce using rule 29 (Stmt -> WHILE LP Exp RP Stmt .)
    ELSE            reduce using rule 29 (Stmt -> WHILE LP Exp RP Stmt .)


state 121

    (57) Args -> Exp COMMA Args .

    RP              reduce using rule 57 (Args -> Exp COMMA Args .)


state 122

    (30) Stmt -> IF LP Exp RP Stmt ELSE . Stmt
    (26) Stmt -> . Exp SEMI
    (27) Stmt -> . CompSt
    (28) Stmt -> . IF LP Exp RP Stmt
    (29) Stmt -> . WHILE LP Exp RP Stmt
    (30) Stmt -> . IF LP Exp RP Stmt ELSE Stmt
    (31) Stmt -> . RETURN Exp SEMI
    (63) Stmt -> . error SEMI
    (39) Exp -> . Exp ASSIGNOP Exp
    (40) Exp -> . Exp AND Exp
    (41) Exp -> . Exp OR Exp
    (42) Exp -> . Exp RELOP Exp
    (43) Exp -> . Exp PLUS Exp
    (44) Exp -> . Exp MINUS Exp
    (45) Exp -> . Exp STAR Exp
    (46) Exp -> . Exp DIV Exp
    (47) Exp -> . LP Exp RP
    (48) Exp -> . MINUS Exp
    (49) Exp -> . NOT Exp
    (50) Exp -> . ID LP Args RP
    (51) Exp -> . ID LP RP
    (52) Exp -> . Exp LB Exp RB
    (53) Exp -> . Exp DOT ID
    (54) Exp -> . ID
    (55) Exp -> . INT
    (56) Exp -> . FLOAT
    (23) CompSt -> . LC DefList StmtList RC
    (62) CompSt -> . error RC

    IF              shift and go to state 53
    WHILE           shift and go to state 59
    RETURN          shift and go to state 63
    error           shift and go to state 58
    LP              shift and go to state 66
    MINUS           shift and go to state 65
    NOT             shift and go to state 62
    ID              shift and go to state 60
    INT             shift and go to state 55
    FLOAT           shift and go to state 61
    LC              shift and go to state 27

    Exp                            shift and go to state 64
    CompSt                         shift and go to state 57
    Stmt                           shift and go to state 123

state 123

    (30) Stmt -> IF LP Exp RP Stmt ELSE Stmt .

    IF              reduce using rule 30 (Stmt -> IF LP Exp RP Stmt ELSE Stmt .)
    WHILE           reduce using rule 30 (Stmt -> IF LP Exp RP Stmt ELSE Stmt .)
    RETURN          reduce using rule 30 (Stmt -> IF LP Exp RP Stmt ELSE Stmt .)
    error           reduce using rule 30 (Stmt -> IF LP Exp RP Stmt ELSE Stmt .)
    LP              reduce using rule 30 (Stmt -> IF LP Exp RP Stmt ELSE Stmt .)
    MINUS           reduce using rule 30 (Stmt -> IF LP Exp RP Stmt ELSE Stmt .)
    NOT             reduce using rule 30 (Stmt -> IF LP Exp RP Stmt ELSE Stmt .)
    ID              reduce using rule 30 (Stmt -> IF LP Exp RP Stmt ELSE Stmt .)
    INT             reduce using rule 30 (Stmt -> IF LP Exp RP Stmt ELSE Stmt .)
    FLOAT           reduce using rule 30 (Stmt -> IF LP Exp RP Stmt ELSE Stmt .)
    LC              reduce using rule 30 (Stmt -> IF LP Exp RP Stmt ELSE Stmt .)
    RC              reduce using rule 30 (Stmt -> IF LP Exp RP Stmt ELSE Stmt .)
    ELSE            reduce using rule 30 (Stmt -> IF LP Exp RP Stmt ELSE Stmt .)

